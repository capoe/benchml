Search.setIndex({"docnames": ["api", "api/benchml", "api/benchml.accumulator", "api/benchml.analysis", "api/benchml.basic", "api/benchml.benchmark", "api/benchml.conformal", "api/benchml.data", "api/benchml.descriptors", "api/benchml.descriptors.descr_basic", "api/benchml.ensemble", "api/benchml.filters", "api/benchml.filters.random_matrix", "api/benchml.hyper", "api/benchml.inputs", "api/benchml.kernels", "api/benchml.kernels.kern_basic", "api/benchml.logger", "api/benchml.matrix", "api/benchml.models", "api/benchml.models.common", "api/benchml.models.mod_basic", "api/benchml.models.mod_bench", "api/benchml.models.mod_bench_class", "api/benchml.models.mod_bench_xtal", "api/benchml.models.mod_dscribe", "api/benchml.models.mod_logd", "api/benchml.models.mod_logd_ai", "api/benchml.models.mod_xy", "api/benchml.pipeline", "api/benchml.plugins", "api/benchml.plugins.plugin_asap", "api/benchml.plugins.plugin_check", "api/benchml.plugins.plugin_cx", "api/benchml.plugins.plugin_dscribe", "api/benchml.plugins.plugin_gylmxx", "api/benchml.plugins.plugin_nphil", "api/benchml.plugins.plugin_physchem", "api/benchml.plugins.plugin_rdkit", "api/benchml.plugins.plugin_soap", "api/benchml.plugins.plugin_torch", "api/benchml.predictors", "api/benchml.predictors.gaussian_process", "api/benchml.predictors.pred_sklearn", "api/benchml.ptable", "api/benchml.readwrite", "api/benchml.splits", "api/benchml.test", "api/benchml.transforms", "api/benchml.utils", "dev", "index", "models/bmol_acsf", "models/bmol_cm", "models/bmol_ecfp", "models/bmol_ecfp_class", "models/bmol_gylm", "models/bmol_gylm_match_class", "models/bmol_mbtr", "models/bmol_pdf", "models/bmol_physchem", "models/bmol_physchem_class", "models/bmol_soap", "models/bxtal_acsf", "models/bxtal_esm", "models/bxtal_gylm", "models/bxtal_mbtr", "models/bxtal_pdf", "models/bxtal_physchem", "models/bxtal_soap", "models/dscribe", "models/ecfp", "models/gylm", "models/logd", "models/logd_ai", "models/logd_extensive", "models/models", "models/soap", "models/xy_classifiers", "models/xy_regressors", "use"], "filenames": ["api.rst", "api/benchml.rst", "api/benchml.accumulator.rst", "api/benchml.analysis.rst", "api/benchml.basic.rst", "api/benchml.benchmark.rst", "api/benchml.conformal.rst", "api/benchml.data.rst", "api/benchml.descriptors.rst", "api/benchml.descriptors.descr_basic.rst", "api/benchml.ensemble.rst", "api/benchml.filters.rst", "api/benchml.filters.random_matrix.rst", "api/benchml.hyper.rst", "api/benchml.inputs.rst", "api/benchml.kernels.rst", "api/benchml.kernels.kern_basic.rst", "api/benchml.logger.rst", "api/benchml.matrix.rst", "api/benchml.models.rst", "api/benchml.models.common.rst", "api/benchml.models.mod_basic.rst", "api/benchml.models.mod_bench.rst", "api/benchml.models.mod_bench_class.rst", "api/benchml.models.mod_bench_xtal.rst", "api/benchml.models.mod_dscribe.rst", "api/benchml.models.mod_logd.rst", "api/benchml.models.mod_logd_ai.rst", "api/benchml.models.mod_xy.rst", "api/benchml.pipeline.rst", "api/benchml.plugins.rst", "api/benchml.plugins.plugin_asap.rst", "api/benchml.plugins.plugin_check.rst", "api/benchml.plugins.plugin_cx.rst", "api/benchml.plugins.plugin_dscribe.rst", "api/benchml.plugins.plugin_gylmxx.rst", "api/benchml.plugins.plugin_nphil.rst", "api/benchml.plugins.plugin_physchem.rst", "api/benchml.plugins.plugin_rdkit.rst", "api/benchml.plugins.plugin_soap.rst", "api/benchml.plugins.plugin_torch.rst", "api/benchml.predictors.rst", "api/benchml.predictors.gaussian_process.rst", "api/benchml.predictors.pred_sklearn.rst", "api/benchml.ptable.rst", "api/benchml.readwrite.rst", "api/benchml.splits.rst", "api/benchml.test.rst", "api/benchml.transforms.rst", "api/benchml.utils.rst", "dev.rst", "index.rst", "models/bmol_acsf.rst", "models/bmol_cm.rst", "models/bmol_ecfp.rst", "models/bmol_ecfp_class.rst", "models/bmol_gylm.rst", "models/bmol_gylm_match_class.rst", "models/bmol_mbtr.rst", "models/bmol_pdf.rst", "models/bmol_physchem.rst", "models/bmol_physchem_class.rst", "models/bmol_soap.rst", "models/bxtal_acsf.rst", "models/bxtal_esm.rst", "models/bxtal_gylm.rst", "models/bxtal_mbtr.rst", "models/bxtal_pdf.rst", "models/bxtal_physchem.rst", "models/bxtal_soap.rst", "models/dscribe.rst", "models/ecfp.rst", "models/gylm.rst", "models/logd.rst", "models/logd_ai.rst", "models/logd_extensive.rst", "models/models.rst", "models/soap.rst", "models/xy_classifiers.rst", "models/xy_regressors.rst", "use.rst"], "titles": ["Python API", "benchml package", "benchml.accumulator module", "benchml.analysis module", "benchml.basic module", "benchml.benchmark module", "benchml.conformal module", "benchml.data module", "benchml.descriptors package", "benchml.descriptors.descr_basic module", "benchml.ensemble module", "benchml.filters package", "benchml.filters.random_matrix module", "benchml.hyper module", "benchml.inputs module", "benchml.kernels package", "benchml.kernels.kern_basic module", "benchml.logger module", "benchml.matrix module", "benchml.models package", "benchml.models.common module", "benchml.models.mod_basic module", "benchml.models.mod_bench module", "benchml.models.mod_bench_class module", "benchml.models.mod_bench_xtal module", "benchml.models.mod_dscribe module", "benchml.models.mod_logd module", "benchml.models.mod_logd_ai module", "benchml.models.mod_xy module", "benchml.pipeline module", "benchml.plugins package", "benchml.plugins.plugin_asap module", "benchml.plugins.plugin_check module", "benchml.plugins.plugin_cx module", "benchml.plugins.plugin_dscribe module", "benchml.plugins.plugin_gylmxx module", "benchml.plugins.plugin_nphil module", "benchml.plugins.plugin_physchem module", "benchml.plugins.plugin_rdkit module", "benchml.plugins.plugin_soap module", "benchml.plugins.plugin_torch module", "benchml.predictors package", "benchml.predictors.gaussian_process module", "benchml.predictors.pred_sklearn module", "benchml.ptable module", "benchml.readwrite module", "benchml.splits module", "benchml.test package", "benchml.transforms module", "benchml.utils module", "Development guide", "BenchML", "bmol_acsf", "bmol_cm", "bmol_ecfp", "bmol_ecfp_class", "bmol_gylm", "bmol_gylm_match_class", "bmol_mbtr", "bmol_pdf", "bmol_physchem", "bmol_physchem_class", "bmol_soap", "bxtal_acsf", "bxtal_esm", "bxtal_gylm", "bxtal_mbtr", "bxtal_pdf", "bxtal_physchem", "bxtal_soap", "dscribe", "ecfp", "gylm", "logd", "logd_ai", "logd_extensive", "Models", "soap", "xy_classifiers", "xy_regressors", "User guide"], "terms": {"benchml": [0, 80], "pipelin": [0, 1, 14], "modul": [0, 51], "tag": [0, 1, 17, 20, 21, 29, 38, 46], "broadcast": [0, 29], "none": [0, 1, 2, 4, 5, 7, 10, 13, 15, 16, 17, 18, 19, 22, 23, 24, 26, 29, 34, 35, 37, 38, 39, 40, 41, 43, 45, 47, 49], "hyper": [0, 1, 29, 51], "doc": [0, 17, 29], "kwarg": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46], "A": [0, 29], "encapsul": [0, 29], "an": [0, 7, 14, 29, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "ml": [0, 29], "It": [0, 7, 29], "consist": [0, 7, 29, 51], "sequenc": [0, 29], "interdepend": [0, 29, 51], "paramet": [0, 7, 29], "str": [0, 7, 17, 29, 37], "name": [0, 7, 17, 29, 44, 45], "option": [0, 17, 29], "dict": [0, 7, 29], "all": [0, 29], "node": [0, 14, 29, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "list": [0, 7, 17, 29, 37, 51], "object": [0, 1, 2, 5, 7, 13, 15, 16, 17, 29, 34, 35, 39, 44, 45, 46, 49], "optim": [0, 1, 13, 29, 51], "control": [0, 29], "ar": [0, 29, 44], "thei": [0, 51], "act": [0, 29, 51], "data": [0, 1, 5, 14, 29, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "stream": [0, 1, 10, 13, 29, 41, 42, 51], "via": [0, 29, 51], "call": 0, "method": [0, 1, 5, 6, 29, 33, 34, 39, 45], "The": [0, 7, 14, 29, 51], "result": 0, "store": [0, 51], "privat": 0, "exampl": [0, 7], "constructor": 0, "creat": [0, 1, 45, 47], "instanc": 0, "read": [0, 1, 45], "follow": 0, "trafo": 0, "randomprojector": 0, "arg": [0, 1, 2, 7, 17, 22, 24, 27, 28, 29, 31, 34, 35, 36, 38, 39, 40, 41, 43, 45], "cutoff": [0, 34], "0": [0, 1, 2, 6, 7, 10, 11, 12, 13, 17, 18, 34, 35, 36, 37, 39, 41, 42, 43, 44], "1": [0, 4, 7, 10, 11, 12, 15, 16, 17, 18, 34, 35, 36, 37, 39, 41, 42, 43, 44], "epsilon": [0, 6, 15, 16, 18, 35, 41, 43], "01": [0, 7, 35, 44], "x": [0, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47], "descriptor": [0, 1, 6, 10, 30, 37, 40, 51], "y": [0, 4, 6, 7, 10, 14, 15, 16, 36, 41, 42, 43, 44, 47], "m": 0, "predictor": [0, 1, 35], "_model": 0, "dictionari": [0, 7, 29], "suppli": 0, "converg": 0, "threshold": [0, 34], "etc": [0, 51], "These": 0, "should": 0, "confus": 0, "output": [0, 29], "which": [0, 29, 51], "could": 0, "e": [0, 44], "g": 0, "includ": [0, 29], "coeffici": 0, "train": 0, "model": [0, 1, 5, 29, 35, 41, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80], "param": [0, 1, 6, 10, 29], "field": [0, 37, 40], "contain": 0, "link": 0, "ancestr": 0, "address": [0, 29], "i": [0, 7, 14, 44, 51], "specifi": [0, 29, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79], "form": [0, 7], "transform_tag": 0, "data_tag": 0, "For": 0, "point": 0, "If": 0, "prefix": 0, "underscor": 0, "_": 0, "from": [0, 7], "respect": 0, "its": [0, 29], "There": 0, "three": [0, 29], "type": [0, 7, 14, 17, 18, 29, 35, 39, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "we": 0, "deal": 0, "determin": 0, "_feed": 0, "_map": 0, "_fit": 0, "particular": 0, "extxyzinput": [0, 1, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "insid": 0, "open": [0, 1, 29], "intern": 0, "thi": [0, 7, 14], "feed": [0, 1, 29, 40], "below": [0, 51], "show": 0, "here": 0, "where": 0, "us": [0, 7], "releas": 0, "config": [0, 4, 7, 8, 9, 14, 34, 35, 37, 38, 39, 40, 45, 49], "meta": [0, 1, 4, 7, 14, 39, 45], "deriv": 0, "allow_stream": [0, 1, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "permit": 0, "stream_copi": [0, 1, 14, 29], "see": [0, 51], "section": 0, "stream_sampl": [0, 1, 4, 8, 9, 11, 12, 14, 15, 16, 18, 29, 30, 33, 34, 35, 37, 38, 39, 40, 41, 43], "def": 0, "self": [0, 29, 38], "put": [0, 1, 29], "onli": 0, "most": 0, "fall": 0, "within": 0, "randomdescriptor": 0, "default_arg": [0, 1, 4, 6, 10, 11, 12, 15, 16, 18, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "xmin": 0, "xmax": 0, "dim": [0, 1, 8, 9, 49], "req_arg": [0, 1, 4, 8, 9, 18, 29, 30, 35, 37, 40, 41, 42, 43], "requir": [0, 31, 32, 43, 51], "req_input": [0, 1, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "precomput": [0, 1, 8, 9, 11, 12, 15, 16, 18, 29, 30, 33, 34, 35, 37, 38, 39, 40, 41, 43, 51], "true": [0, 5, 8, 9, 10, 11, 12, 15, 16, 18, 19, 29, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 48], "come": 0, "preload": 0, "appropri": 0, "shape": [0, 18], "len": [0, 4], "np": [0, 7, 18, 44], "random": [0, 1, 6, 13, 46], "uniform": 0, "size": [0, 4, 10], "matrix": [0, 1, 51], "activ": [0, 1, 29], "former": 0, "dure": 0, "stage": [0, 29, 49], "mai": 0, "also": 0, "access": 0, "predict": 0, "target": [0, 4, 13, 29], "set": 0, "oper": 0, "get": [0, 1, 19, 29], "coeff": [0, 4], "wrapper": 0, "around": 0, "ridg": [0, 1, 41, 43, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75], "sklearn": 0, "alpha": [0, 6, 41, 42, 43], "allow_param": [0, 1, 4, 6, 10, 11, 12, 15, 16, 18, 29, 30, 34, 35, 36, 39, 41, 42, 43], "linear_model": 0, "yp": [0, 1, 2], "u": [0, 44], "updat": [0, 1, 13, 29], "order": [0, 7], "defin": 0, "default": [0, 17, 29], "argument": 0, "ensur": 0, "correct": 0, "handl": [0, 29], "base": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51], "tupl": 0, "fals": [0, 1, 3, 4, 5, 6, 10, 15, 16, 17, 18, 19, 21, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49], "stream_kernel": [0, 1, 15, 16, 29, 30, 35, 41, 43], "computation": 0, "expens": 0, "typic": 0, "them": 0, "specif": [0, 7, 51], "recomput": 0, "valu": [0, 7, 17, 29], "version": [0, 1, 29], "hash": [0, 29], "chang": 0, "due": 0, "hyperoptim": 0, "well": 0, "benchmark": [0, 1, 3, 51], "purpos": 0, "attach": [0, 1, 29], "need": 0, "know": 0, "split": [0, 1, 3, 6, 29, 51], "test": [0, 1, 7, 51], "partit": 0, "consid": 0, "stream_train": [0, 5], "stream_test": [0, 5], "n_split": [0, 6], "5": [0, 6, 7, 13, 34, 35, 36, 39, 41, 43, 44], "train_fract": [0, 6], "7": [0, 7, 35], "inform": 0, "adequ": 0, "member": 0, "onto": 0, "have": 0, "instruct": [0, 13], "simpli": 0, "copi": 0, "both": [0, 51], "wherea": 0, "slice": [0, 1, 4, 7, 11, 12, 29], "configs_train": 0, "trainset": 0, "configs_test": 0, "testset": 0, "final": 0, "kernel": [0, 1, 6, 10, 35, 38, 41, 43], "differ": 0, "qualit": 0, "sai": 0, "design": 0, "affect": 0, "two": [0, 7], "ax": 0, "wai": [0, 51], "k_train": 0, "k": [0, 15, 16, 35, 38, 41, 42, 43, 44], "k_test": 0, "why": 0, "comput": 0, "kerneldot": [0, 1, 15, 16, 38, 52, 53, 54, 55, 56, 58, 59, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 77], "dedic": 0, "power": [0, 15, 16, 35, 39, 41, 42, 43, 51], "can": [0, 29, 51], "either": 0, "extern": 0, "In": [0, 44], "latter": 0, "case": 0, "sourc": 0, "file": [0, 7, 17], "folder": 0, "subsequ": 0, "import": [0, 7], "__init__": 0, "py": 0, "you": 0, "check": [0, 29], "your": 0, "were": 0, "successfulli": 0, "ad": 0, "bin": [0, 17, 37], "bmark": 0, "list_transform": 0, "descr_bas": [1, 8], "descriptorrandom": [1, 8, 9], "filter": [1, 29], "random_matrix": [1, 11], "cleanmatrix": [1, 11, 12, 55], "marchenkopasturfilt": [1, 11, 12, 55], "dist_mp": [1, 11, 12], "dist_mp_bound": [1, 11, 12], "dist_mp_sampl": [1, 11, 12], "dist_mp_test": [1, 11, 12], "div0": [1, 11, 12], "pca_comput": [1, 11, 12], "kern_bas": [1, 15, 38], "kernelbas": [1, 15, 16], "kernelgaussian": [1, 15, 16, 73, 74], "evalu": [1, 2, 5, 15, 16, 30, 35, 41, 43], "evaluatefit": [1, 15, 16], "evaluatepredict": [1, 15, 16], "common": [1, 19], "get_acsf_krr_kwarg": [1, 19, 20], "get_acsf_rr_kwarg": [1, 19, 20], "get_compile_gylm": [1, 19, 20], "get_logd_hybrid_topo_gp_kwarg": [1, 19, 20], "get_mbtr_krr_kwarg": [1, 19, 20], "get_mbtr_rr_kwarg": [1, 19, 20], "get_pdf_gylm_krr_kwarg": [1, 19, 20], "get_pdf_gylm_rr_kwarg": [1, 19, 20], "get_pdf_soap_krr_kwarg": [1, 19, 20], "get_pdf_soap_rr_kwarg": [1, 19, 20], "make_gylm_krr": [1, 19, 20], "make_gylm_rr": [1, 19, 20], "make_soap_krr": [1, 19, 20, 21], "make_soap_rr": [1, 19, 20], "mod_bas": [1, 19], "compile_gylm": [1, 19, 21], "compile_morgan": [1, 19, 21], "compile_nul": [1, 19, 21], "compile_soap": [1, 19, 21, 22, 24], "register_al": [1, 19, 21, 22, 23, 24, 25, 26, 27, 28], "mod_bench": [1, 19], "compile_acsf": [1, 19, 22, 24], "compile_cm": [1, 19, 22], "compile_ecfp": [1, 19, 22], "compile_mbtr": [1, 19, 22, 24], "compile_pdf": [1, 19, 22, 24], "compile_physchem": [1, 19, 22, 24], "make_pdf_krr": [1, 19, 22, 24], "make_pdf_rr": [1, 19, 22, 24], "mod_bench_class": [1, 19], "compile_ecfp_class": [1, 19, 23], "compile_gylm_match_class": [1, 19, 23], "compile_physchem_class": [1, 19, 23], "mod_bench_xt": [1, 19], "compile_esm": [1, 19, 24], "mod_dscrib": [1, 19], "compile_dscrib": [1, 19, 25], "mod_logd": [1, 19], "compile_logd": [1, 19, 26], "compile_logd_extens": [1, 19, 26], "mod_logd_ai": [1, 19], "compile_logd_ai": [1, 19, 27], "mod_xi": [1, 19], "compile_xy_classifi": [1, 19, 28], "compile_xy_regressor": [1, 19, 28], "compil": [1, 7, 19], "compile_and_filt": [1, 19], "list_al": [1, 19, 48], "plugin": 1, "plugin_asap": [1, 30], "asaptransform": [1, 30, 31], "d2k": [1, 30, 31], "dimreduc": [1, 30, 31], "kerneldens": [1, 30, 31], "sparsekpca": [1, 30, 31], "sparsekrr": [1, 30, 31], "sparsesvm": [1, 30, 31], "check_asap_avail": [1, 30, 31, 32], "plugin_check": [1, 30], "check_dscribe_avail": [1, 30, 32], "check_gylmxx_avail": [1, 30, 32], "check_nphil_avail": [1, 30, 32], "check_rdkit_avail": [1, 30, 32], "check_torch_avail": [1, 30, 32], "plugin_cx": [1, 30], "cxcalctransform": [1, 30, 33, 73, 74, 75], "get_smil": [1, 30, 33, 49], "plugin_dscrib": [1, 30], "dscribeacsf": [1, 30, 34, 70], "dscribecm": [1, 30, 34, 53, 70], "dscribeewaldsummatrix": [1, 30, 34, 64], "dscribelmbtr": [1, 30, 34, 70], "dscribembtr": [1, 30, 34, 58, 66, 70], "dscribesinematrix": [1, 30, 34, 70], "dscribetransform": [1, 30, 34, 52, 53, 58, 63, 64, 66, 70], "universaldscribeacsf": [1, 30, 34, 52, 63], "plugin_gylmxx": [1, 30], "attributekernelsmoothmatchsvm": [1, 30, 35, 57], "attributesmoothmatchkernelridg": [1, 30, 35], "gylmatom": [1, 30, 35, 56, 57, 59, 65, 67, 72, 75], "gylmaverag": [1, 30, 35, 72, 73], "gylmreduceconvolv": [1, 30, 35, 59, 67], "gylmtransform": [1, 30, 35, 56, 57, 59, 65, 67, 72, 73, 75], "kernelsmoothmatch": [1, 30, 35, 57, 72], "nlocx": [1, 30, 35], "as_object_arrai": [1, 30, 35], "gylm_evalu": [1, 30, 35], "gylm_evaluate_mp": [1, 30, 35], "gylm_evaluate_singl": [1, 30, 35], "plugin_nphil": [1, 30], "nonlinearfeaturefilt": [1, 30, 36], "plugin_physchem": [1, 30], "physchem2d": [1, 30, 37, 60, 61, 73, 74], "physchemus": [1, 30, 37, 60, 61, 73], "physchemxt": [1, 30, 37, 68], "get_atomic_data": [1, 30, 37], "plugin_rdkit": [1, 30], "morganfp": [1, 30, 38, 54, 55, 71, 73, 74], "morgankernel": [1, 30, 38], "plugin_soap": [1, 30], "soapbas": [1, 30, 39, 59, 67], "soapgylmxx": [1, 30, 39, 59, 67], "universalsoapbas": [1, 30, 39, 62, 69, 77], "universalsoapdscrib": [1, 30, 39], "universalsoapgylmxx": [1, 30, 39, 62, 69, 77], "plugin_torch": [1, 30], "torchdevic": [1, 30, 40], "torchmoduletransform": [1, 30, 40], "torchtransformdescriptor": [1, 30, 40], "gaussian_process": [1, 41], "gaussianprocess": [1, 41, 42, 73, 74], "residualgaussianprocess": [1, 41, 42, 73], "pred_sklearn": [1, 41], "adaboost": [1, 41, 43], "elasticnet": [1, 41, 43], "elasticnetclassifi": [1, 41, 43], "gaussianprocessregressor": [1, 41, 43], "gradientboost": [1, 41, 43, 71], "kneighborsclassifi": [1, 41, 43], "kneighborsregressor": [1, 41, 43], "kernelmatern": [1, 41, 43], "kernelridg": [1, 41, 43, 52, 53, 54, 56, 58, 59, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 77], "lasso": [1, 41, 43], "linearregress": [1, 41, 43, 73], "logisticregress": [1, 41, 43, 55], "ompclassifi": [1, 41, 43], "orthogonalmatchingpursuit": [1, 41, 43], "randomforestclassifi": [1, 41, 43, 55, 61, 78], "randomforestregressor": [1, 41, 43, 60, 68, 71, 73, 79], "ridgeclassifi": [1, 41, 43], "sklearntransform": [1, 41, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79], "supportvectorclassifi": [1, 41, 43, 55, 57], "supportvectorregressor": [1, 41, 43], "check_sklearn_avail": [1, 41, 43], "predicterror": [1, 41, 42], "rankerror": [1, 41, 42], "zscoreerror": [1, 41, 42], "fitresidu": [1, 41, 42], "check_avail": [1, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 43], "testmock": [1, 47], "data_dir": [1, 47], "getarg": [1, 47], "model_regex": [1, 47], "path": [1, 7, 17, 40, 47, 49], "run": [1, 47], "seed": [1, 13, 34, 46, 47], "tol": [1, 41, 43, 47], "valid": [1, 47, 51], "assert_array_equ": [1, 47], "accumul": 1, "append": [1, 2, 29], "eval_map": [1, 2], "evaluateal": [1, 2], "evaluatenul": [1, 2], "load": [1, 2, 45], "save": [1, 2, 45], "score": [1, 2, 6], "select": [1, 2, 7, 29, 37], "select_best": [1, 2], "metric_acc": [1, 2], "metric_auc": [1, 2], "metric_auc_ovo": [1, 2], "metric_auc_ovr": [1, 2], "metric_b": [1, 2], "metric_ma": [1, 2], "metric_mcc": [1, 2], "metric_ms": [1, 2], "metric_prec": [1, 2], "metric_r2": [1, 2], "metric_rec": [1, 2], "metric_rhop": [1, 2], "metric_rhor": [1, 2], "metric_rms": [1, 2], "metric_sup": [1, 2], "analysi": 1, "analys": [1, 3], "analyse_sect": [1, 3], "read_split_prop": [1, 3], "read_split_props_singl": [1, 3], "basic": [1, 21, 37], "add": [1, 4, 13, 17, 73, 74], "delta": [1, 4, 73], "dodividebys": [1, 4, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69], "checkdodivid": [1, 4], "exp": [1, 4, 34], "mult": [1, 4], "ranknorm": [1, 4, 57], "slicematrix": [1, 4], "undodividebys": [1, 4, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69], "evaluate_ensembl": [1, 5], "evaluate_model": [1, 5], "make_split_id": [1, 5], "pars": [1, 5, 17], "conform": 1, "conformalbas": [1, 6], "slice_funcs_fit": [1, 6, 10], "slice_funcs_map": [1, 6, 10], "conformalclassifi": [1, 6], "calibr": [1, 6], "conformalmulticlassifi": [1, 6], "conformalregressor": [1, 6], "fsigmoid": [1, 6], "benchmarkdata": [1, 7], "dataset": [1, 5, 7, 14], "create_from_fil": [1, 7], "info": [1, 7, 17, 29], "read_data": [1, 7], "target_convert": [1, 7], "datasetiter": [1, 7], "exttdataset": [1, 7, 14], "arrai": [1, 7, 45], "read_data_from_fil": [1, 7], "load_dataset": [1, 7], "ensembl": 1, "ensemblebas": [1, 10], "ensembleregressor": [1, 10], "fitsingl": [1, 10], "bayesianhyp": [1, 13], "atomizearrai": [1, 13], "convertupd": [1, 13], "detectarrai": [1, 13], "findbound": [1, 13], "getfield": [1, 13], "joinarrai": [1, 13], "gridhyp": [1, 13], "input": [1, 4, 7, 29, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "exttinput": [1, 14, 78, 79], "logger": [1, 5, 34, 35, 39], "clio_helpformatt": [1, 17], "extendablenamespac": [1, 17, 40, 47], "addnamespac": [1, 17], "generatetreedict": [1, 17], "sleep": [1, 17], "loglevel": [1, 17], "level": [1, 17], "mock": [1, 17, 29], "namespacefromdict": [1, 17], "os_color": [1, 17], "os_exe_assert": [1, 17], "os_exe_catch": [1, 17], "os_exe_dev": [1, 17], "os_line_char": [1, 17], "optionsinterfac": [1, 17], "addarg": [1, 17], "connect": [1, 17], "connecttocmdln": [1, 17], "connecttooptionsfil": [1, 17], "interpretasboolean": [1, 17], "interpretaslist": [1, 17], "parsecmdln": [1, 17], "parseoptionsfil": [1, 17], "parseoptionsfilexml": [1, 17], "shellinterfac": [1, 17], "connecttofil": [1, 17], "disconnectfromfil": [1, 17], "abspath": [1, 17], "cd": [1, 17, 44], "cwd": [1, 17], "mkcd": [1, 17], "okquit": [1, 17], "os_generate_head": [1, 17], "os_print": [1, 17], "os_print_config": [1, 17], "os_print_reset": [1, 17], "pwd": [1, 17], "root": [1, 7, 17], "setlevel": [1, 17], "xxquit": [1, 17], "xmlnode": [1, 17], "As": [1, 17, 44], "asarrai": [1, 17], "setnodevalu": [1, 17], "xmltree": [1, 17], "selectbytag": [1, 17], "kei": [1, 17, 29, 44], "concaten": [1, 18, 60, 61, 73, 75], "reducematrix": [1, 18, 52, 53, 58, 63, 64, 66, 70], "reducetypedmatrix": [1, 18, 56, 62, 65, 69, 75, 77], "allow_op": [1, 18], "optional_input": [1, 18], "reshap": [1, 18, 73], "subsamplematrix": [1, 18], "whitenmatrix": [1, 18, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 75, 77], "fittransform": [1, 4, 6, 10, 11, 12, 15, 16, 18, 29, 34, 35, 36, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77], "fit": [1, 29], "inputtransform": [1, 14, 29, 40, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "map": [1, 29, 49], "macro": [1, 29, 38], "is_macro": [1, 29], "transform": [1, 4, 8, 9, 18, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 51], "modeltyp": [1, 29], "classif": [1, 29, 55, 57, 61, 78], "na": [1, 29, 44], "regress": [1, 29], "activatestream": [1, 29], "cleardepend": [1, 29], "clearparam": [1, 29], "close": [1, 29], "compilearg": [1, 29], "compileinput": [1, 29], "compilestream": [1, 29], "create_mermaid_graph": [1, 29], "def_doc": [1, 29], "deploi": [1, 29], "docstring_templ": [1, 29], "document_transform": [1, 29], "freez": [1, 29, 30, 40], "hashstat": [1, 29], "hyperev": [1, 29], "hyperupd": [1, 29], "hyperfit": [1, 29], "make_doc_head": [1, 29], "make_pipeline_sect": [1, 29], "make_transforms_sect": [1, 29], "model_typ": [1, 29], "openstream": [1, 29], "reconnect": [1, 29], "replac": [1, 29], "resolvearg": [1, 29], "resolveoutput": [1, 29], "showhelpmessag": [1, 29], "unfreez": [1, 29], "updatedepend": [1, 29], "clone": [1, 29, 45], "ha": [1, 29], "item": [1, 29], "standalon": [1, 29], "resolv": [1, 29], "slicestorag": [1, 29], "streamhandl": [1, 29], "clear": [1, 29], "createpartit": [1, 29], "getact": [1, 29], "getstream": [1, 29], "haspartit": [1, 29], "setact": [1, 29], "setstreamfor": [1, 29], "transformbas": [1, 29], "activateparam": [1, 29], "checkrequir": [1, 29], "detach": [1, 29], "frozen": [1, 29], "gethash": [1, 29], "hashchang": [1, 29], "hashselfchang": [1, 29], "help_arg": [1, 29, 30, 37], "help_input": [1, 29], "help_param": [1, 29], "help_stream": [1, 29], "openparam": [1, 29], "parseargslink": [1, 29], "readi": [1, 29], "requirearg": [1, 29], "requireinput": [1, 29], "resolveinput": [1, 29], "setup": [1, 29, 44, 49], "stream_self_kernel": [1, 29], "updateinput": [1, 29], "deps_from_input": [1, 29], "force_json": [1, 29], "generate_hash_id": [1, 29], "hupdat": [1, 29], "log_stage_info_messag": [1, 29], "sopen": [1, 29], "ptabl": 1, "atomicel": [1, 44], "periodict": [1, 44], "addel": [1, 44], "element_covrad": [1, 44], "element_elneg": [1, 44], "element_mass": [1, 44], "element_nam": [1, 44], "element_val": [1, 44], "getpropertydict": [1, 44], "readwrit": [1, 7], "extendedtxt": [1, 7, 14, 45, 78, 79], "extendedxyz": [1, 45], "create_atom": [1, 45], "getheavi": [1, 45], "get_atomic_numb": [1, 45], "get_cel": [1, 45], "get_chemical_symbol": [1, 45], "get_posit": [1, 45], "padtocutoff": [1, 45], "set_pbc": [1, 45], "extendedxyzatom": [1, 45], "configur": [1, 45], "disable_as": [1, 45], "patch_ase_config": [1, 45], "read_as": [1, 45], "read_extt": [1, 45], "read_extxyz_meta_onli": [1, 45], "read_xyz": [1, 45], "tokenize_extxyz_meta": [1, 45], "write": [1, 45], "write_extt": [1, 45], "write_xyz": [1, 35, 45], "splitbas": [1, 46], "isdon": [1, 46], "next": [1, 46], "splitchronolog": [1, 46], "splitexplicit": [1, 46], "splitgroup": [1, 46], "splitjson": [1, 46], "splitkfold": [1, 46], "splitloo": [1, 46], "splitlambda": [1, 46], "splitmc": [1, 46], "splitsequentialmc": [1, 46], "synchron": [1, 46], "get_al": [1, 48], "get_bases_recurs": [1, 48], "transform_info": [1, 48], "util": 1, "lineexpans": [1, 49], "expand": [1, 49], "wrap": [1, 49], "onehot": [1, 49], "stagedtim": [1, 49], "report": [1, 49], "time": [1, 49], "dataframe_to_extxyz": [1, 49], "get_smiles_kei": [1, 49], "git_hash": [1, 49], "smiles_to_extxyz": [1, 49], "smiles_to_pseudo_extxyz": [1, 49], "class": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49], "jsonfil": [1, 2], "metric": [1, 2], "channel": [1, 2], "yt": [1, 2], "acc": [1, 2], "function": [1, 2, 7, 18, 34, 44, 45], "auc": [1, 2], "auc_ovo": [1, 2], "auc_ovr": [1, 2], "bal": [1, 2], "mae": [1, 2], "mcc": [1, 2], "mse": [1, 2], "prec": [1, 2], "r2": [1, 2], "rec": [1, 2], "rhop": [1, 2], "rhor": [1, 2], "rmse": [1, 2], "sup": [1, 2], "bootstrap": [1, 2, 41, 43], "log": [1, 2, 5, 7, 13, 29, 30, 34, 35, 39, 48, 49], "match": [1, 2], "n_sampl": [1, 2], "classmethod": [1, 2, 7], "largest": [1, 2], "smallest": [1, 2], "alia": [1, 17, 29, 34, 39], "dset": [1, 46], "verbos": [1, 5, 19, 29, 30, 34, 35, 41, 43, 48, 49], "arch_file_path": [1, 45], "filenam": [1, 7], "input_fil": [1, 7, 45], "obj": [1, 31, 32, 43, 45, 48], "embed_git_hash": [1, 45], "output_fil": [1, 45], "split_thi": 3, "benchmark_sect": 3, "return_ord": 3, "ref": 4, "divide_by_s": 4, "config_to_s": 4, "lambda": [4, 6, 7, 10, 37, 44, 46], "c": [4, 17, 33, 35, 41, 43, 44], "forc": [4, 29], "skip_if_not_forc": 4, "z": [4, 6, 35, 41, 43, 44], "axi": [4, 11, 12, 18], "detail": 5, "accu": 5, "group": [5, 19, 46], "abc": [6, 10, 31, 35, 40, 41, 43], "sigmoid_a": 6, "sigmoid_b": 6, "dy": [6, 10, 41, 42, 43, 44], "dy_noncalibr": 6, "p": [6, 41, 43, 44], "p_noncalibr": 6, "1e": [6, 11, 12, 15, 16, 18, 35, 41, 43, 47], "10": [6, 7, 11, 12, 13, 15, 16, 18, 34, 35, 37, 44], "forward_input": [6, 10], "input_typ": [6, 10], "9": [6, 7, 35, 39, 44], "base_transform": [6, 10], "": [6, 10, 35, 44], "r": 6, "class_threshold": 6, "sigmoid_fit": 6, "confid": 6, "67": [6, 44], "b": [6, 12, 44], "filter_fct": 7, "ext_xyz": 7, "static": [7, 17, 29, 34, 39], "index": [7, 45, 51], "log10": 7, "ufunc": 7, "meta_json": 7, "extt": 7, "metadata": 7, "one": [7, 29], "accept": 7, "pair": 7, "numpi": 7, "ndarrai": 7, "xyz": 7, "other": 7, "support": 7, "note": 7, "format": 7, "descript": [7, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "ln": [7, 45], "array_nam": 7, "n_row": 7, "n_col": 7, "100": [7, 10, 33, 34, 41, 43], "2": [7, 11, 12, 17, 34, 41, 43, 44], "json": [7, 46], "string": 7, "wow": 7, "realli": 7, "noisi": 7, "3": [7, 17, 34, 35, 36, 38, 41, 43, 44], "onward": 7, "txt": 7, "correspond": 7, "header": [7, 45], "00": 7, "4": [7, 44], "6": [7, 34, 35, 39, 44], "8": [7, 34, 44], "99": [7, 44], "unit_test": 7, "ising": 7, "45": [7, 44], "sum": [7, 18], "return": 7, "text": 7, "summari": [7, 29, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "idc": 7, "int": 7, "new": 7, "featur": 10, "sampl": 10, "bootstrap_featur": 10, "bootstrap_sampl": 10, "feature_fract": 10, "rank": [11, 12, 36], "std_threshold": [11, 12], "l_upper": [11, 12], "v_upper": [11, 12], "x_mean": [11, 12], "x_std": [11, 12, 18], "monomi": [11, 12], "gamma": [12, 35, 41, 43], "norm_div_std": 12, "norm_sub_mean": 12, "ddof": 12, "ep": 12, "convert": [13, 44], "init_point": 13, "n_iter": 13, "bound": 13, "split_arg": [13, 29], "accu_arg": [13, 29], "target_ref": [13, 29], "grid_hyp": 13, "extxyz": [14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77], "suppos": 14, "begin": 14, "provid": [14, 51], "expect": 14, "x1": [15, 16, 35, 41, 43], "x2": [15, 16, 35, 41, 43], "symmetr": [15, 16, 35], "not_us": [15, 16], "k_diag": [15, 16, 35, 41, 42, 43], "self_kernel": [15, 16, 35], "diagonal_onli": [15, 16, 35, 41, 43], "sigma": [15, 16, 34, 35, 39, 49], "scale": [15, 16, 18, 34, 41, 43], "prog": 17, "indent_incr": 17, "max_help_posit": 17, "24": [17, 44], "width": 17, "helpformatt": 17, "namespac": 17, "tree": 17, "element": 17, "paths_rel_to": 17, "dt": 17, "debug": 17, "error": 17, "warn": 17, "tree_dict": 17, "colstr": 17, "dev": 17, "null": 17, "char": 17, "nicknam": 17, "destin": 17, "help": 17, "xmlfile": 17, "home": [17, 47], "rpetrov": [17, 47], "conda": 17, "env": 17, "build": 17, "sphinx": 17, "descr": 17, "expr": 17, "xkei": 17, "logfil": 17, "d": [17, 37, 44], "directori": 17, "what": 17, "titl": 17, "trim": 17, "mssg": 17, "j": 17, "h": [17, 35, 44], "t": [17, 18, 29, 35, 37, 39], "tl": [17, 44], "typ": 17, "sep": 17, "rep": 17, "n": [17, 29, 34, 35, 44], "new_valu": 17, "norm": 18, "reduc": 18, "mean": 18, "normal": [18, 34, 35, 38, 39, 41, 43], "reduce_by_typ": 18, "reduce_op": 18, "calc_shap": 18, "info_kei": 18, "x_avg": 18, "centr": [18, 35, 39], "filter_collect": 19, "filter_model": 19, "re": [19, 41, 42, 44], "scalerang": [20, 34], "extens": 20, "regularization_rang": 20, "sharp": [20, 34], "whiten_hyp": 20, "mod_nam": 20, "minim": [20, 22, 24, 39], "adjust_to_speci": [22, 24, 34], "custom_field": [22, 23, 24, 26], "enum": 29, "enumer": 29, "Not": [29, 52, 53, 54, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79], "keep_act": 29, "clear_stream": 29, "typestr_onli": 29, "extended_summari": 29, "No": [29, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "extend": [29, 37, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "set_deploi": 29, "doc_head": 29, "nmodel": 29, "pipeline_graph": 29, "endpoint": 29, "tf": [29, 48], "check_exist": 29, "parent_tag": 29, "slice_ax2": 29, "those": 29, "declar": 29, "necessarili": 29, "upstream": 29, "depend": 29, "chain": 29, "transformclass": 29, "parent": 29, "addr": 29, "stream_tag": 29, "set_act": 29, "constitut": 29, "each": [29, 51], "implement": 29, "least": 29, "through": [29, 51], "referenc": 29, "__class__": 29, "__name__": 29, "params_tag": 29, "ext": 29, "inp": 29, "cur_log": 29, "tidx": 29, "calculatorclass": [30, 34, 39], "generategraph": [30, 36], "descriptors_act": [30, 37], "predefin": [30, 37], "fct_type": [30, 37], "mapsingleconfig": [30, 37], "evaluatesingl": [30, 39], "mapmultisoap": [30, 39], "updateparam": [30, 39], "setdevic": [30, 40], "batch_siz": 33, "cmd": 33, "logp": [33, 37], "consensu": 33, "cxcalc": 33, "reshape_as_matrix": 33, "tmpdir": 33, "tmp": [33, 49], "acsf": 34, "g2_param": 34, "g3_param": 34, "g4_param": 34, "g5_param": 34, "period": [34, 39, 49], "rcut": [34, 35, 39], "spars": 34, "speci": 34, "coulombmatrix": 34, "flatten": 34, "n_atoms_max": 34, "permut": 34, "sorted_l2": 34, "ewaldsummatrix": 34, "lmbtr": 34, "k2": 34, "geometri": 34, "distanc": 34, "grid": [34, 51], "max": 34, "min": 34, "weight": 34, "001": [34, 41, 43], "k3": 34, "angl": 34, "180": [34, 44], "l2_each": 34, "mbtr": 34, "k1": 34, "atomic_numb": 34, "inverse_dist": 34, "cosin": 34, "sinematrix": 34, "abstract": [34, 39], "mandatori": [34, 39], "calc": [34, 35, 39], "n_select_g2": 34, "n_select_g4": 34, "base_kernel": 35, "base_pow": 35, "pass": 35, "x_probe": 35, "w": [35, 41, 42, 43, 44], "y_mean": [35, 41, 42, 43], "y_std": [35, 41, 42, 43], "lmax": [35, 39], "nmax": [35, 39], "q": 35, "heavy_onli": [35, 39], "ldamp": 35, "part_sigma": 35, "proc": 35, "rcut_width": 35, "75": [35, 44], "wcentr": 35, "wconstant": 35, "wscale": 35, "xi": 35, "dot": 35, "xj": 35, "06": [35, 44, 47], "gylma": 35, "o": [35, 44], "gylmb": 35, "dcalc": [35, 39], "reduce_molecular": 35, "norm_molecular": 35, "fgraph": 36, "variabl": 36, "bop": 36, "correlation_measur": 36, "moment": 36, "n_top": 36, "rank_coeff": 36, "unit_max_exp": 36, "unit_min_exp": 36, "uop": 36, "el": 36, "sr2": 36, "select_predef": 37, "molwt": 37, "rdesc": 37, "exactmolwt": 37, "n_hacc": 37, "numhacceptor": 37, "n_hdon": 37, "numhdonor": 37, "tpsa": 37, "mollogp": 37, "molmr": 37, "molwtheavi": 37, "heavyatommolwt": 37, "n_heavi": 37, "heavyatomcount": 37, "n_nhoh": 37, "nhohcount": 37, "n_no": 37, "nocount": 37, "n_hetero": 37, "numheteroatom": 37, "n_rotbond": 37, "numrotatablebond": 37, "n_valel": 37, "numvalenceelectron": 37, "n_aromar": 37, "numaromaticr": 37, "n_satr": 37, "numsaturatedr": 37, "n_aliphr": 37, "numaliphaticr": 37, "n_ring": 37, "ringcount": 37, "balabanj": 37, "bertzct": 37, "ipc": 37, "hallkieralpha": 37, "kappa1": 37, "kappa2": 37, "kappa3": 37, "chi0": 37, "chi1": 37, "chi0n": 37, "chi1n": 37, "chi2n": 37, "chi3n": 37, "chi4n": 37, "chi0v": 37, "chi1v": 37, "chi2v": 37, "chi3v": 37, "chi4v": 37, "slogp01": 37, "slogp_vsa1": 37, "slogp02": 37, "slogp_vsa2": 37, "slogp03": 37, "slogp_vsa3": 37, "slogp04": 37, "slogp_vsa4": 37, "slogp05": 37, "slogp_vsa5": 37, "slogp06": 37, "slogp_vsa6": 37, "slogp07": 37, "slogp_vsa7": 37, "slogp08": 37, "slogp_vsa8": 37, "slogp09": 37, "slogp_vsa9": 37, "slogp10": 37, "slogp_vsa10": 37, "slogp11": 37, "slogp_vsa11": 37, "slogp12": 37, "slogp_vsa12": 37, "smr01": 37, "smr_vsa1": 37, "smr02": 37, "smr_vsa2": 37, "smr03": 37, "smr_vsa3": 37, "smr04": 37, "smr_vsa4": 37, "smr05": 37, "smr_vsa5": 37, "smr06": 37, "smr_vsa6": 37, "smr07": 37, "smr_vsa7": 37, "smr08": 37, "smr_vsa8": 37, "smr09": 37, "smr_vsa9": 37, "smr10": 37, "smr_vsa10": 37, "peoe01": 37, "peoe_vsa1": 37, "peoe02": 37, "peoe_vsa2": 37, "peoe03": 37, "peoe_vsa3": 37, "peoe04": 37, "peoe_vsa4": 37, "peoe05": 37, "peoe_vsa5": 37, "peoe06": 37, "peoe_vsa6": 37, "peoe07": 37, "peoe_vsa7": 37, "peoe08": 37, "peoe_vsa8": 37, "peoe09": 37, "peoe_vsa9": 37, "peoe10": 37, "peoe_vsa10": 37, "peoe11": 37, "peoe_vsa11": 37, "peoe12": 37, "peoe_vsa12": 37, "peoe13": 37, "peoe_vsa13": 37, "peoe14": 37, "peoe_vsa14": 37, "choic": 37, "core": [37, 51], "n_ringslogp01": 37, "sigma_fac": 37, "continu": 37, "gaussian": 37, "discret": 37, "heavisid": 37, "length": 38, "2048": 38, "radiu": 38, "usechir": 38, "usefeatur": 38, "1024": 38, "channel_dim": 39, "crossov": 39, "pos_centr": 39, "mode": 39, "par": 39, "soap": [39, 76], "devic": 40, "reset_optim": 40, "reset_paramet": 40, "devstr": 40, "cpu": 40, "pop_input": 40, "to_numpi": 40, "l1_ratio": [41, 43], "margin": [41, 43], "05": [41, 43], "k_inv": [41, 42], "dy_mean": [41, 42], "dy_sort": [41, 42], "dy_std": [41, 42], "dy_rank": [41, 42], "dy_zscor": [41, 42], "predict_vari": [41, 42], "length_scal": [41, 43], "nu": [41, 43], "class_weight": [41, 43], "dual": [41, 43], "fit_intercept": [41, 43], "intercept_sc": [41, 43], "max_it": [41, 43], "multi_class": [41, 43], "auto": [41, 43], "n_job": [41, 43], "penalti": [41, 43], "l2": [41, 43], "random_st": [41, 43], "solver": [41, 43], "lbfg": [41, 43], "0001": [41, 43], "warm_start": [41, 43], "n_nonzero_coef": [41, 43], "ccp_alpha": [41, 43], "criterion": [41, 43], "gini": [41, 43], "max_depth": [41, 43], "max_featur": [41, 43], "max_leaf_nod": [41, 43], "max_sampl": [41, 43], "min_impurity_decreas": [41, 43], "min_samples_leaf": [41, 43], "min_samples_split": [41, 43], "min_weight_fraction_leaf": [41, 43], "n_estim": [41, 43], "oob_scor": [41, 43], "squared_error": [41, 43], "res_model": [41, 42], "dk": [41, 42], "fit_residu": [41, 42], "balanc": [41, 43], "probabl": [41, 43], "cache_s": [41, 43], "200": [41, 43, 44], "coef0": [41, 43], "degre": [41, 43], "rbf": [41, 43], "shrink": [41, 43], "mass": 44, "covrad": 44, "elneg": 44, "valenc": 44, "32": 44, "31": 44, "63": 44, "82": 44, "77": 44, "73": 44, "72": 44, "71": 44, "54": 44, "36": 44, "18": 44, "11": 44, "02": 44, "98": 44, "03": 44, "74": 44, "44": 44, "22": 44, "17": 44, "16": 44, "15": 44, "25": 44, "26": 44, "14": 44, "12": 44, "91": 44, "62": 44, "34": 44, "27": 44, "28": 44, "48": 44, "41": 44, "33": 44, "35": 44, "69": 44, "65": 44, "84": 44, "85": 44, "61": 44, "59": 44, "58": 44, "57": 44, "56": 44, "49": 44, "47": 44, "46": 44, "42": 44, "912": 44, "576": 44, "051": 44, "544": 44, "066": 44, "193": 44, "789": 44, "869": 44, "293": 44, "613": 44, "916": 44, "253": 44, "589": 44, "242": 44, "734": 44, "034": 44, "19": 44, "38": 44, "53": 44, "88": 44, "756": 44, "994": 44, "211": 44, "434": 44, "689": 44, "966": 44, "706": 44, "963": 44, "51": 44, "87": 44, "52": 44, "656": 44, "824": 44, "984": 44, "158": 44, "359": 44, "582": 44, "659": 44, "881": 44, "68": 44, "92": 44, "76": 44, "854": 44, "39": 44, "00794": 44, "0026": 44, "941": 44, "012187": 44, "811": 44, "0107": 44, "00674": 44, "9994": 44, "9984": 44, "20": 44, "1797": 44, "98977": 44, "305": 44, "98154": 44, "0855": 44, "30": 44, "97376": 44, "4527": 44, "948": 44, "0983": 44, "40": 44, "078": 44, "95591": 44, "867": 44, "50": 44, "9415": 44, "9961": 44, "93805": 44, "55": 44, "845": 44, "9332": 44, "6934": 44, "546": 44, "723": 44, "9216": 44, "78": 44, "96": 44, "79": 44, "904": 44, "83": 44, "4678": 44, "90585": 44, "224": 44, "90638": 44, "95": 44, "94": 44, "101": 44, "07": 44, "102": 44, "9055": 44, "106": 44, "107": 44, "8682": 44, "112": 44, "411": 44, "114": 44, "818": 44, "118": 44, "121": 44, "127": 44, "126": 44, "90447": 44, "131": 44, "29": 44, "132": 44, "90545": 44, "137": 44, "327": 44, "138": 44, "140": 44, "116": 44, "90765": 44, "144": 44, "145": 44, "150": 44, "151": 44, "964": 44, "157": 44, "92534": 44, "162": 44, "164": 44, "93032": 44, "167": 44, "168": 44, "93421": 44, "173": 44, "04": 44, "174": 44, "967": 44, "178": 44, "9479": 44, "183": 44, "186": 44, "207": 44, "190": 44, "23": 44, "192": 44, "217": 44, "195": 44, "196": 44, "96655": 44, "204": 44, "3833": 44, "208": 44, "98038": 44, "209": 44, "210": 44, "222": 44, "223": 44, "226": 44, "227": 44, "232": 44, "0381": 44, "231": 44, "03588": 44, "238": 44, "0289": 44, "237": 44, "244": 44, "243": 44, "247": 44, "251": 44, "252": 44, "257": 44, "258": 44, "259": 44, "262": 44, "261": 44, "263": 44, "264": 44, "265": 44, "268": 44, "271": 44, "272": 44, "285": 44, "284": 44, "289": 44, "288": 44, "292": 44, "he": 44, "li": 44, "Be": 44, "f": [44, 45], "ne": 44, "mg": 44, "al": 44, "si": 44, "cl": 44, "ca": 44, "sc": 44, "ti": 44, "v": 44, "cr": 44, "mn": 44, "fe": 44, "co": 44, "ni": 44, "cu": 44, "zn": 44, "ga": 44, "ge": 44, "se": 44, "br": 44, "kr": 44, "rb": 44, "sr": 44, "zr": 44, "nb": 44, "mo": 44, "tc": 44, "ru": 44, "rh": 44, "pd": 44, "ag": 44, "sn": 44, "sb": 44, "te": 44, "xe": 44, "ba": 44, "la": 44, "ce": 44, "pr": 44, "nd": 44, "pm": 44, "sm": 44, "eu": 44, "gd": 44, "tb": 44, "ho": 44, "er": 44, "tm": 44, "yb": 44, "lu": 44, "hf": 44, "ta": 44, "ir": 44, "pt": 44, "au": 44, "hg": 44, "pb": 44, "bi": 44, "po": [44, 45], "At": 44, "rn": 44, "fr": 44, "ra": 44, "ac": 44, "th": 44, "pa": 44, "pu": 44, "am": 44, "cm": 44, "bk": 44, "cf": 44, "fm": 44, "md": 44, "lr": 44, "rf": 44, "db": 44, "sg": 44, "bh": 44, "mt": 44, "rg": 44, "uub": 44, "uut": 44, "uuq": 44, "uup": 44, "uuh": 44, "extt_fil": 45, "symbol": 45, "cell": 45, "posit": 45, "n_atom": 45, "recalcul": 45, "r_cut": 45, "boolean": 45, "use_as": 45, "config_fil": 45, "allow_json": 45, "__none__": 46, "chrono": 46, "explicit": 46, "kfold": 46, "loo": 46, "sequenti": 46, "test_data": 47, "project": 47, "github": 47, "971231": 47, "interv": 49, "n_bin": 49, "val": 49, "cat": 49, "smiles_from": 49, "tmpfolder": 49, "gen3d": 49, "corina": 49, "babel": 49, "dict_to_check": 49, "smile": 49, "throw_error": 49, "librari": 51, "rapid": 51, "develop": 51, "machin": 51, "learn": 51, "materi": 51, "drug": 51, "discoveri": 51, "wide": 51, "varieti": 51, "incorpor": 51, "variou": 51, "regressor": 51, "simpl": 51, "yet": 51, "approach": 51, "effici": 51, "execut": 51, "achiev": 51, "automat": 51, "immut": 51, "bayesian": 51, "user": 51, "guid": 51, "python": 51, "api": 51, "autogener": 51, "subpackag": 51, "submodul": 51, "seri": 51, "schemat": 51, "sliceabl": 51, "matric": 51, "sens": 51, "easili": 51, "child": 51, "cross": 51, "nest": 51, "hyperparamet": 51, "search": 51, "page": 51, "svm": 55, "classifi": 55, "bmol_acsf": 76, "bmol_acsf_minimal_int_rr": 76, "bmol_acsf_minimal_int_krr": 76, "bmol_acsf_minimal_ext_rr": 76, "bmol_acsf_minimal_ext_krr": 76, "bmol_acsf_smart_int_rr": 76, "bmol_acsf_smart_int_krr": 76, "bmol_acsf_smart_ext_rr": 76, "bmol_acsf_smart_ext_krr": 76, "bmol_acsf_longrange_int_rr": 76, "bmol_acsf_longrange_int_krr": 76, "bmol_acsf_longrange_ext_rr": 76, "bmol_acsf_longrange_ext_krr": 76, "bmol_cm": 76, "bmol_cm_sorted_l2_rr": 76, "bmol_cm_sorted_l2_krr": 76, "bmol_cm_eigenspectrum_rr": 76, "bmol_cm_eigenspectrum_krr": 76, "bmol_ecfp": 76, "bmol_ecfp4_krr": 76, "bmol_ecfp4_rr": 76, "bmol_ecfp6_krr": 76, "bmol_ecfp6_rr": 76, "bmol_ecfp_class": 76, "bmol_ecfp_svm_class": 76, "bmol_ecfp_lr_class": 76, "bmol_ecfp_rf_class": 76, "bmol_ecfp_mplr_class": 76, "bmol_gylm": 76, "bmol_gylm_minimal_int_krr": 76, "bmol_gylm_standard_int_krr": 76, "bmol_gylm_minimal_ext_krr": 76, "bmol_gylm_standard_ext_krr": 76, "bmol_gylm_minimal_int_rr": 76, "bmol_gylm_standard_int_rr": 76, "bmol_gylm_minimal_ext_rr": 76, "bmol_gylm_standard_ext_rr": 76, "bmol_gylm_match_class": 76, "bmol_gylm_match_class_norm": 76, "bmol_gylm_match_class_attr": 76, "bmol_mbtr": 76, "bmol_mbtr_int_rr": 76, "bmol_mbtr_int_krr": 76, "bmol_mbtr_ext_rr": 76, "bmol_mbtr_ext_krr": 76, "bmol_pdf": 76, "bmol_pdf_soap_standard_rr": 76, "bmol_pdf_gylm_standard_rr": 76, "bmol_pdf_soap_standard_krr": 76, "bmol_pdf_gylm_standard_krr": 76, "bmol_pdf_soap_minimal_rr": 76, "bmol_pdf_gylm_minimal_rr": 76, "bmol_pdf_soap_minimal_krr": 76, "bmol_pdf_gylm_minimal_krr": 76, "bmol_physchem": 76, "bmol_physchem_rfr": 76, "bmol_physchem_rfr_grid": 76, "bmol_physchem_basic_rfr": 76, "bmol_physchem_basic_rr": 76, "bmol_physchem_core_rfr": 76, "bmol_physchem_core_rr": 76, "bmol_physchem_logp_rfr": 76, "bmol_physchem_logp_rr": 76, "bmol_physchem_extended_rfr": 76, "bmol_physchem_extended_rr": 76, "bmol_physchem_class": 76, "bmol_physchem_basic_rf_class": 76, "bmol_physchem_core_rf_class": 76, "bmol_physchem_logp_rf_class": 76, "bmol_physchem_extended_rf_class": 76, "bmol_soap": 76, "bmol_soap_minimal_nocross_int_krr": 76, "bmol_soap_minimal_cross_int_krr": 76, "bmol_soap_smart_nocross_int_krr": 76, "bmol_soap_smart_cross_int_krr": 76, "bmol_soap_longrange_nocross_int_krr": 76, "bmol_soap_longrange_cross_int_krr": 76, "bmol_soap_minimal_nocross_ext_krr": 76, "bmol_soap_minimal_cross_ext_krr": 76, "bmol_soap_smart_nocross_ext_krr": 76, "bmol_soap_smart_cross_ext_krr": 76, "bmol_soap_longrange_nocross_ext_krr": 76, "bmol_soap_longrange_cross_ext_krr": 76, "bmol_soap_minimal_nocross_int_rr": 76, "bmol_soap_minimal_cross_int_rr": 76, "bmol_soap_smart_nocross_int_rr": 76, "bmol_soap_smart_cross_int_rr": 76, "bmol_soap_longrange_nocross_int_rr": 76, "bmol_soap_longrange_cross_int_rr": 76, "bmol_soap_minimal_nocross_ext_rr": 76, "bmol_soap_minimal_cross_ext_rr": 76, "bmol_soap_smart_nocross_ext_rr": 76, "bmol_soap_smart_cross_ext_rr": 76, "bmol_soap_longrange_nocross_ext_rr": 76, "bmol_soap_longrange_cross_ext_rr": 76, "bxtal_acsf": 76, "bxtal_acsf_minimal_int_rr": 76, "bxtal_acsf_minimal_int_krr": 76, "bxtal_acsf_minimal_ext_rr": 76, "bxtal_acsf_minimal_ext_krr": 76, "bxtal_acsf_smart_int_rr": 76, "bxtal_acsf_smart_int_krr": 76, "bxtal_acsf_smart_ext_rr": 76, "bxtal_acsf_smart_ext_krr": 76, "bxtal_acsf_longrange_int_rr": 76, "bxtal_acsf_longrange_int_krr": 76, "bxtal_acsf_longrange_ext_rr": 76, "bxtal_acsf_longrange_ext_krr": 76, "bxtal_esm": 76, "bxtal_esm_sorted_l2_rr": 76, "bxtal_esm_sorted_l2_krr": 76, "bxtal_esm_eigenspectrum_rr": 76, "bxtal_esm_eigenspectrum_krr": 76, "bxtal_gylm": 76, "bxtal_gylm_minimal_int_krr": 76, "bxtal_gylm_standard_int_krr": 76, "bxtal_gylm_minimal_ext_krr": 76, "bxtal_gylm_standard_ext_krr": 76, "bxtal_gylm_minimal_int_rr": 76, "bxtal_gylm_standard_int_rr": 76, "bxtal_gylm_minimal_ext_rr": 76, "bxtal_gylm_standard_ext_rr": 76, "bxtal_mbtr": 76, "bxtal_mbtr_int_rr": 76, "bxtal_mbtr_int_krr": 76, "bxtal_mbtr_ext_rr": 76, "bxtal_mbtr_ext_krr": 76, "bxtal_pdf": 76, "bxtal_pdf_soap_standard_rr": 76, "bxtal_pdf_gylm_standard_rr": 76, "bxtal_pdf_soap_standard_krr": 76, "bxtal_pdf_gylm_standard_krr": 76, "bxtal_pdf_soap_minimal_rr": 76, "bxtal_pdf_gylm_minimal_rr": 76, "bxtal_pdf_soap_minimal_krr": 76, "bxtal_pdf_gylm_minimal_krr": 76, "bxtal_physchem": 76, "bxtal_physchem_s05_rfr": 76, "bxtal_physchem_s05_rr": 76, "bxtal_physchem_s10_rfr": 76, "bxtal_physchem_s10_rr": 76, "bxtal_physchem_s20_rfr": 76, "bxtal_physchem_s20_rr": 76, "bxtal_soap": 76, "bxtal_soap_minimal_nocross_int_krr": 76, "bxtal_soap_minimal_cross_int_krr": 76, "bxtal_soap_smart_nocross_int_krr": 76, "bxtal_soap_smart_cross_int_krr": 76, "bxtal_soap_longrange_nocross_int_krr": 76, "bxtal_soap_longrange_cross_int_krr": 76, "bxtal_soap_minimal_nocross_ext_krr": 76, "bxtal_soap_minimal_cross_ext_krr": 76, "bxtal_soap_smart_nocross_ext_krr": 76, "bxtal_soap_smart_cross_ext_krr": 76, "bxtal_soap_longrange_nocross_ext_krr": 76, "bxtal_soap_longrange_cross_ext_krr": 76, "bxtal_soap_minimal_nocross_int_rr": 76, "bxtal_soap_minimal_cross_int_rr": 76, "bxtal_soap_smart_nocross_int_rr": 76, "bxtal_soap_smart_cross_int_rr": 76, "bxtal_soap_longrange_nocross_int_rr": 76, "bxtal_soap_longrange_cross_int_rr": 76, "bxtal_soap_minimal_nocross_ext_rr": 76, "bxtal_soap_minimal_cross_ext_rr": 76, "bxtal_soap_smart_nocross_ext_rr": 76, "bxtal_soap_smart_cross_ext_rr": 76, "bxtal_soap_longrange_nocross_ext_rr": 76, "bxtal_soap_longrange_cross_ext_rr": 76, "dscribe": 76, "cm_rr": 76, "acsf_rr": 76, "mbtr_rr": 76, "lmbtr_rr": 76, "sinematrix_rr": 76, "ecfp": 76, "morgan_krr": 76, "morgan_krr_ext": 76, "morgan_rr": 76, "morgan_gb": 76, "morgan_rfr": 76, "gylm": 76, "gylm_average_krr": 76, "gylm_average_krr_grid": 76, "gylm_smooth_match_krr": 76, "logd": 76, "logd_lr": 76, "logd_physchem_rfr": 76, "logd_delta_hybrid_topo_krr": 76, "logd_delta_hybrid_gylm_krr": 76, "logd_hybrid_topo_krr": 76, "logd_hybrid_topo_rgp": 76, "logd_hybrid_topo_gp": 76, "logd_hybrid_gylm_krr": 76, "logd_delta_gylm_krr": 76, "logd_delta_topo_krr": 76, "logd_ai": 76, "logd_ai_hybrid_topo_cxlogp_gp": 76, "logd_ai_hybrid_topo_rdlogp_gp": 76, "logd_extens": 76, "logd_gylm_minimal_rr": 76, "logd_gylm_hybrid_rr": 76, "logd_gylm_extended_rr": 76, "soap_krr_00": 76, "soap_krr_01": 76, "soap_krr_02": 76, "soap_krr_03": 76, "soap_krr_04": 76, "soap_krr_05": 76, "xy_classifi": 76, "xy_rf_class": 76, "xy_regressor": 76, "xy_rfr": 76}, "objects": {"": [[1, 0, 0, "-", "benchml"]], "benchml": [[1, 1, 1, "", "Accumulator"], [1, 3, 1, "", "Args"], [1, 4, 1, "", "Split"], [1, 1, 1, "", "Transform"], [2, 0, 0, "-", "accumulator"], [3, 0, 0, "-", "analysis"], [4, 0, 0, "-", "basic"], [5, 0, 0, "-", "benchmark"], [6, 0, 0, "-", "conformal"], [7, 0, 0, "-", "data"], [8, 0, 0, "-", "descriptors"], [10, 0, 0, "-", "ensemble"], [11, 0, 0, "-", "filters"], [1, 1, 1, "", "hupdate"], [13, 0, 0, "-", "hyper"], [14, 0, 0, "-", "inputs"], [15, 0, 0, "-", "kernels"], [1, 4, 1, "", "load"], [1, 4, 1, "", "load_dataset"], [17, 0, 0, "-", "logger"], [18, 0, 0, "-", "matrix"], [19, 0, 0, "-", "models"], [29, 0, 0, "-", "pipeline"], [30, 0, 0, "-", "plugins"], [41, 0, 0, "-", "predictors"], [44, 0, 0, "-", "ptable"], [1, 4, 1, "", "read"], [45, 0, 0, "-", "readwrite"], [1, 4, 1, "", "save"], [1, 1, 1, "", "sopen"], [46, 0, 0, "-", "splits"], [1, 3, 1, "", "stream"], [47, 0, 0, "-", "test"], [48, 0, 0, "-", "transforms"], [49, 0, 0, "-", "utils"], [1, 4, 1, "", "write"]], "benchml.Accumulator": [[1, 2, 1, "", "append"], [1, 3, 1, "", "eval_map"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "evaluateAll"], [1, 2, 1, "", "evaluateNull"], [1, 2, 1, "", "load"], [1, 2, 1, "", "save"], [1, 2, 1, "", "score"], [1, 2, 1, "", "select"], [1, 3, 1, "", "select_best"]], "benchml.Transform": [[1, 2, 1, "", "map"]], "benchml.accumulator": [[2, 1, 1, "", "Accumulator"], [2, 4, 1, "", "metric_acc"], [2, 4, 1, "", "metric_auc"], [2, 4, 1, "", "metric_auc_ovo"], [2, 4, 1, "", "metric_auc_ovr"], [2, 4, 1, "", "metric_bal"], [2, 4, 1, "", "metric_mae"], [2, 4, 1, "", "metric_mcc"], [2, 4, 1, "", "metric_mse"], [2, 4, 1, "", "metric_prec"], [2, 4, 1, "", "metric_r2"], [2, 4, 1, "", "metric_rec"], [2, 4, 1, "", "metric_rhop"], [2, 4, 1, "", "metric_rhor"], [2, 4, 1, "", "metric_rmse"], [2, 4, 1, "", "metric_sup"]], "benchml.accumulator.Accumulator": [[2, 2, 1, "", "append"], [2, 3, 1, "", "eval_map"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "evaluateAll"], [2, 2, 1, "", "evaluateNull"], [2, 2, 1, "", "load"], [2, 2, 1, "", "save"], [2, 2, 1, "", "score"], [2, 2, 1, "", "select"], [2, 3, 1, "", "select_best"]], "benchml.analysis": [[3, 4, 1, "", "analyse"], [3, 4, 1, "", "analyse_section"], [3, 4, 1, "", "read_split_props"], [3, 4, 1, "", "read_split_props_single"]], "benchml.basic": [[4, 1, 1, "", "Add"], [4, 1, 1, "", "Delta"], [4, 1, 1, "", "DoDivideBySize"], [4, 1, 1, "", "Exp"], [4, 1, 1, "", "Mult"], [4, 1, 1, "", "RankNorm"], [4, 1, 1, "", "SliceMatrix"], [4, 1, 1, "", "UndoDivideBySize"]], "benchml.basic.Add": [[4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "req_args"], [4, 3, 1, "", "req_inputs"]], "benchml.basic.Delta": [[4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "req_inputs"], [4, 3, 1, "", "stream_samples"]], "benchml.basic.DoDivideBySize": [[4, 3, 1, "", "allow_params"], [4, 3, 1, "", "allow_stream"], [4, 2, 1, "", "checkDoDivide"], [4, 3, 1, "", "default_args"], [4, 3, 1, "", "req_inputs"]], "benchml.basic.Exp": [[4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "default_args"], [4, 3, 1, "", "req_inputs"]], "benchml.basic.Mult": [[4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "req_inputs"]], "benchml.basic.RankNorm": [[4, 3, 1, "", "allow_params"], [4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "req_inputs"]], "benchml.basic.SliceMatrix": [[4, 3, 1, "", "allow_params"], [4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "default_args"], [4, 3, 1, "", "req_inputs"]], "benchml.basic.UndoDivideBySize": [[4, 3, 1, "", "allow_stream"], [4, 3, 1, "", "req_inputs"]], "benchml.benchmark": [[5, 4, 1, "", "evaluate"], [5, 4, 1, "", "evaluate_ensemble"], [5, 4, 1, "", "evaluate_model"], [5, 4, 1, "", "make_split_id"], [5, 4, 1, "", "parse"]], "benchml.conformal": [[6, 1, 1, "", "ConformalBase"], [6, 1, 1, "", "ConformalClassifier"], [6, 1, 1, "", "ConformalMultiClassifier"], [6, 1, 1, "", "ConformalRegressor"], [6, 4, 1, "", "fsigmoid"]], "benchml.conformal.ConformalBase": [[6, 3, 1, "", "allow_params"], [6, 3, 1, "", "allow_stream"], [6, 3, 1, "", "default_args"], [6, 3, 1, "", "req_inputs"], [6, 3, 1, "", "slice_funcs_fit"], [6, 3, 1, "", "slice_funcs_map"]], "benchml.conformal.ConformalClassifier": [[6, 2, 1, "", "calibrate"], [6, 3, 1, "", "default_args"]], "benchml.conformal.ConformalMultiClassifier": [[6, 2, 1, "", "calibrate"], [6, 3, 1, "", "default_args"]], "benchml.conformal.ConformalRegressor": [[6, 3, 1, "", "default_args"]], "benchml.data": [[7, 1, 1, "", "BenchmarkData"], [7, 1, 1, "", "Dataset"], [7, 1, 1, "", "DatasetIterator"], [7, 1, 1, "", "ExttDataset"], [7, 4, 1, "", "compile"], [7, 4, 1, "", "load_dataset"]], "benchml.data.Dataset": [[7, 2, 1, "", "create_from_file"], [7, 2, 1, "", "info"], [7, 2, 1, "", "read_data"], [7, 3, 1, "", "target_converter"]], "benchml.data.ExttDataset": [[7, 3, 1, "", "arrays"], [7, 2, 1, "", "create_from_file"], [7, 2, 1, "", "info"], [7, 3, 1, "", "meta"], [7, 2, 1, "", "read_data_from_file"], [7, 2, 1, "", "slice"]], "benchml.descriptors": [[8, 1, 1, "", "DescriptorRandom"], [9, 0, 0, "-", "descr_basic"]], "benchml.descriptors.DescriptorRandom": [[8, 3, 1, "", "allow_stream"], [8, 3, 1, "", "precompute"], [8, 3, 1, "", "req_args"], [8, 3, 1, "", "req_inputs"], [8, 3, 1, "", "stream_samples"]], "benchml.descriptors.descr_basic": [[9, 1, 1, "", "DescriptorRandom"]], "benchml.descriptors.descr_basic.DescriptorRandom": [[9, 3, 1, "", "allow_stream"], [9, 3, 1, "", "precompute"], [9, 3, 1, "", "req_args"], [9, 3, 1, "", "req_inputs"], [9, 3, 1, "", "stream_samples"]], "benchml.ensemble": [[10, 1, 1, "", "EnsembleBase"], [10, 1, 1, "", "EnsembleRegressor"]], "benchml.ensemble.EnsembleBase": [[10, 3, 1, "", "allow_params"], [10, 3, 1, "", "allow_stream"], [10, 3, 1, "", "default_args"], [10, 3, 1, "", "req_inputs"], [10, 3, 1, "", "slice_funcs_fit"], [10, 3, 1, "", "slice_funcs_map"]], "benchml.ensemble.EnsembleRegressor": [[10, 2, 1, "", "fitSingle"]], "benchml.filters": [[11, 1, 1, "", "CleanMatrix"], [11, 1, 1, "", "MarchenkoPasturFilter"], [12, 0, 0, "-", "random_matrix"]], "benchml.filters.CleanMatrix": [[11, 3, 1, "", "allow_params"], [11, 3, 1, "", "allow_stream"], [11, 3, 1, "", "default_args"], [11, 3, 1, "", "req_inputs"], [11, 3, 1, "", "stream_samples"]], "benchml.filters.MarchenkoPasturFilter": [[11, 3, 1, "", "allow_params"], [11, 3, 1, "", "allow_stream"], [11, 3, 1, "", "default_args"], [11, 3, 1, "", "precompute"], [11, 3, 1, "", "req_inputs"], [11, 3, 1, "", "stream_samples"]], "benchml.filters.random_matrix": [[12, 1, 1, "", "CleanMatrix"], [12, 1, 1, "", "MarchenkoPasturFilter"], [12, 4, 1, "", "dist_mp"], [12, 4, 1, "", "dist_mp_bounds"], [12, 4, 1, "", "dist_mp_sample"], [12, 4, 1, "", "dist_mp_test"], [12, 4, 1, "", "div0"], [12, 4, 1, "", "pca_compute"]], "benchml.filters.random_matrix.CleanMatrix": [[12, 3, 1, "", "allow_params"], [12, 3, 1, "", "allow_stream"], [12, 3, 1, "", "default_args"], [12, 3, 1, "", "req_inputs"], [12, 3, 1, "", "stream_samples"]], "benchml.filters.random_matrix.MarchenkoPasturFilter": [[12, 3, 1, "", "allow_params"], [12, 3, 1, "", "allow_stream"], [12, 3, 1, "", "default_args"], [12, 3, 1, "", "precompute"], [12, 3, 1, "", "req_inputs"], [12, 3, 1, "", "stream_samples"]], "benchml.hyper": [[13, 1, 1, "", "BayesianHyper"], [13, 1, 1, "", "GridHyper"], [13, 1, 1, "", "Hyper"]], "benchml.hyper.BayesianHyper": [[13, 2, 1, "", "atomizeArrays"], [13, 2, 1, "", "convertUpdates"], [13, 2, 1, "", "detectArrays"], [13, 2, 1, "", "findBounds"], [13, 2, 1, "", "getFields"], [13, 2, 1, "", "joinArrays"], [13, 2, 1, "", "optimize"]], "benchml.hyper.GridHyper": [[13, 2, 1, "", "add"], [13, 2, 1, "", "getFields"], [13, 2, 1, "", "optimize"], [13, 2, 1, "", "random"]], "benchml.hyper.Hyper": [[13, 2, 1, "", "random"]], "benchml.inputs": [[14, 1, 1, "", "ExtXyzInput"], [14, 1, 1, "", "ExttInput"]], "benchml.inputs.ExtXyzInput": [[14, 3, 1, "", "allow_stream"], [14, 3, 1, "", "stream_copy"], [14, 3, 1, "", "stream_samples"]], "benchml.inputs.ExttInput": [[14, 3, 1, "", "allow_stream"], [14, 3, 1, "", "stream_copy"], [14, 3, 1, "", "stream_samples"]], "benchml.kernels": [[15, 1, 1, "", "KernelBase"], [15, 1, 1, "", "KernelDot"], [15, 1, 1, "", "KernelGaussian"], [16, 0, 0, "-", "kern_basic"]], "benchml.kernels.KernelBase": [[15, 2, 1, "", "evaluate"], [15, 2, 1, "", "evaluateFit"], [15, 2, 1, "", "evaluatePredict"]], "benchml.kernels.KernelDot": [[15, 3, 1, "", "allow_params"], [15, 3, 1, "", "allow_stream"], [15, 3, 1, "", "default_args"], [15, 2, 1, "", "evaluate"], [15, 3, 1, "", "precompute"], [15, 3, 1, "", "req_inputs"], [15, 3, 1, "", "stream_kernel"], [15, 3, 1, "", "stream_samples"]], "benchml.kernels.KernelGaussian": [[15, 3, 1, "", "allow_params"], [15, 3, 1, "", "allow_stream"], [15, 3, 1, "", "default_args"], [15, 2, 1, "", "evaluate"], [15, 3, 1, "", "precompute"], [15, 3, 1, "", "req_inputs"], [15, 3, 1, "", "stream_kernel"], [15, 3, 1, "", "stream_samples"]], "benchml.kernels.kern_basic": [[16, 1, 1, "", "KernelBase"], [16, 1, 1, "", "KernelDot"], [16, 1, 1, "", "KernelGaussian"]], "benchml.kernels.kern_basic.KernelBase": [[16, 2, 1, "", "evaluate"], [16, 2, 1, "", "evaluateFit"], [16, 2, 1, "", "evaluatePredict"]], "benchml.kernels.kern_basic.KernelDot": [[16, 3, 1, "", "allow_params"], [16, 3, 1, "", "allow_stream"], [16, 3, 1, "", "default_args"], [16, 2, 1, "", "evaluate"], [16, 3, 1, "", "precompute"], [16, 3, 1, "", "req_inputs"], [16, 3, 1, "", "stream_kernel"], [16, 3, 1, "", "stream_samples"]], "benchml.kernels.kern_basic.KernelGaussian": [[16, 3, 1, "", "allow_params"], [16, 3, 1, "", "allow_stream"], [16, 3, 1, "", "default_args"], [16, 2, 1, "", "evaluate"], [16, 3, 1, "", "precompute"], [16, 3, 1, "", "req_inputs"], [16, 3, 1, "", "stream_kernel"], [16, 3, 1, "", "stream_samples"]], "benchml.logger": [[17, 3, 1, "", "Args"], [17, 1, 1, "", "CLIO_HelpFormatter"], [17, 1, 1, "", "ExtendableNamespace"], [17, 4, 1, "", "GenerateTreeDict"], [17, 1, 1, "", "LOGGER"], [17, 1, 1, "", "LOGLEVEL"], [17, 3, 1, "", "Mock"], [17, 4, 1, "", "NamespaceFromDict"], [17, 1, 1, "", "OS_COLOR"], [17, 1, 1, "", "OS_EXE_ASSERT"], [17, 1, 1, "", "OS_EXE_CATCH"], [17, 1, 1, "", "OS_EXE_DEV"], [17, 1, 1, "", "OS_LINE_CHAR"], [17, 1, 1, "", "OptionsInterface"], [17, 1, 1, "", "ShellInterface"], [17, 1, 1, "", "XmlNode"], [17, 1, 1, "", "XmlTree"]], "benchml.logger.ExtendableNamespace": [[17, 2, 1, "", "Add"], [17, 2, 1, "", "AddNamespace"]], "benchml.logger.LOGGER": [[17, 2, 1, "", "sleep"]], "benchml.logger.LOGLEVEL": [[17, 3, 1, "", "levels"]], "benchml.logger.OptionsInterface": [[17, 2, 1, "", "AddArg"], [17, 2, 1, "", "Connect"], [17, 2, 1, "", "ConnectToCmdLn"], [17, 2, 1, "", "ConnectToOptionsFile"], [17, 2, 1, "", "InterpretAsBoolean"], [17, 2, 1, "", "InterpretAsList"], [17, 2, 1, "", "Parse"], [17, 2, 1, "", "ParseCmdLn"], [17, 2, 1, "", "ParseOptionsFile"], [17, 2, 1, "", "ParseOptionsFileXml"]], "benchml.logger.ShellInterface": [[17, 2, 1, "", "ConnectToFile"], [17, 2, 1, "", "DisconnectFromFile"], [17, 2, 1, "", "abspath"], [17, 2, 1, "", "cd"], [17, 2, 1, "", "cwd"], [17, 2, 1, "", "mkcd"], [17, 2, 1, "", "okquit"], [17, 2, 1, "", "os_generate_header"], [17, 2, 1, "", "os_print"], [17, 2, 1, "", "os_print_config"], [17, 2, 1, "", "os_print_reset"], [17, 2, 1, "", "pwd"], [17, 2, 1, "", "root"], [17, 2, 1, "", "setLevel"], [17, 2, 1, "", "xxquit"]], "benchml.logger.XmlNode": [[17, 2, 1, "", "As"], [17, 2, 1, "", "AsArray"], [17, 2, 1, "", "SetNodeValue"]], "benchml.logger.XmlTree": [[17, 2, 1, "", "SelectByTag"], [17, 2, 1, "", "keys"]], "benchml.matrix": [[18, 1, 1, "", "Concatenate"], [18, 1, 1, "", "ReduceMatrix"], [18, 1, 1, "", "ReduceTypedMatrix"], [18, 1, 1, "", "Reshape"], [18, 1, 1, "", "SubsampleMatrix"], [18, 1, 1, "", "WhitenMatrix"]], "benchml.matrix.Concatenate": [[18, 3, 1, "", "allow_stream"], [18, 3, 1, "", "default_args"], [18, 3, 1, "", "precompute"], [18, 3, 1, "", "req_inputs"], [18, 3, 1, "", "stream_samples"]], "benchml.matrix.ReduceMatrix": [[18, 3, 1, "", "allow_stream"], [18, 3, 1, "", "default_args"], [18, 3, 1, "", "req_inputs"], [18, 3, 1, "", "stream_samples"]], "benchml.matrix.ReduceTypedMatrix": [[18, 3, 1, "", "allow_ops"], [18, 3, 1, "", "allow_params"], [18, 3, 1, "", "allow_stream"], [18, 3, 1, "", "default_args"], [18, 3, 1, "", "optional_inputs"], [18, 3, 1, "", "req_inputs"], [18, 3, 1, "", "stream_samples"]], "benchml.matrix.Reshape": [[18, 3, 1, "", "allow_stream"], [18, 3, 1, "", "default_args"], [18, 3, 1, "", "req_args"], [18, 3, 1, "", "req_inputs"]], "benchml.matrix.SubsampleMatrix": [[18, 3, 1, "", "allow_stream"], [18, 3, 1, "", "default_args"]], "benchml.matrix.WhitenMatrix": [[18, 3, 1, "", "allow_params"], [18, 3, 1, "", "allow_stream"], [18, 3, 1, "", "default_args"], [18, 3, 1, "", "req_inputs"]], "benchml.models": [[20, 0, 0, "-", "common"], [19, 4, 1, "", "compile"], [19, 4, 1, "", "compile_and_filter"], [19, 4, 1, "", "get"], [19, 4, 1, "", "list_all"], [21, 0, 0, "-", "mod_basic"], [22, 0, 0, "-", "mod_bench"], [23, 0, 0, "-", "mod_bench_class"], [24, 0, 0, "-", "mod_bench_xtal"], [25, 0, 0, "-", "mod_dscribe"], [26, 0, 0, "-", "mod_logd"], [27, 0, 0, "-", "mod_logd_ai"], [28, 0, 0, "-", "mod_xy"]], "benchml.models.common": [[20, 4, 1, "", "get_acsf_krr_kwargs"], [20, 4, 1, "", "get_acsf_rr_kwargs"], [20, 4, 1, "", "get_compile_gylm"], [20, 4, 1, "", "get_logd_hybrid_topo_gp_kwargs"], [20, 4, 1, "", "get_mbtr_krr_kwargs"], [20, 4, 1, "", "get_mbtr_rr_kwargs"], [20, 4, 1, "", "get_pdf_gylm_krr_kwargs"], [20, 4, 1, "", "get_pdf_gylm_rr_kwargs"], [20, 4, 1, "", "get_pdf_soap_krr_kwargs"], [20, 4, 1, "", "get_pdf_soap_rr_kwargs"], [20, 4, 1, "", "make_gylm_krr"], [20, 4, 1, "", "make_gylm_rr"], [20, 4, 1, "", "make_soap_krr"], [20, 4, 1, "", "make_soap_rr"]], "benchml.models.mod_basic": [[21, 4, 1, "", "compile_gylm"], [21, 4, 1, "", "compile_morgan"], [21, 4, 1, "", "compile_null"], [21, 4, 1, "", "compile_soap"], [21, 4, 1, "", "make_soap_krr"], [21, 4, 1, "", "register_all"]], "benchml.models.mod_bench": [[22, 4, 1, "", "compile_acsf"], [22, 4, 1, "", "compile_cm"], [22, 4, 1, "", "compile_ecfp"], [22, 4, 1, "", "compile_mbtr"], [22, 4, 1, "", "compile_pdf"], [22, 4, 1, "", "compile_physchem"], [22, 4, 1, "", "compile_soap"], [22, 4, 1, "", "make_pdf_krr"], [22, 4, 1, "", "make_pdf_rr"], [22, 4, 1, "", "register_all"]], "benchml.models.mod_bench_class": [[23, 4, 1, "", "compile_ecfp_class"], [23, 4, 1, "", "compile_gylm_match_class"], [23, 4, 1, "", "compile_physchem_class"], [23, 4, 1, "", "register_all"]], "benchml.models.mod_bench_xtal": [[24, 4, 1, "", "compile_acsf"], [24, 4, 1, "", "compile_esm"], [24, 4, 1, "", "compile_mbtr"], [24, 4, 1, "", "compile_pdf"], [24, 4, 1, "", "compile_physchem"], [24, 4, 1, "", "compile_soap"], [24, 4, 1, "", "make_pdf_krr"], [24, 4, 1, "", "make_pdf_rr"], [24, 4, 1, "", "register_all"]], "benchml.models.mod_dscribe": [[25, 4, 1, "", "compile_dscribe"], [25, 4, 1, "", "register_all"]], "benchml.models.mod_logd": [[26, 4, 1, "", "compile_logd"], [26, 4, 1, "", "compile_logd_extensive"], [26, 4, 1, "", "register_all"]], "benchml.models.mod_logd_ai": [[27, 4, 1, "", "compile_logd_ai"], [27, 4, 1, "", "register_all"]], "benchml.models.mod_xy": [[28, 4, 1, "", "compile_xy_classifiers"], [28, 4, 1, "", "compile_xy_regressors"], [28, 4, 1, "", "register_all"]], "benchml.pipeline": [[29, 1, 1, "", "FitTransform"], [29, 1, 1, "", "InputTransform"], [29, 1, 1, "", "Macro"], [29, 1, 1, "", "ModelType"], [29, 1, 1, "", "Module"], [29, 1, 1, "", "Params"], [29, 1, 1, "", "Standalone"], [29, 1, 1, "", "Stream"], [29, 1, 1, "", "StreamHandle"], [29, 1, 1, "", "Transform"], [29, 1, 1, "", "TransformBase"], [29, 4, 1, "", "deps_from_input"], [29, 4, 1, "", "deps_from_inputs"], [29, 4, 1, "", "force_json"], [29, 4, 1, "", "generate_hash_id"], [29, 1, 1, "", "hupdate"], [29, 4, 1, "", "log_stage_info_message"], [29, 1, 1, "", "sopen"], [29, 3, 1, "", "stream"]], "benchml.pipeline.FitTransform": [[29, 2, 1, "", "fit"]], "benchml.pipeline.InputTransform": [[29, 2, 1, "", "feed"], [29, 2, 1, "", "map"]], "benchml.pipeline.Macro": [[29, 3, 1, "", "is_macro"], [29, 3, 1, "", "req_args"], [29, 3, 1, "", "req_inputs"], [29, 3, 1, "", "transforms"]], "benchml.pipeline.ModelType": [[29, 3, 1, "", "classification"], [29, 3, 1, "", "na"], [29, 3, 1, "", "regression"]], "benchml.pipeline.Module": [[29, 2, 1, "", "activateStream"], [29, 2, 1, "", "append"], [29, 2, 1, "", "check_available"], [29, 2, 1, "", "clearDependencies"], [29, 2, 1, "", "clearParams"], [29, 2, 1, "", "close"], [29, 2, 1, "", "compileArgs"], [29, 2, 1, "", "compileInputs"], [29, 2, 1, "", "compileStream"], [29, 2, 1, "", "create_mermaid_graph"], [29, 3, 1, "", "def_doc"], [29, 2, 1, "", "deploy"], [29, 3, 1, "", "docstring_template"], [29, 2, 1, "", "document_transform"], [29, 2, 1, "", "filter"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "freeze"], [29, 2, 1, "", "hashState"], [29, 2, 1, "", "hyperEval"], [29, 2, 1, "", "hyperUpdate"], [29, 2, 1, "", "hyperfit"], [29, 2, 1, "", "make_doc_header"], [29, 2, 1, "", "make_pipeline_section"], [29, 2, 1, "", "make_transforms_section"], [29, 2, 1, "", "map"], [29, 3, 1, "", "model_types"], [29, 2, 1, "", "open"], [29, 2, 1, "", "openStream"], [29, 2, 1, "", "precompute"], [29, 2, 1, "", "reconnect"], [29, 2, 1, "", "replace"], [29, 2, 1, "", "resolveArgs"], [29, 2, 1, "", "resolveOutputs"], [29, 2, 1, "", "showHelpMessage"], [29, 2, 1, "", "unfreeze"], [29, 2, 1, "", "updateDependencies"]], "benchml.pipeline.Params": [[29, 2, 1, "", "clone"], [29, 2, 1, "", "get"], [29, 2, 1, "", "has"], [29, 2, 1, "", "items"], [29, 2, 1, "", "keys"], [29, 2, 1, "", "put"], [29, 2, 1, "", "version"]], "benchml.pipeline.Standalone": [[29, 2, 1, "", "fit"], [29, 2, 1, "", "map"], [29, 2, 1, "", "params"]], "benchml.pipeline.Stream": [[29, 2, 1, "", "get"], [29, 2, 1, "", "has"], [29, 2, 1, "", "info"], [29, 2, 1, "", "items"], [29, 2, 1, "", "keys"], [29, 2, 1, "", "put"], [29, 2, 1, "", "resolve"], [29, 2, 1, "", "select"], [29, 2, 1, "", "sliceStorage"], [29, 2, 1, "", "split"], [29, 2, 1, "", "version"]], "benchml.pipeline.StreamHandle": [[29, 2, 1, "", "activate"], [29, 2, 1, "", "clear"], [29, 2, 1, "", "createPartition"], [29, 2, 1, "", "getActive"], [29, 2, 1, "", "getStream"], [29, 2, 1, "", "hasPartition"], [29, 2, 1, "", "info"], [29, 2, 1, "", "setActive"], [29, 2, 1, "", "setStreamFor"]], "benchml.pipeline.Transform": [[29, 2, 1, "", "map"]], "benchml.pipeline.TransformBase": [[29, 2, 1, "", "activateParams"], [29, 3, 1, "", "allow_params"], [29, 3, 1, "", "allow_stream"], [29, 2, 1, "", "attach"], [29, 2, 1, "", "checkRequire"], [29, 2, 1, "", "check_available"], [29, 2, 1, "", "clearDependencies"], [29, 2, 1, "", "clearParams"], [29, 3, 1, "", "default_args"], [29, 2, 1, "", "deploy"], [29, 2, 1, "", "detach"], [29, 2, 1, "", "freeze"], [29, 2, 1, "", "frozen"], [29, 2, 1, "", "getHash"], [29, 2, 1, "", "hashChanged"], [29, 2, 1, "", "hashSelfChanged"], [29, 2, 1, "", "hashState"], [29, 3, 1, "", "help_args"], [29, 3, 1, "", "help_inputs"], [29, 3, 1, "", "help_params"], [29, 3, 1, "", "help_stream"], [29, 2, 1, "", "openParams"], [29, 2, 1, "", "openStream"], [29, 2, 1, "", "params"], [29, 2, 1, "", "parseArgsLinks"], [29, 3, 1, "", "precompute"], [29, 2, 1, "", "ready"], [29, 3, 1, "", "req_args"], [29, 3, 1, "", "req_inputs"], [29, 2, 1, "", "requireArgs"], [29, 2, 1, "", "requireInputs"], [29, 2, 1, "", "resolveArgs"], [29, 2, 1, "", "resolveInputs"], [29, 2, 1, "", "setup"], [29, 2, 1, "", "showHelpMessage"], [29, 3, 1, "", "stream_copy"], [29, 3, 1, "", "stream_kernel"], [29, 3, 1, "", "stream_samples"], [29, 3, 1, "", "stream_self_kernel"], [29, 2, 1, "", "updateDependencies"], [29, 2, 1, "", "updateInputs"]], "benchml.plugins": [[31, 0, 0, "-", "plugin_asap"], [32, 0, 0, "-", "plugin_check"], [33, 0, 0, "-", "plugin_cx"], [34, 0, 0, "-", "plugin_dscribe"], [35, 0, 0, "-", "plugin_gylmxx"], [36, 0, 0, "-", "plugin_nphil"], [37, 0, 0, "-", "plugin_physchem"], [38, 0, 0, "-", "plugin_rdkit"], [39, 0, 0, "-", "plugin_soap"], [40, 0, 0, "-", "plugin_torch"]], "benchml.plugins.plugin_asap": [[31, 1, 1, "", "AsapTransform"], [31, 1, 1, "", "D2K"], [31, 1, 1, "", "DimReduce"], [31, 1, 1, "", "KernelDensity"], [31, 1, 1, "", "SparseKPCA"], [31, 1, 1, "", "SparseKRR"], [31, 1, 1, "", "SparseSVM"], [31, 4, 1, "", "check_asap_available"]], "benchml.plugins.plugin_asap.AsapTransform": [[31, 2, 1, "", "check_available"]], "benchml.plugins.plugin_check": [[32, 4, 1, "", "check_asap_available"], [32, 4, 1, "", "check_dscribe_available"], [32, 4, 1, "", "check_gylmxx_available"], [32, 4, 1, "", "check_nphil_available"], [32, 4, 1, "", "check_rdkit_available"], [32, 4, 1, "", "check_torch_available"]], "benchml.plugins.plugin_cx": [[33, 1, 1, "", "CxCalcTransform"], [33, 4, 1, "", "get_smiles"]], "benchml.plugins.plugin_cx.CxCalcTransform": [[33, 3, 1, "", "allow_stream"], [33, 3, 1, "", "default_args"], [33, 3, 1, "", "precompute"], [33, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_dscribe": [[34, 1, 1, "", "DscribeACSF"], [34, 1, 1, "", "DscribeCM"], [34, 1, 1, "", "DscribeEwaldSumMatrix"], [34, 1, 1, "", "DscribeLMBTR"], [34, 1, 1, "", "DscribeMBTR"], [34, 1, 1, "", "DscribeSineMatrix"], [34, 1, 1, "", "DscribeTransform"], [34, 1, 1, "", "UniversalDscribeACSF"]], "benchml.plugins.plugin_dscribe.DscribeACSF": [[34, 3, 1, "", "CalculatorClass"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_dscribe.DscribeCM": [[34, 3, 1, "", "CalculatorClass"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_dscribe.DscribeEwaldSumMatrix": [[34, 3, 1, "", "CalculatorClass"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_dscribe.DscribeLMBTR": [[34, 3, 1, "", "CalculatorClass"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_dscribe.DscribeMBTR": [[34, 3, 1, "", "CalculatorClass"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_dscribe.DscribeSineMatrix": [[34, 3, 1, "", "CalculatorClass"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_dscribe.DscribeTransform": [[34, 2, 1, "", "CalculatorClass"], [34, 3, 1, "", "allow_params"], [34, 3, 1, "", "allow_stream"], [34, 2, 1, "", "check_available"], [34, 3, 1, "", "log"], [34, 3, 1, "", "precompute"], [34, 3, 1, "", "req_inputs"], [34, 3, 1, "", "stream_samples"], [34, 3, 1, "", "verbose"]], "benchml.plugins.plugin_dscribe.UniversalDscribeACSF": [[34, 3, 1, "", "CalculatorClass"], [34, 2, 1, "", "check_available"], [34, 3, 1, "", "default_args"]], "benchml.plugins.plugin_gylmxx": [[35, 1, 1, "", "AttributeKernelSmoothMatchSVM"], [35, 1, 1, "", "AttributeSmoothMatchKernelRidge"], [35, 1, 1, "", "GylmAtomic"], [35, 1, 1, "", "GylmAverage"], [35, 1, 1, "", "GylmReduceConvolve"], [35, 1, 1, "", "GylmTransform"], [35, 1, 1, "", "KernelSmoothMatch"], [35, 1, 1, "", "NlocX"], [35, 4, 1, "", "as_object_array"], [35, 4, 1, "", "gylm_evaluate"], [35, 4, 1, "", "gylm_evaluate_mp"], [35, 4, 1, "", "gylm_evaluate_single"]], "benchml.plugins.plugin_gylmxx.AttributeKernelSmoothMatchSVM": [[35, 3, 1, "", "allow_stream"], [35, 3, 1, "", "default_args"], [35, 3, 1, "", "req_inputs"], [35, 3, 1, "", "verbose"]], "benchml.plugins.plugin_gylmxx.AttributeSmoothMatchKernelRidge": [[35, 3, 1, "", "allow_stream"], [35, 3, 1, "", "default_args"], [35, 3, 1, "", "req_inputs"], [35, 3, 1, "", "verbose"]], "benchml.plugins.plugin_gylmxx.GylmReduceConvolve": [[35, 3, 1, "", "allow_stream"], [35, 3, 1, "", "default_args"], [35, 3, 1, "", "precompute"], [35, 3, 1, "", "req_args"], [35, 3, 1, "", "req_inputs"], [35, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_gylmxx.GylmTransform": [[35, 3, 1, "", "allow_params"], [35, 3, 1, "", "allow_stream"], [35, 2, 1, "", "check_available"], [35, 3, 1, "", "default_args"], [35, 3, 1, "", "log"], [35, 3, 1, "", "precompute"], [35, 3, 1, "", "req_inputs"], [35, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_gylmxx.KernelSmoothMatch": [[35, 3, 1, "", "allow_params"], [35, 3, 1, "", "allow_stream"], [35, 2, 1, "", "check_available"], [35, 3, 1, "", "default_args"], [35, 2, 1, "", "evaluate"], [35, 3, 1, "", "log"], [35, 3, 1, "", "precompute"], [35, 3, 1, "", "req_inputs"], [35, 3, 1, "", "stream_kernel"], [35, 3, 1, "", "stream_samples"], [35, 3, 1, "", "verbose"]], "benchml.plugins.plugin_gylmxx.NlocX": [[35, 2, 1, "", "check_available"], [35, 3, 1, "", "default_args"]], "benchml.plugins.plugin_nphil": [[36, 1, 1, "", "NonlinearFeatureFilter"]], "benchml.plugins.plugin_nphil.NonlinearFeatureFilter": [[36, 3, 1, "", "allow_params"], [36, 3, 1, "", "allow_stream"], [36, 2, 1, "", "check_available"], [36, 3, 1, "", "default_args"], [36, 2, 1, "", "generateGraph"], [36, 3, 1, "", "req_inputs"]], "benchml.plugins.plugin_physchem": [[37, 1, 1, "", "Physchem2D"], [37, 1, 1, "", "PhyschemUser"], [37, 1, 1, "", "PhyschemXtal"], [37, 4, 1, "", "get_atomic_data"]], "benchml.plugins.plugin_physchem.Physchem2D": [[37, 3, 1, "", "allow_stream"], [37, 3, 1, "", "default_args"], [37, 3, 1, "", "descriptors"], [37, 3, 1, "", "descriptors_active"], [37, 3, 1, "", "help_args"], [37, 3, 1, "", "precompute"], [37, 3, 1, "", "predefined"], [37, 3, 1, "", "req_inputs"], [37, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_physchem.PhyschemUser": [[37, 3, 1, "", "allow_stream"], [37, 3, 1, "", "default_args"], [37, 3, 1, "", "req_args"], [37, 3, 1, "", "req_inputs"], [37, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_physchem.PhyschemXtal": [[37, 3, 1, "", "allow_stream"], [37, 3, 1, "", "default_args"], [37, 3, 1, "", "fct_type"], [37, 2, 1, "", "mapSingleConfig"], [37, 3, 1, "", "precompute"], [37, 3, 1, "", "req_inputs"], [37, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_rdkit": [[38, 1, 1, "", "MorganFP"], [38, 1, 1, "", "MorganKernel"]], "benchml.plugins.plugin_rdkit.MorganFP": [[38, 3, 1, "", "allow_stream"], [38, 2, 1, "", "check_available"], [38, 3, 1, "", "default_args"], [38, 3, 1, "", "precompute"], [38, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_rdkit.MorganKernel": [[38, 3, 1, "", "req_inputs"], [38, 3, 1, "", "transforms"]], "benchml.plugins.plugin_soap": [[39, 1, 1, "", "SoapBase"], [39, 1, 1, "", "SoapGylmxx"], [39, 1, 1, "", "UniversalSoapBase"], [39, 1, 1, "", "UniversalSoapDscribe"], [39, 1, 1, "", "UniversalSoapGylmxx"]], "benchml.plugins.plugin_soap.SoapBase": [[39, 3, 1, "", "allow_params"], [39, 3, 1, "", "allow_stream"], [39, 2, 1, "", "check_available"], [39, 3, 1, "", "default_args"], [39, 2, 1, "", "evaluateSingle"], [39, 3, 1, "", "log"], [39, 2, 1, "", "mapMultiSoap"], [39, 3, 1, "", "precompute"], [39, 3, 1, "", "req_inputs"], [39, 3, 1, "", "stream_samples"]], "benchml.plugins.plugin_soap.SoapGylmxx": [[39, 2, 1, "", "evaluateSingle"]], "benchml.plugins.plugin_soap.UniversalSoapBase": [[39, 2, 1, "", "CalculatorClass"], [39, 3, 1, "", "allow_params"], [39, 2, 1, "", "check_available"], [39, 3, 1, "", "default_args"], [39, 2, 1, "", "evaluateSingle"], [39, 2, 1, "", "updateParams"]], "benchml.plugins.plugin_soap.UniversalSoapDscribe": [[39, 3, 1, "", "CalculatorClass"], [39, 2, 1, "", "check_available"], [39, 2, 1, "", "evaluateSingle"], [39, 2, 1, "", "updateParams"]], "benchml.plugins.plugin_soap.UniversalSoapGylmxx": [[39, 3, 1, "", "CalculatorClass"], [39, 2, 1, "", "check_available"], [39, 2, 1, "", "evaluateSingle"], [39, 2, 1, "", "updateParams"]], "benchml.plugins.plugin_torch": [[40, 1, 1, "", "TorchDevice"], [40, 1, 1, "", "TorchModuleTransform"], [40, 1, 1, "", "TorchTransformDescriptor"]], "benchml.plugins.plugin_torch.TorchDevice": [[40, 3, 1, "", "allow_stream"]], "benchml.plugins.plugin_torch.TorchModuleTransform": [[40, 2, 1, "", "check_available"], [40, 3, 1, "", "default_args"], [40, 2, 1, "", "freeze"], [40, 2, 1, "", "setDevice"]], "benchml.plugins.plugin_torch.TorchTransformDescriptor": [[40, 3, 1, "", "allow_stream"], [40, 3, 1, "", "default_args"], [40, 3, 1, "", "precompute"], [40, 3, 1, "", "req_args"], [40, 3, 1, "", "req_inputs"], [40, 3, 1, "", "stream_samples"]], "benchml.predictors": [[41, 1, 1, "", "AdaBoost"], [41, 1, 1, "", "ElasticNet"], [41, 1, 1, "", "ElasticNetClassifier"], [41, 1, 1, "", "GaussianProcess"], [41, 1, 1, "", "GaussianProcessRegressor"], [41, 1, 1, "", "GradientBoosting"], [41, 1, 1, "", "KNeighborsClassifier"], [41, 1, 1, "", "KNeighborsRegressor"], [41, 1, 1, "", "KernelMatern"], [41, 1, 1, "", "KernelRidge"], [41, 1, 1, "", "Lasso"], [41, 1, 1, "", "LinearRegression"], [41, 1, 1, "", "LogisticRegression"], [41, 1, 1, "", "OMPClassifier"], [41, 1, 1, "", "OrthogonalMatchingPursuit"], [41, 1, 1, "", "RandomForestClassifier"], [41, 1, 1, "", "RandomForestRegressor"], [41, 1, 1, "", "ResidualGaussianProcess"], [41, 1, 1, "", "Ridge"], [41, 1, 1, "", "RidgeClassifier"], [41, 1, 1, "", "SklearnTransform"], [41, 1, 1, "", "SupportVectorClassifier"], [41, 1, 1, "", "SupportVectorRegressor"], [42, 0, 0, "-", "gaussian_process"], [43, 0, 0, "-", "pred_sklearn"]], "benchml.predictors.ElasticNet": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.ElasticNetClassifier": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.GaussianProcess": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 2, 1, "", "predictError"], [41, 2, 1, "", "rankError"], [41, 3, 1, "", "req_args"], [41, 3, 1, "", "req_inputs"], [41, 2, 1, "", "zscoreError"]], "benchml.predictors.GaussianProcessRegressor": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.GradientBoosting": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.KernelMatern": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 2, 1, "", "evaluate"], [41, 3, 1, "", "precompute"], [41, 3, 1, "", "req_inputs"], [41, 3, 1, "", "stream_kernel"], [41, 3, 1, "", "stream_samples"]], "benchml.predictors.KernelRidge": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.LinearRegression": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.LogisticRegression": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.OMPClassifier": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.OrthogonalMatchingPursuit": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.RandomForestClassifier": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.RandomForestRegressor": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.ResidualGaussianProcess": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 2, 1, "", "fitResiduals"], [41, 3, 1, "", "req_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.Ridge": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.RidgeClassifier": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.SklearnTransform": [[41, 2, 1, "", "check_available"]], "benchml.predictors.SupportVectorClassifier": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.SupportVectorRegressor": [[41, 3, 1, "", "allow_params"], [41, 3, 1, "", "allow_stream"], [41, 3, 1, "", "default_args"], [41, 3, 1, "", "req_inputs"]], "benchml.predictors.gaussian_process": [[42, 1, 1, "", "GaussianProcess"], [42, 1, 1, "", "ResidualGaussianProcess"]], "benchml.predictors.gaussian_process.GaussianProcess": [[42, 3, 1, "", "allow_params"], [42, 3, 1, "", "allow_stream"], [42, 3, 1, "", "default_args"], [42, 2, 1, "", "predictError"], [42, 2, 1, "", "rankError"], [42, 3, 1, "", "req_args"], [42, 3, 1, "", "req_inputs"], [42, 2, 1, "", "zscoreError"]], "benchml.predictors.gaussian_process.ResidualGaussianProcess": [[42, 3, 1, "", "allow_params"], [42, 3, 1, "", "allow_stream"], [42, 3, 1, "", "default_args"], [42, 2, 1, "", "fitResiduals"], [42, 3, 1, "", "req_args"], [42, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn": [[43, 1, 1, "", "AdaBoost"], [43, 1, 1, "", "ElasticNet"], [43, 1, 1, "", "ElasticNetClassifier"], [43, 1, 1, "", "GaussianProcessRegressor"], [43, 1, 1, "", "GradientBoosting"], [43, 1, 1, "", "KNeighborsClassifier"], [43, 1, 1, "", "KNeighborsRegressor"], [43, 1, 1, "", "KernelMatern"], [43, 1, 1, "", "KernelRidge"], [43, 1, 1, "", "Lasso"], [43, 1, 1, "", "LinearRegression"], [43, 1, 1, "", "LogisticRegression"], [43, 1, 1, "", "OMPClassifier"], [43, 1, 1, "", "OrthogonalMatchingPursuit"], [43, 1, 1, "", "RandomForestClassifier"], [43, 1, 1, "", "RandomForestRegressor"], [43, 1, 1, "", "Ridge"], [43, 1, 1, "", "RidgeClassifier"], [43, 1, 1, "", "SklearnTransform"], [43, 1, 1, "", "SupportVectorClassifier"], [43, 1, 1, "", "SupportVectorRegressor"], [43, 4, 1, "", "check_sklearn_available"]], "benchml.predictors.pred_sklearn.ElasticNet": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.ElasticNetClassifier": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.GaussianProcessRegressor": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.GradientBoosting": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.KernelMatern": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 2, 1, "", "evaluate"], [43, 3, 1, "", "precompute"], [43, 3, 1, "", "req_inputs"], [43, 3, 1, "", "stream_kernel"], [43, 3, 1, "", "stream_samples"]], "benchml.predictors.pred_sklearn.KernelRidge": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.LinearRegression": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.LogisticRegression": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.OMPClassifier": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.OrthogonalMatchingPursuit": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.RandomForestClassifier": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.RandomForestRegressor": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.Ridge": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.RidgeClassifier": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.SklearnTransform": [[43, 2, 1, "", "check_available"]], "benchml.predictors.pred_sklearn.SupportVectorClassifier": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.predictors.pred_sklearn.SupportVectorRegressor": [[43, 3, 1, "", "allow_params"], [43, 3, 1, "", "allow_stream"], [43, 3, 1, "", "default_args"], [43, 3, 1, "", "req_inputs"]], "benchml.ptable": [[44, 1, 1, "", "AtomicElement"], [44, 1, 1, "", "PeriodicTable"]], "benchml.ptable.PeriodicTable": [[44, 2, 1, "", "addElement"], [44, 3, 1, "", "element_covrad"], [44, 3, 1, "", "element_elneg"], [44, 3, 1, "", "element_mass"], [44, 3, 1, "", "element_names"], [44, 3, 1, "", "element_valence"], [44, 2, 1, "", "getPropertyDict"], [44, 2, 1, "", "setup"]], "benchml.readwrite": [[45, 1, 1, "", "ExtendedTxt"], [45, 1, 1, "", "ExtendedXyz"], [45, 1, 1, "", "ExtendedXyzAtom"], [45, 4, 1, "", "configure"], [45, 4, 1, "", "disable_ase"], [45, 4, 1, "", "load"], [45, 4, 1, "", "patch_ase_config"], [45, 4, 1, "", "read"], [45, 4, 1, "", "read_ase"], [45, 4, 1, "", "read_extt"], [45, 4, 1, "", "read_extxyz_meta_only"], [45, 4, 1, "", "read_xyz"], [45, 4, 1, "", "save"], [45, 4, 1, "", "tokenize_extxyz_meta"], [45, 4, 1, "", "write"], [45, 4, 1, "", "write_extt"], [45, 4, 1, "", "write_xyz"]], "benchml.readwrite.ExtendedTxt": [[45, 2, 1, "", "clone"], [45, 2, 1, "", "load"], [45, 2, 1, "", "save"]], "benchml.readwrite.ExtendedXyz": [[45, 2, 1, "", "create"], [45, 2, 1, "", "create_atom"], [45, 2, 1, "", "getHeavy"], [45, 2, 1, "", "get_atomic_numbers"], [45, 2, 1, "", "get_cell"], [45, 2, 1, "", "get_chemical_symbols"], [45, 2, 1, "", "get_positions"], [45, 2, 1, "", "padToCutoff"], [45, 2, 1, "", "set_pbc"]], "benchml.splits": [[46, 4, 1, "", "Split"], [46, 1, 1, "", "SplitBase"], [46, 1, 1, "", "SplitChronological"], [46, 1, 1, "", "SplitExplicit"], [46, 1, 1, "", "SplitGrouped"], [46, 1, 1, "", "SplitJson"], [46, 1, 1, "", "SplitKfold"], [46, 1, 1, "", "SplitLOO"], [46, 1, 1, "", "SplitLambda"], [46, 1, 1, "", "SplitMC"], [46, 1, 1, "", "SplitSequentialMC"], [46, 4, 1, "", "synchronize"]], "benchml.splits.SplitBase": [[46, 2, 1, "", "isDone"], [46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitChronological": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitExplicit": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitGrouped": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitJson": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitKfold": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitLOO": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitLambda": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitMC": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.splits.SplitSequentialMC": [[46, 2, 1, "", "next"], [46, 3, 1, "", "tag"]], "benchml.test": [[47, 1, 1, "", "TestMock"], [47, 4, 1, "", "assert_array_equal"]], "benchml.test.TestMock": [[47, 3, 1, "", "data_dir"], [47, 2, 1, "", "getArgs"], [47, 3, 1, "", "model_regex"], [47, 3, 1, "", "path"], [47, 2, 1, "", "run"], [47, 3, 1, "", "seed"], [47, 3, 1, "", "tol"], [47, 2, 1, "", "validate"]], "benchml.transforms": [[48, 4, 1, "", "get_all"], [48, 4, 1, "", "get_bases_recursive"], [48, 4, 1, "", "list_all"], [48, 4, 1, "", "transform_info"]], "benchml.utils": [[49, 1, 1, "", "LineExpansion"], [49, 1, 1, "", "OneHot"], [49, 1, 1, "", "StagedTimer"], [49, 4, 1, "", "dataframe_to_extxyz"], [49, 4, 1, "", "get_smiles"], [49, 4, 1, "", "get_smiles_key"], [49, 4, 1, "", "git_hash"], [49, 4, 1, "", "smiles_to_extxyz"], [49, 4, 1, "", "smiles_to_pseudo_extxyz"]], "benchml.utils.LineExpansion": [[49, 2, 1, "", "expand"], [49, 2, 1, "", "setup"], [49, 2, 1, "", "wrap"]], "benchml.utils.OneHot": [[49, 2, 1, "", "dim"], [49, 2, 1, "", "map"]], "benchml.utils.StagedTimer": [[49, 2, 1, "", "report"], [49, 2, 1, "", "time"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "api": 0, "core": 0, "implement": 0, "new": 0, "transform": [0, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "class": 0, "input": [0, 14], "map": 0, "fit": 0, "attribut": 0, "how": 0, "add": 0, "plugin": [0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "benchml": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 76], "packag": [1, 8, 11, 15, 19, 30, 41, 47], "subpackag": 1, "submodul": [1, 8, 11, 15, 19, 30, 41], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "content": [1, 8, 11, 15, 19, 30, 41, 47, 51, 80], "accumul": 2, "analysi": 3, "basic": 4, "benchmark": 5, "conform": 6, "data": 7, "descriptor": [8, 9], "descr_bas": 9, "ensembl": 10, "filter": [11, 12], "random_matrix": 12, "hyper": 13, "kernel": [15, 16], "kern_bas": 16, "logger": 17, "matrix": 18, "model": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 76], "common": 20, "mod_bas": 21, "mod_bench": 22, "mod_bench_class": 23, "mod_bench_xt": 24, "mod_dscrib": 25, "mod_logd": 26, "mod_logd_ai": 27, "mod_xi": 28, "pipelin": [29, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "plugin_asap": 31, "plugin_check": 32, "plugin_cx": 33, "plugin_dscrib": 34, "plugin_gylmxx": 35, "plugin_nphil": 36, "plugin_physchem": 37, "plugin_rdkit": 38, "plugin_soap": 39, "plugin_torch": 40, "predictor": [41, 42, 43], "gaussian_process": 42, "pred_sklearn": 43, "ptabl": 44, "readwrit": 45, "split": 46, "test": 47, "util": 49, "develop": 50, "guid": [50, 80], "concept": 51, "indic": 51, "tabl": 51, "bmol_acsf": 52, "bmol_acsf_minimal_int_rr": 52, "graph": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79], "bmol_acsf_minimal_int_krr": 52, "bmol_acsf_minimal_ext_rr": 52, "bmol_acsf_minimal_ext_krr": 52, "bmol_acsf_smart_int_rr": 52, "bmol_acsf_smart_int_krr": 52, "bmol_acsf_smart_ext_rr": 52, "bmol_acsf_smart_ext_krr": 52, "bmol_acsf_longrange_int_rr": 52, "bmol_acsf_longrange_int_krr": 52, "bmol_acsf_longrange_ext_rr": 52, "bmol_acsf_longrange_ext_krr": 52, "bmol_cm": 53, "bmol_cm_sorted_l2_rr": 53, "bmol_cm_sorted_l2_krr": 53, "bmol_cm_eigenspectrum_rr": 53, "bmol_cm_eigenspectrum_krr": 53, "bmol_ecfp": 54, "bmol_ecfp4_krr": 54, "bmol_ecfp4_rr": 54, "bmol_ecfp6_krr": 54, "bmol_ecfp6_rr": 54, "bmol_ecfp_class": 55, "bmol_ecfp_svm_class": 55, "bmol_ecfp_lr_class": 55, "bmol_ecfp_rf_class": 55, "bmol_ecfp_mplr_class": 55, "bmol_gylm": 56, "bmol_gylm_minimal_int_krr": 56, "bmol_gylm_standard_int_krr": 56, "bmol_gylm_minimal_ext_krr": 56, "bmol_gylm_standard_ext_krr": 56, "bmol_gylm_minimal_int_rr": 56, "bmol_gylm_standard_int_rr": 56, "bmol_gylm_minimal_ext_rr": 56, "bmol_gylm_standard_ext_rr": 56, "bmol_gylm_match_class": 57, "bmol_gylm_match_class_norm": 57, "bmol_gylm_match_class_attr": 57, "bmol_mbtr": 58, "bmol_mbtr_int_rr": 58, "bmol_mbtr_int_krr": 58, "bmol_mbtr_ext_rr": 58, "bmol_mbtr_ext_krr": 58, "bmol_pdf": 59, "bmol_pdf_soap_standard_rr": 59, "bmol_pdf_gylm_standard_rr": 59, "bmol_pdf_soap_standard_krr": 59, "bmol_pdf_gylm_standard_krr": 59, "bmol_pdf_soap_minimal_rr": 59, "bmol_pdf_gylm_minimal_rr": 59, "bmol_pdf_soap_minimal_krr": 59, "bmol_pdf_gylm_minimal_krr": 59, "bmol_physchem": 60, "bmol_physchem_rfr": 60, "bmol_physchem_rfr_grid": 60, "bmol_physchem_basic_rfr": 60, "bmol_physchem_basic_rr": 60, "bmol_physchem_core_rfr": 60, "bmol_physchem_core_rr": 60, "bmol_physchem_logp_rfr": 60, "bmol_physchem_logp_rr": 60, "bmol_physchem_extended_rfr": 60, "bmol_physchem_extended_rr": 60, "bmol_physchem_class": 61, "bmol_physchem_basic_rf_class": 61, "bmol_physchem_core_rf_class": 61, "bmol_physchem_logp_rf_class": 61, "bmol_physchem_extended_rf_class": 61, "bmol_soap": 62, "bmol_soap_minimal_nocross_int_krr": 62, "bmol_soap_minimal_cross_int_krr": 62, "bmol_soap_smart_nocross_int_krr": 62, "bmol_soap_smart_cross_int_krr": 62, "bmol_soap_longrange_nocross_int_krr": 62, "bmol_soap_longrange_cross_int_krr": 62, "bmol_soap_minimal_nocross_ext_krr": 62, "bmol_soap_minimal_cross_ext_krr": 62, "bmol_soap_smart_nocross_ext_krr": 62, "bmol_soap_smart_cross_ext_krr": 62, "bmol_soap_longrange_nocross_ext_krr": 62, "bmol_soap_longrange_cross_ext_krr": 62, "bmol_soap_minimal_nocross_int_rr": 62, "bmol_soap_minimal_cross_int_rr": 62, "bmol_soap_smart_nocross_int_rr": 62, "bmol_soap_smart_cross_int_rr": 62, "bmol_soap_longrange_nocross_int_rr": 62, "bmol_soap_longrange_cross_int_rr": 62, "bmol_soap_minimal_nocross_ext_rr": 62, "bmol_soap_minimal_cross_ext_rr": 62, "bmol_soap_smart_nocross_ext_rr": 62, "bmol_soap_smart_cross_ext_rr": 62, "bmol_soap_longrange_nocross_ext_rr": 62, "bmol_soap_longrange_cross_ext_rr": 62, "bxtal_acsf": 63, "bxtal_acsf_minimal_int_rr": 63, "bxtal_acsf_minimal_int_krr": 63, "bxtal_acsf_minimal_ext_rr": 63, "bxtal_acsf_minimal_ext_krr": 63, "bxtal_acsf_smart_int_rr": 63, "bxtal_acsf_smart_int_krr": 63, "bxtal_acsf_smart_ext_rr": 63, "bxtal_acsf_smart_ext_krr": 63, "bxtal_acsf_longrange_int_rr": 63, "bxtal_acsf_longrange_int_krr": 63, "bxtal_acsf_longrange_ext_rr": 63, "bxtal_acsf_longrange_ext_krr": 63, "bxtal_esm": 64, "bxtal_esm_sorted_l2_rr": 64, "bxtal_esm_sorted_l2_krr": 64, "bxtal_esm_eigenspectrum_rr": 64, "bxtal_esm_eigenspectrum_krr": 64, "bxtal_gylm": 65, "bxtal_gylm_minimal_int_krr": 65, "bxtal_gylm_standard_int_krr": 65, "bxtal_gylm_minimal_ext_krr": 65, "bxtal_gylm_standard_ext_krr": 65, "bxtal_gylm_minimal_int_rr": 65, "bxtal_gylm_standard_int_rr": 65, "bxtal_gylm_minimal_ext_rr": 65, "bxtal_gylm_standard_ext_rr": 65, "bxtal_mbtr": 66, "bxtal_mbtr_int_rr": 66, "bxtal_mbtr_int_krr": 66, "bxtal_mbtr_ext_rr": 66, "bxtal_mbtr_ext_krr": 66, "bxtal_pdf": 67, "bxtal_pdf_soap_standard_rr": 67, "bxtal_pdf_gylm_standard_rr": 67, "bxtal_pdf_soap_standard_krr": 67, "bxtal_pdf_gylm_standard_krr": 67, "bxtal_pdf_soap_minimal_rr": 67, "bxtal_pdf_gylm_minimal_rr": 67, "bxtal_pdf_soap_minimal_krr": 67, "bxtal_pdf_gylm_minimal_krr": 67, "bxtal_physchem": 68, "bxtal_physchem_s05_rfr": 68, "bxtal_physchem_s05_rr": 68, "bxtal_physchem_s10_rfr": 68, "bxtal_physchem_s10_rr": 68, "bxtal_physchem_s20_rfr": 68, "bxtal_physchem_s20_rr": 68, "bxtal_soap": 69, "bxtal_soap_minimal_nocross_int_krr": 69, "bxtal_soap_minimal_cross_int_krr": 69, "bxtal_soap_smart_nocross_int_krr": 69, "bxtal_soap_smart_cross_int_krr": 69, "bxtal_soap_longrange_nocross_int_krr": 69, "bxtal_soap_longrange_cross_int_krr": 69, "bxtal_soap_minimal_nocross_ext_krr": 69, "bxtal_soap_minimal_cross_ext_krr": 69, "bxtal_soap_smart_nocross_ext_krr": 69, "bxtal_soap_smart_cross_ext_krr": 69, "bxtal_soap_longrange_nocross_ext_krr": 69, "bxtal_soap_longrange_cross_ext_krr": 69, "bxtal_soap_minimal_nocross_int_rr": 69, "bxtal_soap_minimal_cross_int_rr": 69, "bxtal_soap_smart_nocross_int_rr": 69, "bxtal_soap_smart_cross_int_rr": 69, "bxtal_soap_longrange_nocross_int_rr": 69, "bxtal_soap_longrange_cross_int_rr": 69, "bxtal_soap_minimal_nocross_ext_rr": 69, "bxtal_soap_minimal_cross_ext_rr": 69, "bxtal_soap_smart_nocross_ext_rr": 69, "bxtal_soap_smart_cross_ext_rr": 69, "bxtal_soap_longrange_nocross_ext_rr": 69, "bxtal_soap_longrange_cross_ext_rr": 69, "dscribe": 70, "cm_rr": 70, "acsf_rr": 70, "mbtr_rr": 70, "lmbtr_rr": 70, "sinematrix_rr": 70, "ecfp": 71, "morgan_krr": 71, "morgan_krr_ext": 71, "morgan_rr": 71, "morgan_gb": 71, "morgan_rfr": 71, "gylm": 72, "gylm_average_krr": 72, "gylm_average_krr_grid": 72, "gylm_smooth_match_krr": 72, "logd": 73, "logd_lr": 73, "logd_physchem_rfr": 73, "logd_delta_hybrid_topo_krr": 73, "logd_delta_hybrid_gylm_krr": 73, "logd_hybrid_topo_krr": 73, "logd_hybrid_topo_rgp": 73, "logd_hybrid_topo_gp": 73, "logd_hybrid_gylm_krr": 73, "logd_delta_gylm_krr": 73, "logd_delta_topo_krr": 73, "logd_ai": 74, "logd_ai_hybrid_topo_cxlogp_gp": 74, "logd_ai_hybrid_topo_rdlogp_gp": 74, "logd_extens": 75, "logd_gylm_minimal_rr": 75, "logd_gylm_hybrid_rr": 75, "logd_gylm_extended_rr": 75, "collect": 76, "soap": 77, "soap_krr_00": 77, "soap_krr_01": 77, "soap_krr_02": 77, "soap_krr_03": 77, "soap_krr_04": 77, "soap_krr_05": 77, "xy_classifi": 78, "xy_rf_class": 78, "xy_regressor": 79, "xy_rfr": 79, "user": 80}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Python API": [[0, "module-benchml"]], "Core": [[0, "core"]], "Implementing a new transform class": [[0, "implementing-a-new-transform-class"]], "Input transforms": [[0, "input-transforms"]], "Map transforms": [[0, "map-transforms"]], "Fit transforms": [[0, "fit-transforms"]], "Transform class attributes": [[0, "transform-class-attributes"]], "How to add a plugin": [[0, "how-to-add-a-plugin"]], "benchml package": [[1, "benchml-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [8, "submodules"], [11, "submodules"], [15, "submodules"], [19, "submodules"], [30, "submodules"], [41, "submodules"]], "Module contents": [[1, "module-benchml"], [8, "module-benchml.descriptors"], [11, "module-benchml.filters"], [15, "module-benchml.kernels"], [19, "module-benchml.models"], [30, "module-benchml.plugins"], [41, "module-benchml.predictors"], [47, "module-benchml.test"]], "benchml.accumulator module": [[2, "module-benchml.accumulator"]], "benchml.analysis module": [[3, "module-benchml.analysis"]], "benchml.basic module": [[4, "module-benchml.basic"]], "benchml.benchmark module": [[5, "module-benchml.benchmark"]], "benchml.conformal module": [[6, "module-benchml.conformal"]], "benchml.data module": [[7, "module-benchml.data"]], "benchml.descriptors package": [[8, "benchml-descriptors-package"]], "benchml.descriptors.descr_basic module": [[9, "module-benchml.descriptors.descr_basic"]], "benchml.ensemble module": [[10, "module-benchml.ensemble"]], "benchml.filters package": [[11, "benchml-filters-package"]], "benchml.filters.random_matrix module": [[12, "module-benchml.filters.random_matrix"]], "benchml.hyper module": [[13, "module-benchml.hyper"]], "benchml.inputs module": [[14, "module-benchml.inputs"]], "benchml.kernels package": [[15, "benchml-kernels-package"]], "benchml.kernels.kern_basic module": [[16, "module-benchml.kernels.kern_basic"]], "benchml.logger module": [[17, "module-benchml.logger"]], "benchml.matrix module": [[18, "module-benchml.matrix"]], "benchml.models package": [[19, "benchml-models-package"]], "benchml.models.common module": [[20, "module-benchml.models.common"]], "benchml.models.mod_basic module": [[21, "module-benchml.models.mod_basic"]], "benchml.models.mod_bench module": [[22, "module-benchml.models.mod_bench"]], "benchml.models.mod_bench_class module": [[23, "module-benchml.models.mod_bench_class"]], "benchml.models.mod_bench_xtal module": [[24, "module-benchml.models.mod_bench_xtal"]], "benchml.models.mod_dscribe module": [[25, "module-benchml.models.mod_dscribe"]], "benchml.models.mod_logd module": [[26, "module-benchml.models.mod_logd"]], "benchml.models.mod_logd_ai module": [[27, "module-benchml.models.mod_logd_ai"]], "benchml.models.mod_xy module": [[28, "module-benchml.models.mod_xy"]], "benchml.pipeline module": [[29, "module-benchml.pipeline"]], "benchml.plugins package": [[30, "benchml-plugins-package"]], "benchml.plugins.plugin_asap module": [[31, "module-benchml.plugins.plugin_asap"]], "benchml.plugins.plugin_check module": [[32, "module-benchml.plugins.plugin_check"]], "benchml.plugins.plugin_cx module": [[33, "module-benchml.plugins.plugin_cx"]], "benchml.plugins.plugin_dscribe module": [[34, "module-benchml.plugins.plugin_dscribe"]], "benchml.plugins.plugin_gylmxx module": [[35, "module-benchml.plugins.plugin_gylmxx"]], "benchml.plugins.plugin_nphil module": [[36, "module-benchml.plugins.plugin_nphil"]], "benchml.plugins.plugin_physchem module": [[37, "module-benchml.plugins.plugin_physchem"]], "benchml.plugins.plugin_rdkit module": [[38, "module-benchml.plugins.plugin_rdkit"]], "benchml.plugins.plugin_soap module": [[39, "module-benchml.plugins.plugin_soap"]], "benchml.plugins.plugin_torch module": [[40, "module-benchml.plugins.plugin_torch"]], "benchml.predictors package": [[41, "benchml-predictors-package"]], "benchml.predictors.gaussian_process module": [[42, "module-benchml.predictors.gaussian_process"]], "benchml.predictors.pred_sklearn module": [[43, "module-benchml.predictors.pred_sklearn"]], "benchml.ptable module": [[44, "module-benchml.ptable"]], "benchml.readwrite module": [[45, "module-benchml.readwrite"]], "benchml.splits module": [[46, "module-benchml.splits"]], "benchml.test package": [[47, "benchml-test-package"]], "benchml.transforms module": [[48, "module-benchml.transforms"]], "benchml.utils module": [[49, "module-benchml.utils"]], "Development guide": [[50, "development-guide"]], "BenchML": [[51, "benchml"]], "Contents:": [[51, null], [80, null]], "Pipelining concept": [[51, "pipelining-concept"]], "Indices and tables": [[51, "indices-and-tables"]], "bmol_acsf": [[52, "bmol-acsf"]], "bmol_acsf_minimal_int_rr": [[52, "bmol-acsf-minimal-int-rr"]], "Pipeline Graph": [[52, "pipeline-graph"], [52, "id1"], [52, "id3"], [52, "id5"], [52, "id7"], [52, "id9"], [52, "id11"], [52, "id13"], [52, "id15"], [52, "id17"], [52, "id19"], [52, "id21"], [53, "pipeline-graph"], [53, "id1"], [53, "id3"], [53, "id5"], [54, "pipeline-graph"], [54, "id1"], [54, "id3"], [54, "id5"], [55, "pipeline-graph"], [55, "id1"], [55, "id3"], [55, "id5"], [56, "pipeline-graph"], [56, "id1"], [56, "id3"], [56, "id5"], [56, "id7"], [56, "id9"], [56, "id11"], [56, "id13"], [57, "pipeline-graph"], [57, "id2"], [57, "id4"], [58, "pipeline-graph"], [58, "id1"], [58, "id3"], [58, "id5"], [59, "pipeline-graph"], [59, "id1"], [59, "id3"], [59, "id5"], [59, "id7"], [59, "id9"], [59, "id11"], [59, "id13"], [60, "pipeline-graph"], [60, "id1"], [60, "id3"], [60, "id5"], [60, "id7"], [60, "id9"], [60, "id11"], [60, "id13"], [60, "id15"], [60, "id17"], [61, "pipeline-graph"], [61, "id1"], [61, "id3"], [61, "id5"], [62, "pipeline-graph"], [62, "id1"], [62, "id3"], [62, "id5"], [62, "id7"], [62, "id9"], [62, "id11"], [62, "id13"], [62, "id15"], [62, "id17"], [62, "id19"], [62, "id21"], [62, "id23"], [62, "id25"], [62, "id27"], [62, "id29"], [62, "id31"], [62, "id33"], [62, "id35"], [62, "id37"], [62, "id39"], [62, "id41"], [62, "id43"], [62, "id45"], [63, "pipeline-graph"], [63, "id1"], [63, "id3"], [63, "id5"], [63, "id7"], [63, "id9"], [63, "id11"], [63, "id13"], [63, "id15"], [63, "id17"], [63, "id19"], [63, "id21"], [64, "pipeline-graph"], [64, "id1"], [64, "id3"], [64, "id5"], [65, "pipeline-graph"], [65, "id1"], [65, "id3"], [65, "id5"], [65, "id7"], [65, "id9"], [65, "id11"], [65, "id13"], [66, "pipeline-graph"], [66, "id1"], [66, "id3"], [66, "id5"], [67, "pipeline-graph"], [67, "id1"], [67, "id3"], [67, "id5"], [67, "id7"], [67, "id9"], [67, "id11"], [67, "id13"], [68, "pipeline-graph"], [68, "id1"], [68, "id3"], [68, "id5"], [68, "id7"], [68, "id9"], [69, "pipeline-graph"], [69, "id1"], [69, "id3"], [69, "id5"], [69, "id7"], [69, "id9"], [69, "id11"], [69, "id13"], [69, "id15"], [69, "id17"], [69, "id19"], [69, "id21"], [69, "id23"], [69, "id25"], [69, "id27"], [69, "id29"], [69, "id31"], [69, "id33"], [69, "id35"], [69, "id37"], [69, "id39"], [69, "id41"], [69, "id43"], [69, "id45"], [70, "pipeline-graph"], [70, "id1"], [70, "id3"], [70, "id5"], [70, "id7"], [71, "pipeline-graph"], [71, "id1"], [71, "id3"], [71, "id5"], [71, "id7"], [72, "pipeline-graph"], [72, "id1"], [72, "id3"], [73, "pipeline-graph"], [73, "id1"], [73, "id3"], [73, "id5"], [73, "id7"], [73, "id9"], [73, "id11"], [73, "id13"], [73, "id15"], [73, "id17"], [74, "pipeline-graph"], [74, "id1"], [75, "pipeline-graph"], [75, "id1"], [75, "id3"], [77, "pipeline-graph"], [77, "id1"], [77, "id3"], [77, "id5"], [77, "id7"], [77, "id9"], [78, "pipeline-graph"], [79, "pipeline-graph"]], "Transforms": [[52, "transforms"], [52, "id2"], [52, "id4"], [52, "id6"], [52, "id8"], [52, "id10"], [52, "id12"], [52, "id14"], [52, "id16"], [52, "id18"], [52, "id20"], [52, "id22"], [53, "transforms"], [53, "id2"], [53, "id4"], [53, "id6"], [54, "transforms"], [54, "id2"], [54, "id4"], [54, "id6"], [55, "transforms"], [55, "id2"], [55, "id4"], [55, "id6"], [56, "transforms"], [56, "id2"], [56, "id4"], [56, "id6"], [56, "id8"], [56, "id10"], [56, "id12"], [56, "id14"], [57, "transforms"], [57, "id3"], [57, "id5"], [58, "transforms"], [58, "id2"], [58, "id4"], [58, "id6"], [59, "transforms"], [59, "id2"], [59, "id4"], [59, "id6"], [59, "id8"], [59, "id10"], [59, "id12"], [59, "id14"], [60, "transforms"], [60, "id2"], [60, "id4"], [60, "id6"], [60, "id8"], [60, "id10"], [60, "id12"], [60, "id14"], [60, "id16"], [60, "id18"], [61, "transforms"], [61, "id2"], [61, "id4"], [61, "id6"], [62, "transforms"], [62, "id2"], [62, "id4"], [62, "id6"], [62, "id8"], [62, "id10"], [62, "id12"], [62, "id14"], [62, "id16"], [62, "id18"], [62, "id20"], [62, "id22"], [62, "id24"], [62, "id26"], [62, "id28"], [62, "id30"], [62, "id32"], [62, "id34"], [62, "id36"], [62, "id38"], [62, "id40"], [62, "id42"], [62, "id44"], [62, "id46"], [63, "transforms"], [63, "id2"], [63, "id4"], [63, "id6"], [63, "id8"], [63, "id10"], [63, "id12"], [63, "id14"], [63, "id16"], [63, "id18"], [63, "id20"], [63, "id22"], [64, "transforms"], [64, "id2"], [64, "id4"], [64, "id6"], [65, "transforms"], [65, "id2"], [65, "id4"], [65, "id6"], [65, "id8"], [65, "id10"], [65, "id12"], [65, "id14"], [66, "transforms"], [66, "id2"], [66, "id4"], [66, "id6"], [67, "transforms"], [67, "id2"], [67, "id4"], [67, "id6"], [67, "id8"], [67, "id10"], [67, "id12"], [67, "id14"], [68, "transforms"], [68, "id2"], [68, "id4"], [68, "id6"], [68, "id8"], [68, "id10"], [69, "transforms"], [69, "id2"], [69, "id4"], [69, "id6"], [69, "id8"], [69, "id10"], [69, "id12"], [69, "id14"], [69, "id16"], [69, "id18"], [69, "id20"], [69, "id22"], [69, "id24"], [69, "id26"], [69, "id28"], [69, "id30"], [69, "id32"], [69, "id34"], [69, "id36"], [69, "id38"], [69, "id40"], [69, "id42"], [69, "id44"], [69, "id46"], [70, "transforms"], [70, "id2"], [70, "id4"], [70, "id6"], [70, "id8"], [71, "transforms"], [71, "id2"], [71, "id4"], [71, "id6"], [71, "id8"], [72, "transforms"], [72, "id2"], [72, "id4"], [73, "transforms"], [73, "id2"], [73, "id4"], [73, "id6"], [73, "id8"], [73, "id10"], [73, "id12"], [73, "id14"], [73, "id16"], [73, "id18"], [74, "transforms"], [74, "id2"], [75, "transforms"], [75, "id2"], [75, "id4"], [77, "transforms"], [77, "id2"], [77, "id4"], [77, "id6"], [77, "id8"], [77, "id10"], [78, "transforms"], [79, "transforms"]], "bmol_acsf_minimal_int_krr": [[52, "bmol-acsf-minimal-int-krr"]], "bmol_acsf_minimal_ext_rr": [[52, "bmol-acsf-minimal-ext-rr"]], "bmol_acsf_minimal_ext_krr": [[52, "bmol-acsf-minimal-ext-krr"]], "bmol_acsf_smart_int_rr": [[52, "bmol-acsf-smart-int-rr"]], "bmol_acsf_smart_int_krr": [[52, "bmol-acsf-smart-int-krr"]], "bmol_acsf_smart_ext_rr": [[52, "bmol-acsf-smart-ext-rr"]], "bmol_acsf_smart_ext_krr": [[52, "bmol-acsf-smart-ext-krr"]], "bmol_acsf_longrange_int_rr": [[52, "bmol-acsf-longrange-int-rr"]], "bmol_acsf_longrange_int_krr": [[52, "bmol-acsf-longrange-int-krr"]], "bmol_acsf_longrange_ext_rr": [[52, "bmol-acsf-longrange-ext-rr"]], "bmol_acsf_longrange_ext_krr": [[52, "bmol-acsf-longrange-ext-krr"]], "bmol_cm": [[53, "bmol-cm"]], "bmol_cm_sorted_l2_rr": [[53, "bmol-cm-sorted-l2-rr"]], "bmol_cm_sorted_l2_krr": [[53, "bmol-cm-sorted-l2-krr"]], "bmol_cm_eigenspectrum_rr": [[53, "bmol-cm-eigenspectrum-rr"]], "bmol_cm_eigenspectrum_krr": [[53, "bmol-cm-eigenspectrum-krr"]], "bmol_ecfp": [[54, "bmol-ecfp"]], "bmol_ecfp4_krr": [[54, "bmol-ecfp4-krr"]], "bmol_ecfp4_rr": [[54, "bmol-ecfp4-rr"]], "bmol_ecfp6_krr": [[54, "bmol-ecfp6-krr"]], "bmol_ecfp6_rr": [[54, "bmol-ecfp6-rr"]], "bmol_ecfp_class": [[55, "bmol-ecfp-class"]], "bmol_ecfp_svm_class": [[55, "bmol-ecfp-svm-class"]], "bmol_ecfp_lr_class": [[55, "bmol-ecfp-lr-class"]], "bmol_ecfp_rf_class": [[55, "bmol-ecfp-rf-class"]], "bmol_ecfp_mplr_class": [[55, "bmol-ecfp-mplr-class"]], "bmol_gylm": [[56, "bmol-gylm"]], "bmol_gylm_minimal_int_krr": [[56, "bmol-gylm-minimal-int-krr"]], "bmol_gylm_standard_int_krr": [[56, "bmol-gylm-standard-int-krr"]], "bmol_gylm_minimal_ext_krr": [[56, "bmol-gylm-minimal-ext-krr"]], "bmol_gylm_standard_ext_krr": [[56, "bmol-gylm-standard-ext-krr"]], "bmol_gylm_minimal_int_rr": [[56, "bmol-gylm-minimal-int-rr"]], "bmol_gylm_standard_int_rr": [[56, "bmol-gylm-standard-int-rr"]], "bmol_gylm_minimal_ext_rr": [[56, "bmol-gylm-minimal-ext-rr"]], "bmol_gylm_standard_ext_rr": [[56, "bmol-gylm-standard-ext-rr"]], "bmol_gylm_match_class": [[57, "bmol-gylm-match-class"], [57, "id1"]], "bmol_gylm_match_class_norm": [[57, "bmol-gylm-match-class-norm"]], "bmol_gylm_match_class_attr": [[57, "bmol-gylm-match-class-attr"]], "bmol_mbtr": [[58, "bmol-mbtr"]], "bmol_mbtr_int_rr": [[58, "bmol-mbtr-int-rr"]], "bmol_mbtr_int_krr": [[58, "bmol-mbtr-int-krr"]], "bmol_mbtr_ext_rr": [[58, "bmol-mbtr-ext-rr"]], "bmol_mbtr_ext_krr": [[58, "bmol-mbtr-ext-krr"]], "bmol_pdf": [[59, "bmol-pdf"]], "bmol_pdf_soap_standard_rr": [[59, "bmol-pdf-soap-standard-rr"]], "bmol_pdf_gylm_standard_rr": [[59, "bmol-pdf-gylm-standard-rr"]], "bmol_pdf_soap_standard_krr": [[59, "bmol-pdf-soap-standard-krr"]], "bmol_pdf_gylm_standard_krr": [[59, "bmol-pdf-gylm-standard-krr"]], "bmol_pdf_soap_minimal_rr": [[59, "bmol-pdf-soap-minimal-rr"]], "bmol_pdf_gylm_minimal_rr": [[59, "bmol-pdf-gylm-minimal-rr"]], "bmol_pdf_soap_minimal_krr": [[59, "bmol-pdf-soap-minimal-krr"]], "bmol_pdf_gylm_minimal_krr": [[59, "bmol-pdf-gylm-minimal-krr"]], "bmol_physchem": [[60, "bmol-physchem"]], "bmol_physchem_rfr": [[60, "bmol-physchem-rfr"]], "bmol_physchem_rfr_grid": [[60, "bmol-physchem-rfr-grid"]], "bmol_physchem_basic_rfr": [[60, "bmol-physchem-basic-rfr"]], "bmol_physchem_basic_rr": [[60, "bmol-physchem-basic-rr"]], "bmol_physchem_core_rfr": [[60, "bmol-physchem-core-rfr"]], "bmol_physchem_core_rr": [[60, "bmol-physchem-core-rr"]], "bmol_physchem_logp_rfr": [[60, "bmol-physchem-logp-rfr"]], "bmol_physchem_logp_rr": [[60, "bmol-physchem-logp-rr"]], "bmol_physchem_extended_rfr": [[60, "bmol-physchem-extended-rfr"]], "bmol_physchem_extended_rr": [[60, "bmol-physchem-extended-rr"]], "bmol_physchem_class": [[61, "bmol-physchem-class"]], "bmol_physchem_basic_rf_class": [[61, "bmol-physchem-basic-rf-class"]], "bmol_physchem_core_rf_class": [[61, "bmol-physchem-core-rf-class"]], "bmol_physchem_logp_rf_class": [[61, "bmol-physchem-logp-rf-class"]], "bmol_physchem_extended_rf_class": [[61, "bmol-physchem-extended-rf-class"]], "bmol_soap": [[62, "bmol-soap"]], "bmol_soap_minimal_nocross_int_krr": [[62, "bmol-soap-minimal-nocross-int-krr"]], "bmol_soap_minimal_cross_int_krr": [[62, "bmol-soap-minimal-cross-int-krr"]], "bmol_soap_smart_nocross_int_krr": [[62, "bmol-soap-smart-nocross-int-krr"]], "bmol_soap_smart_cross_int_krr": [[62, "bmol-soap-smart-cross-int-krr"]], "bmol_soap_longrange_nocross_int_krr": [[62, "bmol-soap-longrange-nocross-int-krr"]], "bmol_soap_longrange_cross_int_krr": [[62, "bmol-soap-longrange-cross-int-krr"]], "bmol_soap_minimal_nocross_ext_krr": [[62, "bmol-soap-minimal-nocross-ext-krr"]], "bmol_soap_minimal_cross_ext_krr": [[62, "bmol-soap-minimal-cross-ext-krr"]], "bmol_soap_smart_nocross_ext_krr": [[62, "bmol-soap-smart-nocross-ext-krr"]], "bmol_soap_smart_cross_ext_krr": [[62, "bmol-soap-smart-cross-ext-krr"]], "bmol_soap_longrange_nocross_ext_krr": [[62, "bmol-soap-longrange-nocross-ext-krr"]], "bmol_soap_longrange_cross_ext_krr": [[62, "bmol-soap-longrange-cross-ext-krr"]], "bmol_soap_minimal_nocross_int_rr": [[62, "bmol-soap-minimal-nocross-int-rr"]], "bmol_soap_minimal_cross_int_rr": [[62, "bmol-soap-minimal-cross-int-rr"]], "bmol_soap_smart_nocross_int_rr": [[62, "bmol-soap-smart-nocross-int-rr"]], "bmol_soap_smart_cross_int_rr": [[62, "bmol-soap-smart-cross-int-rr"]], "bmol_soap_longrange_nocross_int_rr": [[62, "bmol-soap-longrange-nocross-int-rr"]], "bmol_soap_longrange_cross_int_rr": [[62, "bmol-soap-longrange-cross-int-rr"]], "bmol_soap_minimal_nocross_ext_rr": [[62, "bmol-soap-minimal-nocross-ext-rr"]], "bmol_soap_minimal_cross_ext_rr": [[62, "bmol-soap-minimal-cross-ext-rr"]], "bmol_soap_smart_nocross_ext_rr": [[62, "bmol-soap-smart-nocross-ext-rr"]], "bmol_soap_smart_cross_ext_rr": [[62, "bmol-soap-smart-cross-ext-rr"]], "bmol_soap_longrange_nocross_ext_rr": [[62, "bmol-soap-longrange-nocross-ext-rr"]], "bmol_soap_longrange_cross_ext_rr": [[62, "bmol-soap-longrange-cross-ext-rr"]], "bxtal_acsf": [[63, "bxtal-acsf"]], "bxtal_acsf_minimal_int_rr": [[63, "bxtal-acsf-minimal-int-rr"]], "bxtal_acsf_minimal_int_krr": [[63, "bxtal-acsf-minimal-int-krr"]], "bxtal_acsf_minimal_ext_rr": [[63, "bxtal-acsf-minimal-ext-rr"]], "bxtal_acsf_minimal_ext_krr": [[63, "bxtal-acsf-minimal-ext-krr"]], "bxtal_acsf_smart_int_rr": [[63, "bxtal-acsf-smart-int-rr"]], "bxtal_acsf_smart_int_krr": [[63, "bxtal-acsf-smart-int-krr"]], "bxtal_acsf_smart_ext_rr": [[63, "bxtal-acsf-smart-ext-rr"]], "bxtal_acsf_smart_ext_krr": [[63, "bxtal-acsf-smart-ext-krr"]], "bxtal_acsf_longrange_int_rr": [[63, "bxtal-acsf-longrange-int-rr"]], "bxtal_acsf_longrange_int_krr": [[63, "bxtal-acsf-longrange-int-krr"]], "bxtal_acsf_longrange_ext_rr": [[63, "bxtal-acsf-longrange-ext-rr"]], "bxtal_acsf_longrange_ext_krr": [[63, "bxtal-acsf-longrange-ext-krr"]], "bxtal_esm": [[64, "bxtal-esm"]], "bxtal_esm_sorted_l2_rr": [[64, "bxtal-esm-sorted-l2-rr"]], "bxtal_esm_sorted_l2_krr": [[64, "bxtal-esm-sorted-l2-krr"]], "bxtal_esm_eigenspectrum_rr": [[64, "bxtal-esm-eigenspectrum-rr"]], "bxtal_esm_eigenspectrum_krr": [[64, "bxtal-esm-eigenspectrum-krr"]], "bxtal_gylm": [[65, "bxtal-gylm"]], "bxtal_gylm_minimal_int_krr": [[65, "bxtal-gylm-minimal-int-krr"]], "bxtal_gylm_standard_int_krr": [[65, "bxtal-gylm-standard-int-krr"]], "bxtal_gylm_minimal_ext_krr": [[65, "bxtal-gylm-minimal-ext-krr"]], "bxtal_gylm_standard_ext_krr": [[65, "bxtal-gylm-standard-ext-krr"]], "bxtal_gylm_minimal_int_rr": [[65, "bxtal-gylm-minimal-int-rr"]], "bxtal_gylm_standard_int_rr": [[65, "bxtal-gylm-standard-int-rr"]], "bxtal_gylm_minimal_ext_rr": [[65, "bxtal-gylm-minimal-ext-rr"]], "bxtal_gylm_standard_ext_rr": [[65, "bxtal-gylm-standard-ext-rr"]], "bxtal_mbtr": [[66, "bxtal-mbtr"]], "bxtal_mbtr_int_rr": [[66, "bxtal-mbtr-int-rr"]], "bxtal_mbtr_int_krr": [[66, "bxtal-mbtr-int-krr"]], "bxtal_mbtr_ext_rr": [[66, "bxtal-mbtr-ext-rr"]], "bxtal_mbtr_ext_krr": [[66, "bxtal-mbtr-ext-krr"]], "bxtal_pdf": [[67, "bxtal-pdf"]], "bxtal_pdf_soap_standard_rr": [[67, "bxtal-pdf-soap-standard-rr"]], "bxtal_pdf_gylm_standard_rr": [[67, "bxtal-pdf-gylm-standard-rr"]], "bxtal_pdf_soap_standard_krr": [[67, "bxtal-pdf-soap-standard-krr"]], "bxtal_pdf_gylm_standard_krr": [[67, "bxtal-pdf-gylm-standard-krr"]], "bxtal_pdf_soap_minimal_rr": [[67, "bxtal-pdf-soap-minimal-rr"]], "bxtal_pdf_gylm_minimal_rr": [[67, "bxtal-pdf-gylm-minimal-rr"]], "bxtal_pdf_soap_minimal_krr": [[67, "bxtal-pdf-soap-minimal-krr"]], "bxtal_pdf_gylm_minimal_krr": [[67, "bxtal-pdf-gylm-minimal-krr"]], "bxtal_physchem": [[68, "bxtal-physchem"]], "bxtal_physchem_s05_rfr": [[68, "bxtal-physchem-s05-rfr"]], "bxtal_physchem_s05_rr": [[68, "bxtal-physchem-s05-rr"]], "bxtal_physchem_s10_rfr": [[68, "bxtal-physchem-s10-rfr"]], "bxtal_physchem_s10_rr": [[68, "bxtal-physchem-s10-rr"]], "bxtal_physchem_s20_rfr": [[68, "bxtal-physchem-s20-rfr"]], "bxtal_physchem_s20_rr": [[68, "bxtal-physchem-s20-rr"]], "bxtal_soap": [[69, "bxtal-soap"]], "bxtal_soap_minimal_nocross_int_krr": [[69, "bxtal-soap-minimal-nocross-int-krr"]], "bxtal_soap_minimal_cross_int_krr": [[69, "bxtal-soap-minimal-cross-int-krr"]], "bxtal_soap_smart_nocross_int_krr": [[69, "bxtal-soap-smart-nocross-int-krr"]], "bxtal_soap_smart_cross_int_krr": [[69, "bxtal-soap-smart-cross-int-krr"]], "bxtal_soap_longrange_nocross_int_krr": [[69, "bxtal-soap-longrange-nocross-int-krr"]], "bxtal_soap_longrange_cross_int_krr": [[69, "bxtal-soap-longrange-cross-int-krr"]], "bxtal_soap_minimal_nocross_ext_krr": [[69, "bxtal-soap-minimal-nocross-ext-krr"]], "bxtal_soap_minimal_cross_ext_krr": [[69, "bxtal-soap-minimal-cross-ext-krr"]], "bxtal_soap_smart_nocross_ext_krr": [[69, "bxtal-soap-smart-nocross-ext-krr"]], "bxtal_soap_smart_cross_ext_krr": [[69, "bxtal-soap-smart-cross-ext-krr"]], "bxtal_soap_longrange_nocross_ext_krr": [[69, "bxtal-soap-longrange-nocross-ext-krr"]], "bxtal_soap_longrange_cross_ext_krr": [[69, "bxtal-soap-longrange-cross-ext-krr"]], "bxtal_soap_minimal_nocross_int_rr": [[69, "bxtal-soap-minimal-nocross-int-rr"]], "bxtal_soap_minimal_cross_int_rr": [[69, "bxtal-soap-minimal-cross-int-rr"]], "bxtal_soap_smart_nocross_int_rr": [[69, "bxtal-soap-smart-nocross-int-rr"]], "bxtal_soap_smart_cross_int_rr": [[69, "bxtal-soap-smart-cross-int-rr"]], "bxtal_soap_longrange_nocross_int_rr": [[69, "bxtal-soap-longrange-nocross-int-rr"]], "bxtal_soap_longrange_cross_int_rr": [[69, "bxtal-soap-longrange-cross-int-rr"]], "bxtal_soap_minimal_nocross_ext_rr": [[69, "bxtal-soap-minimal-nocross-ext-rr"]], "bxtal_soap_minimal_cross_ext_rr": [[69, "bxtal-soap-minimal-cross-ext-rr"]], "bxtal_soap_smart_nocross_ext_rr": [[69, "bxtal-soap-smart-nocross-ext-rr"]], "bxtal_soap_smart_cross_ext_rr": [[69, "bxtal-soap-smart-cross-ext-rr"]], "bxtal_soap_longrange_nocross_ext_rr": [[69, "bxtal-soap-longrange-nocross-ext-rr"]], "bxtal_soap_longrange_cross_ext_rr": [[69, "bxtal-soap-longrange-cross-ext-rr"]], "dscribe": [[70, "dscribe"]], "cm_rr": [[70, "cm-rr"]], "acsf_rr": [[70, "acsf-rr"]], "mbtr_rr": [[70, "mbtr-rr"]], "lmbtr_rr": [[70, "lmbtr-rr"]], "sinematrix_rr": [[70, "sinematrix-rr"]], "ecfp": [[71, "ecfp"]], "morgan_krr": [[71, "morgan-krr"]], "morgan_krr_ext": [[71, "morgan-krr-ext"]], "morgan_rr": [[71, "morgan-rr"]], "morgan_gb": [[71, "morgan-gb"]], "morgan_rfr": [[71, "morgan-rfr"]], "gylm": [[72, "gylm"]], "gylm_average_krr": [[72, "gylm-average-krr"]], "gylm_average_krr_grid": [[72, "gylm-average-krr-grid"]], "gylm_smooth_match_krr": [[72, "gylm-smooth-match-krr"]], "logd": [[73, "logd"]], "logd_lr": [[73, "logd-lr"]], "logd_physchem_rfr": [[73, "logd-physchem-rfr"]], "logd_delta_hybrid_topo_krr": [[73, "logd-delta-hybrid-topo-krr"]], "logd_delta_hybrid_gylm_krr": [[73, "logd-delta-hybrid-gylm-krr"]], "logd_hybrid_topo_krr": [[73, "logd-hybrid-topo-krr"]], "logd_hybrid_topo_rgp": [[73, "logd-hybrid-topo-rgp"]], "logd_hybrid_topo_gp": [[73, "logd-hybrid-topo-gp"]], "logd_hybrid_gylm_krr": [[73, "logd-hybrid-gylm-krr"]], "logd_delta_gylm_krr": [[73, "logd-delta-gylm-krr"]], "logd_delta_topo_krr": [[73, "logd-delta-topo-krr"]], "logd_ai": [[74, "logd-ai"]], "logd_ai_hybrid_topo_cxlogp_gp": [[74, "logd-ai-hybrid-topo-cxlogp-gp"]], "logd_ai_hybrid_topo_rdlogp_gp": [[74, "logd-ai-hybrid-topo-rdlogp-gp"]], "logd_extensive": [[75, "logd-extensive"]], "logd_gylm_minimal_rr": [[75, "logd-gylm-minimal-rr"]], "logd_gylm_hybrid_rr": [[75, "logd-gylm-hybrid-rr"]], "logd_gylm_extended_rr": [[75, "logd-gylm-extended-rr"]], "Models": [[76, "models"]], "Collections of BenchML models:": [[76, null]], "soap": [[77, "soap"]], "soap_krr_00": [[77, "soap-krr-00"]], "soap_krr_01": [[77, "soap-krr-01"]], "soap_krr_02": [[77, "soap-krr-02"]], "soap_krr_03": [[77, "soap-krr-03"]], "soap_krr_04": [[77, "soap-krr-04"]], "soap_krr_05": [[77, "soap-krr-05"]], "xy_classifiers": [[78, "xy-classifiers"]], "xy_rf_class": [[78, "xy-rf-class"]], "xy_regressors": [[79, "xy-regressors"]], "xy_rfr": [[79, "xy-rfr"]], "User guide": [[80, "user-guide"]]}, "indexentries": {"module (class in benchml.pipeline)": [[0, "benchml.pipeline.Module"], [29, "benchml.pipeline.Module"]], "transform (class in benchml.pipeline)": [[0, "benchml.pipeline.Transform"], [29, "benchml.pipeline.Transform"]], "benchml": [[0, "module-benchml"], [1, "module-benchml"]], "module": [[0, "module-benchml"], [1, "module-benchml"], [2, "module-benchml.accumulator"], [3, "module-benchml.analysis"], [4, "module-benchml.basic"], [5, "module-benchml.benchmark"], [6, "module-benchml.conformal"], [7, "module-benchml.data"], [8, "module-benchml.descriptors"], [9, "module-benchml.descriptors.descr_basic"], [10, "module-benchml.ensemble"], [11, "module-benchml.filters"], [12, "module-benchml.filters.random_matrix"], [13, "module-benchml.hyper"], [14, "module-benchml.inputs"], [15, "module-benchml.kernels"], [16, "module-benchml.kernels.kern_basic"], [17, "module-benchml.logger"], [18, "module-benchml.matrix"], [19, "module-benchml.models"], [20, "module-benchml.models.common"], [21, "module-benchml.models.mod_basic"], [22, "module-benchml.models.mod_bench"], [23, "module-benchml.models.mod_bench_class"], [24, "module-benchml.models.mod_bench_xtal"], [25, "module-benchml.models.mod_dscribe"], [26, "module-benchml.models.mod_logd"], [27, "module-benchml.models.mod_logd_ai"], [28, "module-benchml.models.mod_xy"], [29, "module-benchml.pipeline"], [30, "module-benchml.plugins"], [31, "module-benchml.plugins.plugin_asap"], [32, "module-benchml.plugins.plugin_check"], [33, "module-benchml.plugins.plugin_cx"], [34, "module-benchml.plugins.plugin_dscribe"], [35, "module-benchml.plugins.plugin_gylmxx"], [36, "module-benchml.plugins.plugin_nphil"], [37, "module-benchml.plugins.plugin_physchem"], [38, "module-benchml.plugins.plugin_rdkit"], [39, "module-benchml.plugins.plugin_soap"], [40, "module-benchml.plugins.plugin_torch"], [41, "module-benchml.predictors"], [42, "module-benchml.predictors.gaussian_process"], [43, "module-benchml.predictors.pred_sklearn"], [44, "module-benchml.ptable"], [45, "module-benchml.readwrite"], [46, "module-benchml.splits"], [47, "module-benchml.test"], [48, "module-benchml.transforms"], [49, "module-benchml.utils"]], "accumulator (class in benchml)": [[1, "benchml.Accumulator"]], "args (in module benchml)": [[1, "benchml.Args"]], "split() (in module benchml)": [[1, "benchml.Split"]], "transform (class in benchml)": [[1, "benchml.Transform"]], "append() (benchml.accumulator method)": [[1, "benchml.Accumulator.append"]], "eval_map (benchml.accumulator attribute)": [[1, "benchml.Accumulator.eval_map"]], "evaluate() (benchml.accumulator method)": [[1, "benchml.Accumulator.evaluate"]], "evaluateall() (benchml.accumulator method)": [[1, "benchml.Accumulator.evaluateAll"]], "evaluatenull() (benchml.accumulator method)": [[1, "benchml.Accumulator.evaluateNull"]], "hupdate (class in benchml)": [[1, "benchml.hupdate"]], "load() (benchml.accumulator method)": [[1, "benchml.Accumulator.load"]], "load() (in module benchml)": [[1, "benchml.load"]], "load_dataset() (in module benchml)": [[1, "benchml.load_dataset"]], "map() (benchml.transform method)": [[1, "benchml.Transform.map"]], "read() (in module benchml)": [[1, "benchml.read"]], "save() (benchml.accumulator method)": [[1, "benchml.Accumulator.save"]], "save() (in module benchml)": [[1, "benchml.save"]], "score() (benchml.accumulator method)": [[1, "benchml.Accumulator.score"]], "select() (benchml.accumulator class method)": [[1, "benchml.Accumulator.select"]], "select_best (benchml.accumulator attribute)": [[1, "benchml.Accumulator.select_best"]], "sopen (class in benchml)": [[1, "benchml.sopen"]], "stream (in module benchml)": [[1, "benchml.stream"]], "write() (in module benchml)": [[1, "benchml.write"]], "accumulator (class in benchml.accumulator)": [[2, "benchml.accumulator.Accumulator"]], "append() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.append"]], "benchml.accumulator": [[2, "module-benchml.accumulator"]], "eval_map (benchml.accumulator.accumulator attribute)": [[2, "benchml.accumulator.Accumulator.eval_map"]], "evaluate() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.evaluate"]], "evaluateall() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.evaluateAll"]], "evaluatenull() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.evaluateNull"]], "load() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.load"]], "metric_acc() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_acc"]], "metric_auc() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_auc"]], "metric_auc_ovo() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_auc_ovo"]], "metric_auc_ovr() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_auc_ovr"]], "metric_bal() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_bal"]], "metric_mae() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_mae"]], "metric_mcc() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_mcc"]], "metric_mse() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_mse"]], "metric_prec() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_prec"]], "metric_r2() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_r2"]], "metric_rec() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_rec"]], "metric_rhop() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_rhop"]], "metric_rhor() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_rhor"]], "metric_rmse() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_rmse"]], "metric_sup() (in module benchml.accumulator)": [[2, "benchml.accumulator.metric_sup"]], "save() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.save"]], "score() (benchml.accumulator.accumulator method)": [[2, "benchml.accumulator.Accumulator.score"]], "select() (benchml.accumulator.accumulator class method)": [[2, "benchml.accumulator.Accumulator.select"]], "select_best (benchml.accumulator.accumulator attribute)": [[2, "benchml.accumulator.Accumulator.select_best"]], "analyse() (in module benchml.analysis)": [[3, "benchml.analysis.analyse"]], "analyse_section() (in module benchml.analysis)": [[3, "benchml.analysis.analyse_section"]], "benchml.analysis": [[3, "module-benchml.analysis"]], "read_split_props() (in module benchml.analysis)": [[3, "benchml.analysis.read_split_props"]], "read_split_props_single() (in module benchml.analysis)": [[3, "benchml.analysis.read_split_props_single"]], "add (class in benchml.basic)": [[4, "benchml.basic.Add"]], "delta (class in benchml.basic)": [[4, "benchml.basic.Delta"]], "dodividebysize (class in benchml.basic)": [[4, "benchml.basic.DoDivideBySize"]], "exp (class in benchml.basic)": [[4, "benchml.basic.Exp"]], "mult (class in benchml.basic)": [[4, "benchml.basic.Mult"]], "ranknorm (class in benchml.basic)": [[4, "benchml.basic.RankNorm"]], "slicematrix (class in benchml.basic)": [[4, "benchml.basic.SliceMatrix"]], "undodividebysize (class in benchml.basic)": [[4, "benchml.basic.UndoDivideBySize"]], "allow_params (benchml.basic.dodividebysize attribute)": [[4, "benchml.basic.DoDivideBySize.allow_params"]], "allow_params (benchml.basic.ranknorm attribute)": [[4, "benchml.basic.RankNorm.allow_params"]], "allow_params (benchml.basic.slicematrix attribute)": [[4, "benchml.basic.SliceMatrix.allow_params"]], "allow_stream (benchml.basic.add attribute)": [[4, "benchml.basic.Add.allow_stream"]], "allow_stream (benchml.basic.delta attribute)": [[4, "benchml.basic.Delta.allow_stream"]], "allow_stream (benchml.basic.dodividebysize attribute)": [[4, "benchml.basic.DoDivideBySize.allow_stream"]], "allow_stream (benchml.basic.exp attribute)": [[4, "benchml.basic.Exp.allow_stream"]], "allow_stream (benchml.basic.mult attribute)": [[4, "benchml.basic.Mult.allow_stream"]], "allow_stream (benchml.basic.ranknorm attribute)": [[4, "benchml.basic.RankNorm.allow_stream"]], "allow_stream (benchml.basic.slicematrix attribute)": [[4, "benchml.basic.SliceMatrix.allow_stream"]], "allow_stream (benchml.basic.undodividebysize attribute)": [[4, "benchml.basic.UndoDivideBySize.allow_stream"]], "benchml.basic": [[4, "module-benchml.basic"]], "checkdodivide() (benchml.basic.dodividebysize method)": [[4, "benchml.basic.DoDivideBySize.checkDoDivide"]], "default_args (benchml.basic.dodividebysize attribute)": [[4, "benchml.basic.DoDivideBySize.default_args"]], "default_args (benchml.basic.exp attribute)": [[4, "benchml.basic.Exp.default_args"]], "default_args (benchml.basic.slicematrix attribute)": [[4, "benchml.basic.SliceMatrix.default_args"]], "req_args (benchml.basic.add attribute)": [[4, "benchml.basic.Add.req_args"]], "req_inputs (benchml.basic.add attribute)": [[4, "benchml.basic.Add.req_inputs"]], "req_inputs (benchml.basic.delta attribute)": [[4, "benchml.basic.Delta.req_inputs"]], "req_inputs (benchml.basic.dodividebysize attribute)": [[4, "benchml.basic.DoDivideBySize.req_inputs"]], "req_inputs (benchml.basic.exp attribute)": [[4, "benchml.basic.Exp.req_inputs"]], "req_inputs (benchml.basic.mult attribute)": [[4, "benchml.basic.Mult.req_inputs"]], "req_inputs (benchml.basic.ranknorm attribute)": [[4, "benchml.basic.RankNorm.req_inputs"]], "req_inputs (benchml.basic.slicematrix attribute)": [[4, "benchml.basic.SliceMatrix.req_inputs"]], "req_inputs (benchml.basic.undodividebysize attribute)": [[4, "benchml.basic.UndoDivideBySize.req_inputs"]], "stream_samples (benchml.basic.delta attribute)": [[4, "benchml.basic.Delta.stream_samples"]], "benchml.benchmark": [[5, "module-benchml.benchmark"]], "evaluate() (in module benchml.benchmark)": [[5, "benchml.benchmark.evaluate"]], "evaluate_ensemble() (in module benchml.benchmark)": [[5, "benchml.benchmark.evaluate_ensemble"]], "evaluate_model() (in module benchml.benchmark)": [[5, "benchml.benchmark.evaluate_model"]], "make_split_id() (in module benchml.benchmark)": [[5, "benchml.benchmark.make_split_id"]], "parse() (in module benchml.benchmark)": [[5, "benchml.benchmark.parse"]], "conformalbase (class in benchml.conformal)": [[6, "benchml.conformal.ConformalBase"]], "conformalclassifier (class in benchml.conformal)": [[6, "benchml.conformal.ConformalClassifier"]], "conformalmulticlassifier (class in benchml.conformal)": [[6, "benchml.conformal.ConformalMultiClassifier"]], "conformalregressor (class in benchml.conformal)": [[6, "benchml.conformal.ConformalRegressor"]], "allow_params (benchml.conformal.conformalbase attribute)": [[6, "benchml.conformal.ConformalBase.allow_params"]], "allow_stream (benchml.conformal.conformalbase attribute)": [[6, "benchml.conformal.ConformalBase.allow_stream"]], "benchml.conformal": [[6, "module-benchml.conformal"]], "calibrate() (benchml.conformal.conformalclassifier method)": [[6, "benchml.conformal.ConformalClassifier.calibrate"]], "calibrate() (benchml.conformal.conformalmulticlassifier method)": [[6, "benchml.conformal.ConformalMultiClassifier.calibrate"]], "default_args (benchml.conformal.conformalbase attribute)": [[6, "benchml.conformal.ConformalBase.default_args"]], "default_args (benchml.conformal.conformalclassifier attribute)": [[6, "benchml.conformal.ConformalClassifier.default_args"]], "default_args (benchml.conformal.conformalmulticlassifier attribute)": [[6, "benchml.conformal.ConformalMultiClassifier.default_args"]], "default_args (benchml.conformal.conformalregressor attribute)": [[6, "benchml.conformal.ConformalRegressor.default_args"]], "fsigmoid() (in module benchml.conformal)": [[6, "benchml.conformal.fsigmoid"]], "req_inputs (benchml.conformal.conformalbase attribute)": [[6, "benchml.conformal.ConformalBase.req_inputs"]], "slice_funcs_fit (benchml.conformal.conformalbase attribute)": [[6, "benchml.conformal.ConformalBase.slice_funcs_fit"]], "slice_funcs_map (benchml.conformal.conformalbase attribute)": [[6, "benchml.conformal.ConformalBase.slice_funcs_map"]], "benchmarkdata (class in benchml.data)": [[7, "benchml.data.BenchmarkData"]], "dataset (class in benchml.data)": [[7, "benchml.data.Dataset"]], "datasetiterator (class in benchml.data)": [[7, "benchml.data.DatasetIterator"]], "exttdataset (class in benchml.data)": [[7, "benchml.data.ExttDataset"]], "arrays (benchml.data.exttdataset attribute)": [[7, "benchml.data.ExttDataset.arrays"]], "benchml.data": [[7, "module-benchml.data"]], "compile() (in module benchml.data)": [[7, "benchml.data.compile"]], "create_from_file() (benchml.data.dataset class method)": [[7, "benchml.data.Dataset.create_from_file"]], "create_from_file() (benchml.data.exttdataset class method)": [[7, "benchml.data.ExttDataset.create_from_file"]], "info() (benchml.data.dataset method)": [[7, "benchml.data.Dataset.info"]], "info() (benchml.data.exttdataset method)": [[7, "benchml.data.ExttDataset.info"]], "load_dataset() (in module benchml.data)": [[7, "benchml.data.load_dataset"]], "meta (benchml.data.exttdataset attribute)": [[7, "benchml.data.ExttDataset.meta"]], "read_data() (benchml.data.dataset static method)": [[7, "benchml.data.Dataset.read_data"]], "read_data_from_file() (benchml.data.exttdataset static method)": [[7, "benchml.data.ExttDataset.read_data_from_file"]], "slice() (benchml.data.exttdataset method)": [[7, "benchml.data.ExttDataset.slice"]], "target_converter (benchml.data.dataset attribute)": [[7, "benchml.data.Dataset.target_converter"]], "descriptorrandom (class in benchml.descriptors)": [[8, "benchml.descriptors.DescriptorRandom"]], "allow_stream (benchml.descriptors.descriptorrandom attribute)": [[8, "benchml.descriptors.DescriptorRandom.allow_stream"]], "benchml.descriptors": [[8, "module-benchml.descriptors"]], "precompute (benchml.descriptors.descriptorrandom attribute)": [[8, "benchml.descriptors.DescriptorRandom.precompute"]], "req_args (benchml.descriptors.descriptorrandom attribute)": [[8, "benchml.descriptors.DescriptorRandom.req_args"]], "req_inputs (benchml.descriptors.descriptorrandom attribute)": [[8, "benchml.descriptors.DescriptorRandom.req_inputs"]], "stream_samples (benchml.descriptors.descriptorrandom attribute)": [[8, "benchml.descriptors.DescriptorRandom.stream_samples"]], "descriptorrandom (class in benchml.descriptors.descr_basic)": [[9, "benchml.descriptors.descr_basic.DescriptorRandom"]], "allow_stream (benchml.descriptors.descr_basic.descriptorrandom attribute)": [[9, "benchml.descriptors.descr_basic.DescriptorRandom.allow_stream"]], "benchml.descriptors.descr_basic": [[9, "module-benchml.descriptors.descr_basic"]], "precompute (benchml.descriptors.descr_basic.descriptorrandom attribute)": [[9, "benchml.descriptors.descr_basic.DescriptorRandom.precompute"]], "req_args (benchml.descriptors.descr_basic.descriptorrandom attribute)": [[9, "benchml.descriptors.descr_basic.DescriptorRandom.req_args"]], "req_inputs (benchml.descriptors.descr_basic.descriptorrandom attribute)": [[9, "benchml.descriptors.descr_basic.DescriptorRandom.req_inputs"]], "stream_samples (benchml.descriptors.descr_basic.descriptorrandom attribute)": [[9, "benchml.descriptors.descr_basic.DescriptorRandom.stream_samples"]], "ensemblebase (class in benchml.ensemble)": [[10, "benchml.ensemble.EnsembleBase"]], "ensembleregressor (class in benchml.ensemble)": [[10, "benchml.ensemble.EnsembleRegressor"]], "allow_params (benchml.ensemble.ensemblebase attribute)": [[10, "benchml.ensemble.EnsembleBase.allow_params"]], "allow_stream (benchml.ensemble.ensemblebase attribute)": [[10, "benchml.ensemble.EnsembleBase.allow_stream"]], "benchml.ensemble": [[10, "module-benchml.ensemble"]], "default_args (benchml.ensemble.ensemblebase attribute)": [[10, "benchml.ensemble.EnsembleBase.default_args"]], "fitsingle() (benchml.ensemble.ensembleregressor method)": [[10, "benchml.ensemble.EnsembleRegressor.fitSingle"]], "req_inputs (benchml.ensemble.ensemblebase attribute)": [[10, "benchml.ensemble.EnsembleBase.req_inputs"]], "slice_funcs_fit (benchml.ensemble.ensemblebase attribute)": [[10, "benchml.ensemble.EnsembleBase.slice_funcs_fit"]], "slice_funcs_map (benchml.ensemble.ensemblebase attribute)": [[10, "benchml.ensemble.EnsembleBase.slice_funcs_map"]], "cleanmatrix (class in benchml.filters)": [[11, "benchml.filters.CleanMatrix"]], "marchenkopasturfilter (class in benchml.filters)": [[11, "benchml.filters.MarchenkoPasturFilter"]], "allow_params (benchml.filters.cleanmatrix attribute)": [[11, "benchml.filters.CleanMatrix.allow_params"]], "allow_params (benchml.filters.marchenkopasturfilter attribute)": [[11, "benchml.filters.MarchenkoPasturFilter.allow_params"]], "allow_stream (benchml.filters.cleanmatrix attribute)": [[11, "benchml.filters.CleanMatrix.allow_stream"]], "allow_stream (benchml.filters.marchenkopasturfilter attribute)": [[11, "benchml.filters.MarchenkoPasturFilter.allow_stream"]], "benchml.filters": [[11, "module-benchml.filters"]], "default_args (benchml.filters.cleanmatrix attribute)": [[11, "benchml.filters.CleanMatrix.default_args"]], "default_args (benchml.filters.marchenkopasturfilter attribute)": [[11, "benchml.filters.MarchenkoPasturFilter.default_args"]], "precompute (benchml.filters.marchenkopasturfilter attribute)": [[11, "benchml.filters.MarchenkoPasturFilter.precompute"]], "req_inputs (benchml.filters.cleanmatrix attribute)": [[11, "benchml.filters.CleanMatrix.req_inputs"]], "req_inputs (benchml.filters.marchenkopasturfilter attribute)": [[11, "benchml.filters.MarchenkoPasturFilter.req_inputs"]], "stream_samples (benchml.filters.cleanmatrix attribute)": [[11, "benchml.filters.CleanMatrix.stream_samples"]], "stream_samples (benchml.filters.marchenkopasturfilter attribute)": [[11, "benchml.filters.MarchenkoPasturFilter.stream_samples"]], "cleanmatrix (class in benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.CleanMatrix"]], "marchenkopasturfilter (class in benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter"]], "allow_params (benchml.filters.random_matrix.cleanmatrix attribute)": [[12, "benchml.filters.random_matrix.CleanMatrix.allow_params"]], "allow_params (benchml.filters.random_matrix.marchenkopasturfilter attribute)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter.allow_params"]], "allow_stream (benchml.filters.random_matrix.cleanmatrix attribute)": [[12, "benchml.filters.random_matrix.CleanMatrix.allow_stream"]], "allow_stream (benchml.filters.random_matrix.marchenkopasturfilter attribute)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter.allow_stream"]], "benchml.filters.random_matrix": [[12, "module-benchml.filters.random_matrix"]], "default_args (benchml.filters.random_matrix.cleanmatrix attribute)": [[12, "benchml.filters.random_matrix.CleanMatrix.default_args"]], "default_args (benchml.filters.random_matrix.marchenkopasturfilter attribute)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter.default_args"]], "dist_mp() (in module benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.dist_mp"]], "dist_mp_bounds() (in module benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.dist_mp_bounds"]], "dist_mp_sample() (in module benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.dist_mp_sample"]], "dist_mp_test() (in module benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.dist_mp_test"]], "div0() (in module benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.div0"]], "pca_compute() (in module benchml.filters.random_matrix)": [[12, "benchml.filters.random_matrix.pca_compute"]], "precompute (benchml.filters.random_matrix.marchenkopasturfilter attribute)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter.precompute"]], "req_inputs (benchml.filters.random_matrix.cleanmatrix attribute)": [[12, "benchml.filters.random_matrix.CleanMatrix.req_inputs"]], "req_inputs (benchml.filters.random_matrix.marchenkopasturfilter attribute)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter.req_inputs"]], "stream_samples (benchml.filters.random_matrix.cleanmatrix attribute)": [[12, "benchml.filters.random_matrix.CleanMatrix.stream_samples"]], "stream_samples (benchml.filters.random_matrix.marchenkopasturfilter attribute)": [[12, "benchml.filters.random_matrix.MarchenkoPasturFilter.stream_samples"]], "bayesianhyper (class in benchml.hyper)": [[13, "benchml.hyper.BayesianHyper"]], "gridhyper (class in benchml.hyper)": [[13, "benchml.hyper.GridHyper"]], "hyper (class in benchml.hyper)": [[13, "benchml.hyper.Hyper"]], "add() (benchml.hyper.gridhyper method)": [[13, "benchml.hyper.GridHyper.add"]], "atomizearrays() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.atomizeArrays"]], "benchml.hyper": [[13, "module-benchml.hyper"]], "convertupdates() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.convertUpdates"]], "detectarrays() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.detectArrays"]], "findbounds() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.findBounds"]], "getfields() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.getFields"]], "getfields() (benchml.hyper.gridhyper method)": [[13, "benchml.hyper.GridHyper.getFields"]], "joinarrays() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.joinArrays"]], "optimize() (benchml.hyper.bayesianhyper method)": [[13, "benchml.hyper.BayesianHyper.optimize"]], "optimize() (benchml.hyper.gridhyper method)": [[13, "benchml.hyper.GridHyper.optimize"]], "random() (benchml.hyper.gridhyper method)": [[13, "benchml.hyper.GridHyper.random"]], "random() (benchml.hyper.hyper method)": [[13, "benchml.hyper.Hyper.random"]], "extxyzinput (class in benchml.inputs)": [[14, "benchml.inputs.ExtXyzInput"]], "exttinput (class in benchml.inputs)": [[14, "benchml.inputs.ExttInput"]], "allow_stream (benchml.inputs.extxyzinput attribute)": [[14, "benchml.inputs.ExtXyzInput.allow_stream"]], "allow_stream (benchml.inputs.exttinput attribute)": [[14, "benchml.inputs.ExttInput.allow_stream"]], "benchml.inputs": [[14, "module-benchml.inputs"]], "stream_copy (benchml.inputs.extxyzinput attribute)": [[14, "benchml.inputs.ExtXyzInput.stream_copy"]], "stream_copy (benchml.inputs.exttinput attribute)": [[14, "benchml.inputs.ExttInput.stream_copy"]], "stream_samples (benchml.inputs.extxyzinput attribute)": [[14, "benchml.inputs.ExtXyzInput.stream_samples"]], "stream_samples (benchml.inputs.exttinput attribute)": [[14, "benchml.inputs.ExttInput.stream_samples"]], "kernelbase (class in benchml.kernels)": [[15, "benchml.kernels.KernelBase"]], "kerneldot (class in benchml.kernels)": [[15, "benchml.kernels.KernelDot"]], "kernelgaussian (class in benchml.kernels)": [[15, "benchml.kernels.KernelGaussian"]], "allow_params (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.allow_params"]], "allow_params (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.allow_params"]], "allow_stream (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.allow_stream"]], "allow_stream (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.allow_stream"]], "benchml.kernels": [[15, "module-benchml.kernels"]], "default_args (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.default_args"]], "default_args (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.default_args"]], "evaluate() (benchml.kernels.kernelbase method)": [[15, "benchml.kernels.KernelBase.evaluate"]], "evaluate() (benchml.kernels.kerneldot method)": [[15, "benchml.kernels.KernelDot.evaluate"]], "evaluate() (benchml.kernels.kernelgaussian method)": [[15, "benchml.kernels.KernelGaussian.evaluate"]], "evaluatefit() (benchml.kernels.kernelbase method)": [[15, "benchml.kernels.KernelBase.evaluateFit"]], "evaluatepredict() (benchml.kernels.kernelbase method)": [[15, "benchml.kernels.KernelBase.evaluatePredict"]], "precompute (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.precompute"]], "precompute (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.precompute"]], "req_inputs (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.req_inputs"]], "req_inputs (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.req_inputs"]], "stream_kernel (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.stream_kernel"]], "stream_kernel (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.stream_kernel"]], "stream_samples (benchml.kernels.kerneldot attribute)": [[15, "benchml.kernels.KernelDot.stream_samples"]], "stream_samples (benchml.kernels.kernelgaussian attribute)": [[15, "benchml.kernels.KernelGaussian.stream_samples"]], "kernelbase (class in benchml.kernels.kern_basic)": [[16, "benchml.kernels.kern_basic.KernelBase"]], "kerneldot (class in benchml.kernels.kern_basic)": [[16, "benchml.kernels.kern_basic.KernelDot"]], "kernelgaussian (class in benchml.kernels.kern_basic)": [[16, "benchml.kernels.kern_basic.KernelGaussian"]], "allow_params (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.allow_params"]], "allow_params (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.allow_params"]], "allow_stream (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.allow_stream"]], "allow_stream (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.allow_stream"]], "benchml.kernels.kern_basic": [[16, "module-benchml.kernels.kern_basic"]], "default_args (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.default_args"]], "default_args (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.default_args"]], "evaluate() (benchml.kernels.kern_basic.kernelbase method)": [[16, "benchml.kernels.kern_basic.KernelBase.evaluate"]], "evaluate() (benchml.kernels.kern_basic.kerneldot method)": [[16, "benchml.kernels.kern_basic.KernelDot.evaluate"]], "evaluate() (benchml.kernels.kern_basic.kernelgaussian method)": [[16, "benchml.kernels.kern_basic.KernelGaussian.evaluate"]], "evaluatefit() (benchml.kernels.kern_basic.kernelbase method)": [[16, "benchml.kernels.kern_basic.KernelBase.evaluateFit"]], "evaluatepredict() (benchml.kernels.kern_basic.kernelbase method)": [[16, "benchml.kernels.kern_basic.KernelBase.evaluatePredict"]], "precompute (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.precompute"]], "precompute (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.precompute"]], "req_inputs (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.req_inputs"]], "req_inputs (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.req_inputs"]], "stream_kernel (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.stream_kernel"]], "stream_kernel (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.stream_kernel"]], "stream_samples (benchml.kernels.kern_basic.kerneldot attribute)": [[16, "benchml.kernels.kern_basic.KernelDot.stream_samples"]], "stream_samples (benchml.kernels.kern_basic.kernelgaussian attribute)": [[16, "benchml.kernels.kern_basic.KernelGaussian.stream_samples"]], "add() (benchml.logger.extendablenamespace method)": [[17, "benchml.logger.ExtendableNamespace.Add"]], "addarg() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.AddArg"]], "addnamespace() (benchml.logger.extendablenamespace method)": [[17, "benchml.logger.ExtendableNamespace.AddNamespace"]], "args (in module benchml.logger)": [[17, "benchml.logger.Args"]], "as() (benchml.logger.xmlnode method)": [[17, "benchml.logger.XmlNode.As"]], "asarray() (benchml.logger.xmlnode method)": [[17, "benchml.logger.XmlNode.AsArray"]], "clio_helpformatter (class in benchml.logger)": [[17, "benchml.logger.CLIO_HelpFormatter"]], "connect() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.Connect"]], "connecttocmdln() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.ConnectToCmdLn"]], "connecttofile() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.ConnectToFile"]], "connecttooptionsfile() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.ConnectToOptionsFile"]], "disconnectfromfile() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.DisconnectFromFile"]], "extendablenamespace (class in benchml.logger)": [[17, "benchml.logger.ExtendableNamespace"]], "generatetreedict() (in module benchml.logger)": [[17, "benchml.logger.GenerateTreeDict"]], "interpretasboolean() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.InterpretAsBoolean"]], "interpretaslist() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.InterpretAsList"]], "logger (class in benchml.logger)": [[17, "benchml.logger.LOGGER"]], "loglevel (class in benchml.logger)": [[17, "benchml.logger.LOGLEVEL"]], "mock (in module benchml.logger)": [[17, "benchml.logger.Mock"]], "namespacefromdict() (in module benchml.logger)": [[17, "benchml.logger.NamespaceFromDict"]], "os_color (class in benchml.logger)": [[17, "benchml.logger.OS_COLOR"]], "os_exe_assert (class in benchml.logger)": [[17, "benchml.logger.OS_EXE_ASSERT"]], "os_exe_catch (class in benchml.logger)": [[17, "benchml.logger.OS_EXE_CATCH"]], "os_exe_dev (class in benchml.logger)": [[17, "benchml.logger.OS_EXE_DEV"]], "os_line_char (class in benchml.logger)": [[17, "benchml.logger.OS_LINE_CHAR"]], "optionsinterface (class in benchml.logger)": [[17, "benchml.logger.OptionsInterface"]], "parse() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.Parse"]], "parsecmdln() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.ParseCmdLn"]], "parseoptionsfile() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.ParseOptionsFile"]], "parseoptionsfilexml() (benchml.logger.optionsinterface method)": [[17, "benchml.logger.OptionsInterface.ParseOptionsFileXml"]], "selectbytag() (benchml.logger.xmltree method)": [[17, "benchml.logger.XmlTree.SelectByTag"]], "setnodevalue() (benchml.logger.xmlnode method)": [[17, "benchml.logger.XmlNode.SetNodeValue"]], "shellinterface (class in benchml.logger)": [[17, "benchml.logger.ShellInterface"]], "xmlnode (class in benchml.logger)": [[17, "benchml.logger.XmlNode"]], "xmltree (class in benchml.logger)": [[17, "benchml.logger.XmlTree"]], "abspath() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.abspath"]], "benchml.logger": [[17, "module-benchml.logger"]], "cd() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.cd"]], "cwd() (benchml.logger.shellinterface static method)": [[17, "benchml.logger.ShellInterface.cwd"]], "keys() (benchml.logger.xmltree method)": [[17, "benchml.logger.XmlTree.keys"]], "levels (benchml.logger.loglevel attribute)": [[17, "benchml.logger.LOGLEVEL.levels"]], "mkcd() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.mkcd"]], "okquit() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.okquit"]], "os_generate_header() (benchml.logger.shellinterface static method)": [[17, "benchml.logger.ShellInterface.os_generate_header"]], "os_print() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.os_print"]], "os_print_config() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.os_print_config"]], "os_print_reset() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.os_print_reset"]], "pwd() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.pwd"]], "root() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.root"]], "setlevel() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.setLevel"]], "sleep() (benchml.logger.logger static method)": [[17, "benchml.logger.LOGGER.sleep"]], "xxquit() (benchml.logger.shellinterface method)": [[17, "benchml.logger.ShellInterface.xxquit"]], "concatenate (class in benchml.matrix)": [[18, "benchml.matrix.Concatenate"]], "reducematrix (class in benchml.matrix)": [[18, "benchml.matrix.ReduceMatrix"]], "reducetypedmatrix (class in benchml.matrix)": [[18, "benchml.matrix.ReduceTypedMatrix"]], "reshape (class in benchml.matrix)": [[18, "benchml.matrix.Reshape"]], "subsamplematrix (class in benchml.matrix)": [[18, "benchml.matrix.SubsampleMatrix"]], "whitenmatrix (class in benchml.matrix)": [[18, "benchml.matrix.WhitenMatrix"]], "allow_ops (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.allow_ops"]], "allow_params (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.allow_params"]], "allow_params (benchml.matrix.whitenmatrix attribute)": [[18, "benchml.matrix.WhitenMatrix.allow_params"]], "allow_stream (benchml.matrix.concatenate attribute)": [[18, "benchml.matrix.Concatenate.allow_stream"]], "allow_stream (benchml.matrix.reducematrix attribute)": [[18, "benchml.matrix.ReduceMatrix.allow_stream"]], "allow_stream (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.allow_stream"]], "allow_stream (benchml.matrix.reshape attribute)": [[18, "benchml.matrix.Reshape.allow_stream"]], "allow_stream (benchml.matrix.subsamplematrix attribute)": [[18, "benchml.matrix.SubsampleMatrix.allow_stream"]], "allow_stream (benchml.matrix.whitenmatrix attribute)": [[18, "benchml.matrix.WhitenMatrix.allow_stream"]], "benchml.matrix": [[18, "module-benchml.matrix"]], "default_args (benchml.matrix.concatenate attribute)": [[18, "benchml.matrix.Concatenate.default_args"]], "default_args (benchml.matrix.reducematrix attribute)": [[18, "benchml.matrix.ReduceMatrix.default_args"]], "default_args (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.default_args"]], "default_args (benchml.matrix.reshape attribute)": [[18, "benchml.matrix.Reshape.default_args"]], "default_args (benchml.matrix.subsamplematrix attribute)": [[18, "benchml.matrix.SubsampleMatrix.default_args"]], "default_args (benchml.matrix.whitenmatrix attribute)": [[18, "benchml.matrix.WhitenMatrix.default_args"]], "optional_inputs (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.optional_inputs"]], "precompute (benchml.matrix.concatenate attribute)": [[18, "benchml.matrix.Concatenate.precompute"]], "req_args (benchml.matrix.reshape attribute)": [[18, "benchml.matrix.Reshape.req_args"]], "req_inputs (benchml.matrix.concatenate attribute)": [[18, "benchml.matrix.Concatenate.req_inputs"]], "req_inputs (benchml.matrix.reducematrix attribute)": [[18, "benchml.matrix.ReduceMatrix.req_inputs"]], "req_inputs (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.req_inputs"]], "req_inputs (benchml.matrix.reshape attribute)": [[18, "benchml.matrix.Reshape.req_inputs"]], "req_inputs (benchml.matrix.whitenmatrix attribute)": [[18, "benchml.matrix.WhitenMatrix.req_inputs"]], "stream_samples (benchml.matrix.concatenate attribute)": [[18, "benchml.matrix.Concatenate.stream_samples"]], "stream_samples (benchml.matrix.reducematrix attribute)": [[18, "benchml.matrix.ReduceMatrix.stream_samples"]], "stream_samples (benchml.matrix.reducetypedmatrix attribute)": [[18, "benchml.matrix.ReduceTypedMatrix.stream_samples"]], "benchml.models": [[19, "module-benchml.models"]], "compile() (in module benchml.models)": [[19, "benchml.models.compile"]], "compile_and_filter() (in module benchml.models)": [[19, "benchml.models.compile_and_filter"]], "get() (in module benchml.models)": [[19, "benchml.models.get"]], "list_all() (in module benchml.models)": [[19, "benchml.models.list_all"]], "benchml.models.common": [[20, "module-benchml.models.common"]], "get_acsf_krr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_acsf_krr_kwargs"]], "get_acsf_rr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_acsf_rr_kwargs"]], "get_compile_gylm() (in module benchml.models.common)": [[20, "benchml.models.common.get_compile_gylm"]], "get_logd_hybrid_topo_gp_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_logd_hybrid_topo_gp_kwargs"]], "get_mbtr_krr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_mbtr_krr_kwargs"]], "get_mbtr_rr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_mbtr_rr_kwargs"]], "get_pdf_gylm_krr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_pdf_gylm_krr_kwargs"]], "get_pdf_gylm_rr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_pdf_gylm_rr_kwargs"]], "get_pdf_soap_krr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_pdf_soap_krr_kwargs"]], "get_pdf_soap_rr_kwargs() (in module benchml.models.common)": [[20, "benchml.models.common.get_pdf_soap_rr_kwargs"]], "make_gylm_krr() (in module benchml.models.common)": [[20, "benchml.models.common.make_gylm_krr"]], "make_gylm_rr() (in module benchml.models.common)": [[20, "benchml.models.common.make_gylm_rr"]], "make_soap_krr() (in module benchml.models.common)": [[20, "benchml.models.common.make_soap_krr"]], "make_soap_rr() (in module benchml.models.common)": [[20, "benchml.models.common.make_soap_rr"]], "benchml.models.mod_basic": [[21, "module-benchml.models.mod_basic"]], "compile_gylm() (in module benchml.models.mod_basic)": [[21, "benchml.models.mod_basic.compile_gylm"]], "compile_morgan() (in module benchml.models.mod_basic)": [[21, "benchml.models.mod_basic.compile_morgan"]], "compile_null() (in module benchml.models.mod_basic)": [[21, "benchml.models.mod_basic.compile_null"]], "compile_soap() (in module benchml.models.mod_basic)": [[21, "benchml.models.mod_basic.compile_soap"]], "make_soap_krr() (in module benchml.models.mod_basic)": [[21, "benchml.models.mod_basic.make_soap_krr"]], "register_all() (in module benchml.models.mod_basic)": [[21, "benchml.models.mod_basic.register_all"]], "benchml.models.mod_bench": [[22, "module-benchml.models.mod_bench"]], "compile_acsf() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_acsf"]], "compile_cm() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_cm"]], "compile_ecfp() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_ecfp"]], "compile_mbtr() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_mbtr"]], "compile_pdf() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_pdf"]], "compile_physchem() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_physchem"]], "compile_soap() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.compile_soap"]], "make_pdf_krr() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.make_pdf_krr"]], "make_pdf_rr() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.make_pdf_rr"]], "register_all() (in module benchml.models.mod_bench)": [[22, "benchml.models.mod_bench.register_all"]], "benchml.models.mod_bench_class": [[23, "module-benchml.models.mod_bench_class"]], "compile_ecfp_class() (in module benchml.models.mod_bench_class)": [[23, "benchml.models.mod_bench_class.compile_ecfp_class"]], "compile_gylm_match_class() (in module benchml.models.mod_bench_class)": [[23, "benchml.models.mod_bench_class.compile_gylm_match_class"]], "compile_physchem_class() (in module benchml.models.mod_bench_class)": [[23, "benchml.models.mod_bench_class.compile_physchem_class"]], "register_all() (in module benchml.models.mod_bench_class)": [[23, "benchml.models.mod_bench_class.register_all"]], "benchml.models.mod_bench_xtal": [[24, "module-benchml.models.mod_bench_xtal"]], "compile_acsf() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.compile_acsf"]], "compile_esm() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.compile_esm"]], "compile_mbtr() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.compile_mbtr"]], "compile_pdf() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.compile_pdf"]], "compile_physchem() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.compile_physchem"]], "compile_soap() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.compile_soap"]], "make_pdf_krr() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.make_pdf_krr"]], "make_pdf_rr() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.make_pdf_rr"]], "register_all() (in module benchml.models.mod_bench_xtal)": [[24, "benchml.models.mod_bench_xtal.register_all"]], "benchml.models.mod_dscribe": [[25, "module-benchml.models.mod_dscribe"]], "compile_dscribe() (in module benchml.models.mod_dscribe)": [[25, "benchml.models.mod_dscribe.compile_dscribe"]], "register_all() (in module benchml.models.mod_dscribe)": [[25, "benchml.models.mod_dscribe.register_all"]], "benchml.models.mod_logd": [[26, "module-benchml.models.mod_logd"]], "compile_logd() (in module benchml.models.mod_logd)": [[26, "benchml.models.mod_logd.compile_logd"]], "compile_logd_extensive() (in module benchml.models.mod_logd)": [[26, "benchml.models.mod_logd.compile_logd_extensive"]], "register_all() (in module benchml.models.mod_logd)": [[26, "benchml.models.mod_logd.register_all"]], "benchml.models.mod_logd_ai": [[27, "module-benchml.models.mod_logd_ai"]], "compile_logd_ai() (in module benchml.models.mod_logd_ai)": [[27, "benchml.models.mod_logd_ai.compile_logd_ai"]], "register_all() (in module benchml.models.mod_logd_ai)": [[27, "benchml.models.mod_logd_ai.register_all"]], "benchml.models.mod_xy": [[28, "module-benchml.models.mod_xy"]], "compile_xy_classifiers() (in module benchml.models.mod_xy)": [[28, "benchml.models.mod_xy.compile_xy_classifiers"]], "compile_xy_regressors() (in module benchml.models.mod_xy)": [[28, "benchml.models.mod_xy.compile_xy_regressors"]], "register_all() (in module benchml.models.mod_xy)": [[28, "benchml.models.mod_xy.register_all"]], "fittransform (class in benchml.pipeline)": [[29, "benchml.pipeline.FitTransform"]], "inputtransform (class in benchml.pipeline)": [[29, "benchml.pipeline.InputTransform"]], "macro (class in benchml.pipeline)": [[29, "benchml.pipeline.Macro"]], "modeltype (class in benchml.pipeline)": [[29, "benchml.pipeline.ModelType"]], "params (class in benchml.pipeline)": [[29, "benchml.pipeline.Params"]], "standalone (class in benchml.pipeline)": [[29, "benchml.pipeline.Standalone"]], "stream (class in benchml.pipeline)": [[29, "benchml.pipeline.Stream"]], "streamhandle (class in benchml.pipeline)": [[29, "benchml.pipeline.StreamHandle"]], "transformbase (class in benchml.pipeline)": [[29, "benchml.pipeline.TransformBase"]], "activate() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.activate"]], "activateparams() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.activateParams"]], "activatestream() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.activateStream"]], "allow_params (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.allow_params"]], "allow_stream (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.allow_stream"]], "append() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.append"]], "attach() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.attach"]], "benchml.pipeline": [[29, "module-benchml.pipeline"]], "checkrequire() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.checkRequire"]], "check_available() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.check_available"]], "check_available() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.check_available"]], "classification (benchml.pipeline.modeltype attribute)": [[29, "benchml.pipeline.ModelType.classification"]], "clear() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.clear"]], "cleardependencies() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.clearDependencies"]], "cleardependencies() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.clearDependencies"]], "clearparams() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.clearParams"]], "clearparams() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.clearParams"]], "clone() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.clone"]], "close() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.close"]], "compileargs() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.compileArgs"]], "compileinputs() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.compileInputs"]], "compilestream() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.compileStream"]], "createpartition() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.createPartition"]], "create_mermaid_graph() (benchml.pipeline.module static method)": [[29, "benchml.pipeline.Module.create_mermaid_graph"]], "def_doc (benchml.pipeline.module attribute)": [[29, "benchml.pipeline.Module.def_doc"]], "default_args (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.default_args"]], "deploy() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.deploy"]], "deploy() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.deploy"]], "deps_from_input() (in module benchml.pipeline)": [[29, "benchml.pipeline.deps_from_input"]], "deps_from_inputs() (in module benchml.pipeline)": [[29, "benchml.pipeline.deps_from_inputs"]], "detach() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.detach"]], "docstring_template (benchml.pipeline.module attribute)": [[29, "benchml.pipeline.Module.docstring_template"]], "document_transform() (benchml.pipeline.module static method)": [[29, "benchml.pipeline.Module.document_transform"]], "feed() (benchml.pipeline.inputtransform method)": [[29, "benchml.pipeline.InputTransform.feed"]], "filter() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.filter"]], "fit() (benchml.pipeline.fittransform method)": [[29, "benchml.pipeline.FitTransform.fit"]], "fit() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.fit"]], "fit() (benchml.pipeline.standalone method)": [[29, "benchml.pipeline.Standalone.fit"]], "force_json() (in module benchml.pipeline)": [[29, "benchml.pipeline.force_json"]], "freeze() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.freeze"]], "freeze() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.freeze"]], "frozen() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.frozen"]], "generate_hash_id() (in module benchml.pipeline)": [[29, "benchml.pipeline.generate_hash_id"]], "get() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.get"]], "get() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.get"]], "getactive() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.getActive"]], "gethash() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.getHash"]], "getstream() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.getStream"]], "has() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.has"]], "has() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.has"]], "haspartition() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.hasPartition"]], "hashchanged() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.hashChanged"]], "hashselfchanged() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.hashSelfChanged"]], "hashstate() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.hashState"]], "hashstate() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.hashState"]], "help_args (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.help_args"]], "help_inputs (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.help_inputs"]], "help_params (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.help_params"]], "help_stream (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.help_stream"]], "hupdate (class in benchml.pipeline)": [[29, "benchml.pipeline.hupdate"]], "hypereval() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.hyperEval"]], "hyperupdate() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.hyperUpdate"]], "hyperfit() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.hyperfit"]], "info() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.info"]], "info() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.info"]], "is_macro (benchml.pipeline.macro attribute)": [[29, "benchml.pipeline.Macro.is_macro"]], "items() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.items"]], "items() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.items"]], "keys() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.keys"]], "keys() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.keys"]], "log_stage_info_message() (in module benchml.pipeline)": [[29, "benchml.pipeline.log_stage_info_message"]], "make_doc_header() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.make_doc_header"]], "make_pipeline_section() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.make_pipeline_section"]], "make_transforms_section() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.make_transforms_section"]], "map() (benchml.pipeline.inputtransform method)": [[29, "benchml.pipeline.InputTransform.map"]], "map() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.map"]], "map() (benchml.pipeline.standalone method)": [[29, "benchml.pipeline.Standalone.map"]], "map() (benchml.pipeline.transform method)": [[29, "benchml.pipeline.Transform.map"]], "model_types (benchml.pipeline.module attribute)": [[29, "benchml.pipeline.Module.model_types"]], "na (benchml.pipeline.modeltype attribute)": [[29, "benchml.pipeline.ModelType.na"]], "open() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.open"]], "openparams() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.openParams"]], "openstream() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.openStream"]], "openstream() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.openStream"]], "params() (benchml.pipeline.standalone method)": [[29, "benchml.pipeline.Standalone.params"]], "params() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.params"]], "parseargslinks() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.parseArgsLinks"]], "precompute (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.precompute"]], "precompute() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.precompute"]], "put() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.put"]], "put() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.put"]], "ready() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.ready"]], "reconnect() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.reconnect"]], "regression (benchml.pipeline.modeltype attribute)": [[29, "benchml.pipeline.ModelType.regression"]], "replace() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.replace"]], "req_args (benchml.pipeline.macro attribute)": [[29, "benchml.pipeline.Macro.req_args"]], "req_args (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.req_args"]], "req_inputs (benchml.pipeline.macro attribute)": [[29, "benchml.pipeline.Macro.req_inputs"]], "req_inputs (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.req_inputs"]], "requireargs() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.requireArgs"]], "requireinputs() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.requireInputs"]], "resolve() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.resolve"]], "resolveargs() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.resolveArgs"]], "resolveargs() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.resolveArgs"]], "resolveinputs() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.resolveInputs"]], "resolveoutputs() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.resolveOutputs"]], "select() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.select"]], "setactive() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.setActive"]], "setstreamfor() (benchml.pipeline.streamhandle method)": [[29, "benchml.pipeline.StreamHandle.setStreamFor"]], "setup() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.setup"]], "showhelpmessage() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.showHelpMessage"]], "showhelpmessage() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.showHelpMessage"]], "slicestorage() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.sliceStorage"]], "sopen (class in benchml.pipeline)": [[29, "benchml.pipeline.sopen"]], "split() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.split"]], "stream (in module benchml.pipeline)": [[29, "benchml.pipeline.stream"]], "stream_copy (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.stream_copy"]], "stream_kernel (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.stream_kernel"]], "stream_samples (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.stream_samples"]], "stream_self_kernel (benchml.pipeline.transformbase attribute)": [[29, "benchml.pipeline.TransformBase.stream_self_kernel"]], "transforms (benchml.pipeline.macro attribute)": [[29, "benchml.pipeline.Macro.transforms"]], "unfreeze() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.unfreeze"]], "updatedependencies() (benchml.pipeline.module method)": [[29, "benchml.pipeline.Module.updateDependencies"]], "updatedependencies() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.updateDependencies"]], "updateinputs() (benchml.pipeline.transformbase method)": [[29, "benchml.pipeline.TransformBase.updateInputs"]], "version() (benchml.pipeline.params method)": [[29, "benchml.pipeline.Params.version"]], "version() (benchml.pipeline.stream method)": [[29, "benchml.pipeline.Stream.version"]], "benchml.plugins": [[30, "module-benchml.plugins"]], "asaptransform (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.AsapTransform"]], "d2k (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.D2K"]], "dimreduce (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.DimReduce"]], "kerneldensity (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.KernelDensity"]], "sparsekpca (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.SparseKPCA"]], "sparsekrr (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.SparseKRR"]], "sparsesvm (class in benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.SparseSVM"]], "benchml.plugins.plugin_asap": [[31, "module-benchml.plugins.plugin_asap"]], "check_asap_available() (in module benchml.plugins.plugin_asap)": [[31, "benchml.plugins.plugin_asap.check_asap_available"]], "check_available() (benchml.plugins.plugin_asap.asaptransform method)": [[31, "benchml.plugins.plugin_asap.AsapTransform.check_available"]], "benchml.plugins.plugin_check": [[32, "module-benchml.plugins.plugin_check"]], "check_asap_available() (in module benchml.plugins.plugin_check)": [[32, "benchml.plugins.plugin_check.check_asap_available"]], "check_dscribe_available() (in module benchml.plugins.plugin_check)": [[32, "benchml.plugins.plugin_check.check_dscribe_available"]], "check_gylmxx_available() (in module benchml.plugins.plugin_check)": [[32, "benchml.plugins.plugin_check.check_gylmxx_available"]], "check_nphil_available() (in module benchml.plugins.plugin_check)": [[32, "benchml.plugins.plugin_check.check_nphil_available"]], "check_rdkit_available() (in module benchml.plugins.plugin_check)": [[32, "benchml.plugins.plugin_check.check_rdkit_available"]], "check_torch_available() (in module benchml.plugins.plugin_check)": [[32, "benchml.plugins.plugin_check.check_torch_available"]], "cxcalctransform (class in benchml.plugins.plugin_cx)": [[33, "benchml.plugins.plugin_cx.CxCalcTransform"]], "allow_stream (benchml.plugins.plugin_cx.cxcalctransform attribute)": [[33, "benchml.plugins.plugin_cx.CxCalcTransform.allow_stream"]], "benchml.plugins.plugin_cx": [[33, "module-benchml.plugins.plugin_cx"]], "default_args (benchml.plugins.plugin_cx.cxcalctransform attribute)": [[33, "benchml.plugins.plugin_cx.CxCalcTransform.default_args"]], "get_smiles() (in module benchml.plugins.plugin_cx)": [[33, "benchml.plugins.plugin_cx.get_smiles"]], "precompute (benchml.plugins.plugin_cx.cxcalctransform attribute)": [[33, "benchml.plugins.plugin_cx.CxCalcTransform.precompute"]], "stream_samples (benchml.plugins.plugin_cx.cxcalctransform attribute)": [[33, "benchml.plugins.plugin_cx.CxCalcTransform.stream_samples"]], "calculatorclass (benchml.plugins.plugin_dscribe.dscribeacsf attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeACSF.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_dscribe.dscribecm attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeCM.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_dscribe.dscribeewaldsummatrix attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeEwaldSumMatrix.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_dscribe.dscribelmbtr attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeLMBTR.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_dscribe.dscribembtr attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeMBTR.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_dscribe.dscribesinematrix attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeSineMatrix.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_dscribe.universaldscribeacsf attribute)": [[34, "benchml.plugins.plugin_dscribe.UniversalDscribeACSF.CalculatorClass"]], "calculatorclass() (benchml.plugins.plugin_dscribe.dscribetransform static method)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.CalculatorClass"]], "dscribeacsf (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeACSF"]], "dscribecm (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeCM"]], "dscribeewaldsummatrix (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeEwaldSumMatrix"]], "dscribelmbtr (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeLMBTR"]], "dscribembtr (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeMBTR"]], "dscribesinematrix (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeSineMatrix"]], "dscribetransform (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform"]], "universaldscribeacsf (class in benchml.plugins.plugin_dscribe)": [[34, "benchml.plugins.plugin_dscribe.UniversalDscribeACSF"]], "allow_params (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.allow_params"]], "allow_stream (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.allow_stream"]], "benchml.plugins.plugin_dscribe": [[34, "module-benchml.plugins.plugin_dscribe"]], "check_available() (benchml.plugins.plugin_dscribe.dscribetransform method)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.check_available"]], "check_available() (benchml.plugins.plugin_dscribe.universaldscribeacsf method)": [[34, "benchml.plugins.plugin_dscribe.UniversalDscribeACSF.check_available"]], "default_args (benchml.plugins.plugin_dscribe.dscribeacsf attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeACSF.default_args"]], "default_args (benchml.plugins.plugin_dscribe.dscribecm attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeCM.default_args"]], "default_args (benchml.plugins.plugin_dscribe.dscribeewaldsummatrix attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeEwaldSumMatrix.default_args"]], "default_args (benchml.plugins.plugin_dscribe.dscribelmbtr attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeLMBTR.default_args"]], "default_args (benchml.plugins.plugin_dscribe.dscribembtr attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeMBTR.default_args"]], "default_args (benchml.plugins.plugin_dscribe.dscribesinematrix attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeSineMatrix.default_args"]], "default_args (benchml.plugins.plugin_dscribe.universaldscribeacsf attribute)": [[34, "benchml.plugins.plugin_dscribe.UniversalDscribeACSF.default_args"]], "log (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.log"]], "precompute (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.precompute"]], "req_inputs (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.req_inputs"]], "stream_samples (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.stream_samples"]], "verbose (benchml.plugins.plugin_dscribe.dscribetransform attribute)": [[34, "benchml.plugins.plugin_dscribe.DscribeTransform.verbose"]], "attributekernelsmoothmatchsvm (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.AttributeKernelSmoothMatchSVM"]], "attributesmoothmatchkernelridge (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.AttributeSmoothMatchKernelRidge"]], "gylmatomic (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.GylmAtomic"]], "gylmaverage (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.GylmAverage"]], "gylmreduceconvolve (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve"]], "gylmtransform (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform"]], "kernelsmoothmatch (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch"]], "nlocx (class in benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.NlocX"]], "allow_params (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.allow_params"]], "allow_params (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.allow_params"]], "allow_stream (benchml.plugins.plugin_gylmxx.attributekernelsmoothmatchsvm attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeKernelSmoothMatchSVM.allow_stream"]], "allow_stream (benchml.plugins.plugin_gylmxx.attributesmoothmatchkernelridge attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeSmoothMatchKernelRidge.allow_stream"]], "allow_stream (benchml.plugins.plugin_gylmxx.gylmreduceconvolve attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve.allow_stream"]], "allow_stream (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.allow_stream"]], "allow_stream (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.allow_stream"]], "as_object_array() (in module benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.as_object_array"]], "benchml.plugins.plugin_gylmxx": [[35, "module-benchml.plugins.plugin_gylmxx"]], "check_available() (benchml.plugins.plugin_gylmxx.gylmtransform method)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.check_available"]], "check_available() (benchml.plugins.plugin_gylmxx.kernelsmoothmatch method)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.check_available"]], "check_available() (benchml.plugins.plugin_gylmxx.nlocx method)": [[35, "benchml.plugins.plugin_gylmxx.NlocX.check_available"]], "default_args (benchml.plugins.plugin_gylmxx.attributekernelsmoothmatchsvm attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeKernelSmoothMatchSVM.default_args"]], "default_args (benchml.plugins.plugin_gylmxx.attributesmoothmatchkernelridge attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeSmoothMatchKernelRidge.default_args"]], "default_args (benchml.plugins.plugin_gylmxx.gylmreduceconvolve attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve.default_args"]], "default_args (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.default_args"]], "default_args (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.default_args"]], "default_args (benchml.plugins.plugin_gylmxx.nlocx attribute)": [[35, "benchml.plugins.plugin_gylmxx.NlocX.default_args"]], "evaluate() (benchml.plugins.plugin_gylmxx.kernelsmoothmatch method)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.evaluate"]], "gylm_evaluate() (in module benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.gylm_evaluate"]], "gylm_evaluate_mp() (in module benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.gylm_evaluate_mp"]], "gylm_evaluate_single() (in module benchml.plugins.plugin_gylmxx)": [[35, "benchml.plugins.plugin_gylmxx.gylm_evaluate_single"]], "log (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.log"]], "log (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.log"]], "precompute (benchml.plugins.plugin_gylmxx.gylmreduceconvolve attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve.precompute"]], "precompute (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.precompute"]], "precompute (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.precompute"]], "req_args (benchml.plugins.plugin_gylmxx.gylmreduceconvolve attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve.req_args"]], "req_inputs (benchml.plugins.plugin_gylmxx.attributekernelsmoothmatchsvm attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeKernelSmoothMatchSVM.req_inputs"]], "req_inputs (benchml.plugins.plugin_gylmxx.attributesmoothmatchkernelridge attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeSmoothMatchKernelRidge.req_inputs"]], "req_inputs (benchml.plugins.plugin_gylmxx.gylmreduceconvolve attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve.req_inputs"]], "req_inputs (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.req_inputs"]], "req_inputs (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.req_inputs"]], "stream_kernel (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.stream_kernel"]], "stream_samples (benchml.plugins.plugin_gylmxx.gylmreduceconvolve attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmReduceConvolve.stream_samples"]], "stream_samples (benchml.plugins.plugin_gylmxx.gylmtransform attribute)": [[35, "benchml.plugins.plugin_gylmxx.GylmTransform.stream_samples"]], "stream_samples (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.stream_samples"]], "verbose (benchml.plugins.plugin_gylmxx.attributekernelsmoothmatchsvm attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeKernelSmoothMatchSVM.verbose"]], "verbose (benchml.plugins.plugin_gylmxx.attributesmoothmatchkernelridge attribute)": [[35, "benchml.plugins.plugin_gylmxx.AttributeSmoothMatchKernelRidge.verbose"]], "verbose (benchml.plugins.plugin_gylmxx.kernelsmoothmatch attribute)": [[35, "benchml.plugins.plugin_gylmxx.KernelSmoothMatch.verbose"]], "nonlinearfeaturefilter (class in benchml.plugins.plugin_nphil)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter"]], "allow_params (benchml.plugins.plugin_nphil.nonlinearfeaturefilter attribute)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter.allow_params"]], "allow_stream (benchml.plugins.plugin_nphil.nonlinearfeaturefilter attribute)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter.allow_stream"]], "benchml.plugins.plugin_nphil": [[36, "module-benchml.plugins.plugin_nphil"]], "check_available() (benchml.plugins.plugin_nphil.nonlinearfeaturefilter method)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter.check_available"]], "default_args (benchml.plugins.plugin_nphil.nonlinearfeaturefilter attribute)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter.default_args"]], "generategraph() (benchml.plugins.plugin_nphil.nonlinearfeaturefilter method)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter.generateGraph"]], "req_inputs (benchml.plugins.plugin_nphil.nonlinearfeaturefilter attribute)": [[36, "benchml.plugins.plugin_nphil.NonlinearFeatureFilter.req_inputs"]], "physchem2d (class in benchml.plugins.plugin_physchem)": [[37, "benchml.plugins.plugin_physchem.Physchem2D"]], "physchemuser (class in benchml.plugins.plugin_physchem)": [[37, "benchml.plugins.plugin_physchem.PhyschemUser"]], "physchemxtal (class in benchml.plugins.plugin_physchem)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal"]], "allow_stream (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.allow_stream"]], "allow_stream (benchml.plugins.plugin_physchem.physchemuser attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemUser.allow_stream"]], "allow_stream (benchml.plugins.plugin_physchem.physchemxtal attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.allow_stream"]], "benchml.plugins.plugin_physchem": [[37, "module-benchml.plugins.plugin_physchem"]], "default_args (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.default_args"]], "default_args (benchml.plugins.plugin_physchem.physchemuser attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemUser.default_args"]], "default_args (benchml.plugins.plugin_physchem.physchemxtal attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.default_args"]], "descriptors (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.descriptors"]], "descriptors_active (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.descriptors_active"]], "fct_type (benchml.plugins.plugin_physchem.physchemxtal attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.fct_type"]], "get_atomic_data() (in module benchml.plugins.plugin_physchem)": [[37, "benchml.plugins.plugin_physchem.get_atomic_data"]], "help_args (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.help_args"]], "mapsingleconfig() (benchml.plugins.plugin_physchem.physchemxtal method)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.mapSingleConfig"]], "precompute (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.precompute"]], "precompute (benchml.plugins.plugin_physchem.physchemxtal attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.precompute"]], "predefined (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.predefined"]], "req_args (benchml.plugins.plugin_physchem.physchemuser attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemUser.req_args"]], "req_inputs (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.req_inputs"]], "req_inputs (benchml.plugins.plugin_physchem.physchemuser attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemUser.req_inputs"]], "req_inputs (benchml.plugins.plugin_physchem.physchemxtal attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.req_inputs"]], "stream_samples (benchml.plugins.plugin_physchem.physchem2d attribute)": [[37, "benchml.plugins.plugin_physchem.Physchem2D.stream_samples"]], "stream_samples (benchml.plugins.plugin_physchem.physchemuser attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemUser.stream_samples"]], "stream_samples (benchml.plugins.plugin_physchem.physchemxtal attribute)": [[37, "benchml.plugins.plugin_physchem.PhyschemXtal.stream_samples"]], "morganfp (class in benchml.plugins.plugin_rdkit)": [[38, "benchml.plugins.plugin_rdkit.MorganFP"]], "morgankernel (class in benchml.plugins.plugin_rdkit)": [[38, "benchml.plugins.plugin_rdkit.MorganKernel"]], "allow_stream (benchml.plugins.plugin_rdkit.morganfp attribute)": [[38, "benchml.plugins.plugin_rdkit.MorganFP.allow_stream"]], "benchml.plugins.plugin_rdkit": [[38, "module-benchml.plugins.plugin_rdkit"]], "check_available() (benchml.plugins.plugin_rdkit.morganfp method)": [[38, "benchml.plugins.plugin_rdkit.MorganFP.check_available"]], "default_args (benchml.plugins.plugin_rdkit.morganfp attribute)": [[38, "benchml.plugins.plugin_rdkit.MorganFP.default_args"]], "precompute (benchml.plugins.plugin_rdkit.morganfp attribute)": [[38, "benchml.plugins.plugin_rdkit.MorganFP.precompute"]], "req_inputs (benchml.plugins.plugin_rdkit.morgankernel attribute)": [[38, "benchml.plugins.plugin_rdkit.MorganKernel.req_inputs"]], "stream_samples (benchml.plugins.plugin_rdkit.morganfp attribute)": [[38, "benchml.plugins.plugin_rdkit.MorganFP.stream_samples"]], "transforms (benchml.plugins.plugin_rdkit.morgankernel attribute)": [[38, "benchml.plugins.plugin_rdkit.MorganKernel.transforms"]], "calculatorclass (benchml.plugins.plugin_soap.universalsoapdscribe attribute)": [[39, "benchml.plugins.plugin_soap.UniversalSoapDscribe.CalculatorClass"]], "calculatorclass (benchml.plugins.plugin_soap.universalsoapgylmxx attribute)": [[39, "benchml.plugins.plugin_soap.UniversalSoapGylmxx.CalculatorClass"]], "calculatorclass() (benchml.plugins.plugin_soap.universalsoapbase static method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase.CalculatorClass"]], "soapbase (class in benchml.plugins.plugin_soap)": [[39, "benchml.plugins.plugin_soap.SoapBase"]], "soapgylmxx (class in benchml.plugins.plugin_soap)": [[39, "benchml.plugins.plugin_soap.SoapGylmxx"]], "universalsoapbase (class in benchml.plugins.plugin_soap)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase"]], "universalsoapdscribe (class in benchml.plugins.plugin_soap)": [[39, "benchml.plugins.plugin_soap.UniversalSoapDscribe"]], "universalsoapgylmxx (class in benchml.plugins.plugin_soap)": [[39, "benchml.plugins.plugin_soap.UniversalSoapGylmxx"]], "allow_params (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.allow_params"]], "allow_params (benchml.plugins.plugin_soap.universalsoapbase attribute)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase.allow_params"]], "allow_stream (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.allow_stream"]], "benchml.plugins.plugin_soap": [[39, "module-benchml.plugins.plugin_soap"]], "check_available() (benchml.plugins.plugin_soap.soapbase method)": [[39, "benchml.plugins.plugin_soap.SoapBase.check_available"]], "check_available() (benchml.plugins.plugin_soap.universalsoapbase method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase.check_available"]], "check_available() (benchml.plugins.plugin_soap.universalsoapdscribe method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapDscribe.check_available"]], "check_available() (benchml.plugins.plugin_soap.universalsoapgylmxx method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapGylmxx.check_available"]], "default_args (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.default_args"]], "default_args (benchml.plugins.plugin_soap.universalsoapbase attribute)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase.default_args"]], "evaluatesingle() (benchml.plugins.plugin_soap.soapbase method)": [[39, "benchml.plugins.plugin_soap.SoapBase.evaluateSingle"]], "evaluatesingle() (benchml.plugins.plugin_soap.soapgylmxx method)": [[39, "benchml.plugins.plugin_soap.SoapGylmxx.evaluateSingle"]], "evaluatesingle() (benchml.plugins.plugin_soap.universalsoapbase method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase.evaluateSingle"]], "evaluatesingle() (benchml.plugins.plugin_soap.universalsoapdscribe method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapDscribe.evaluateSingle"]], "evaluatesingle() (benchml.plugins.plugin_soap.universalsoapgylmxx method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapGylmxx.evaluateSingle"]], "log (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.log"]], "mapmultisoap() (benchml.plugins.plugin_soap.soapbase method)": [[39, "benchml.plugins.plugin_soap.SoapBase.mapMultiSoap"]], "precompute (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.precompute"]], "req_inputs (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.req_inputs"]], "stream_samples (benchml.plugins.plugin_soap.soapbase attribute)": [[39, "benchml.plugins.plugin_soap.SoapBase.stream_samples"]], "updateparams() (benchml.plugins.plugin_soap.universalsoapbase method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapBase.updateParams"]], "updateparams() (benchml.plugins.plugin_soap.universalsoapdscribe method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapDscribe.updateParams"]], "updateparams() (benchml.plugins.plugin_soap.universalsoapgylmxx method)": [[39, "benchml.plugins.plugin_soap.UniversalSoapGylmxx.updateParams"]], "torchdevice (class in benchml.plugins.plugin_torch)": [[40, "benchml.plugins.plugin_torch.TorchDevice"]], "torchmoduletransform (class in benchml.plugins.plugin_torch)": [[40, "benchml.plugins.plugin_torch.TorchModuleTransform"]], "torchtransformdescriptor (class in benchml.plugins.plugin_torch)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor"]], "allow_stream (benchml.plugins.plugin_torch.torchdevice attribute)": [[40, "benchml.plugins.plugin_torch.TorchDevice.allow_stream"]], "allow_stream (benchml.plugins.plugin_torch.torchtransformdescriptor attribute)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor.allow_stream"]], "benchml.plugins.plugin_torch": [[40, "module-benchml.plugins.plugin_torch"]], "check_available() (benchml.plugins.plugin_torch.torchmoduletransform method)": [[40, "benchml.plugins.plugin_torch.TorchModuleTransform.check_available"]], "default_args (benchml.plugins.plugin_torch.torchmoduletransform attribute)": [[40, "benchml.plugins.plugin_torch.TorchModuleTransform.default_args"]], "default_args (benchml.plugins.plugin_torch.torchtransformdescriptor attribute)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor.default_args"]], "freeze() (benchml.plugins.plugin_torch.torchmoduletransform method)": [[40, "benchml.plugins.plugin_torch.TorchModuleTransform.freeze"]], "precompute (benchml.plugins.plugin_torch.torchtransformdescriptor attribute)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor.precompute"]], "req_args (benchml.plugins.plugin_torch.torchtransformdescriptor attribute)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor.req_args"]], "req_inputs (benchml.plugins.plugin_torch.torchtransformdescriptor attribute)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor.req_inputs"]], "setdevice() (benchml.plugins.plugin_torch.torchmoduletransform method)": [[40, "benchml.plugins.plugin_torch.TorchModuleTransform.setDevice"]], "stream_samples (benchml.plugins.plugin_torch.torchtransformdescriptor attribute)": [[40, "benchml.plugins.plugin_torch.TorchTransformDescriptor.stream_samples"]], "adaboost (class in benchml.predictors)": [[41, "benchml.predictors.AdaBoost"]], "elasticnet (class in benchml.predictors)": [[41, "benchml.predictors.ElasticNet"]], "elasticnetclassifier (class in benchml.predictors)": [[41, "benchml.predictors.ElasticNetClassifier"]], "gaussianprocess (class in benchml.predictors)": [[41, "benchml.predictors.GaussianProcess"]], "gaussianprocessregressor (class in benchml.predictors)": [[41, "benchml.predictors.GaussianProcessRegressor"]], "gradientboosting (class in benchml.predictors)": [[41, "benchml.predictors.GradientBoosting"]], "kneighborsclassifier (class in benchml.predictors)": [[41, "benchml.predictors.KNeighborsClassifier"]], "kneighborsregressor (class in benchml.predictors)": [[41, "benchml.predictors.KNeighborsRegressor"]], "kernelmatern (class in benchml.predictors)": [[41, "benchml.predictors.KernelMatern"]], "kernelridge (class in benchml.predictors)": [[41, "benchml.predictors.KernelRidge"]], "lasso (class in benchml.predictors)": [[41, "benchml.predictors.Lasso"]], "linearregression (class in benchml.predictors)": [[41, "benchml.predictors.LinearRegression"]], "logisticregression (class in benchml.predictors)": [[41, "benchml.predictors.LogisticRegression"]], "ompclassifier (class in benchml.predictors)": [[41, "benchml.predictors.OMPClassifier"]], "orthogonalmatchingpursuit (class in benchml.predictors)": [[41, "benchml.predictors.OrthogonalMatchingPursuit"]], "randomforestclassifier (class in benchml.predictors)": [[41, "benchml.predictors.RandomForestClassifier"]], "randomforestregressor (class in benchml.predictors)": [[41, "benchml.predictors.RandomForestRegressor"]], "residualgaussianprocess (class in benchml.predictors)": [[41, "benchml.predictors.ResidualGaussianProcess"]], "ridge (class in benchml.predictors)": [[41, "benchml.predictors.Ridge"]], "ridgeclassifier (class in benchml.predictors)": [[41, "benchml.predictors.RidgeClassifier"]], "sklearntransform (class in benchml.predictors)": [[41, "benchml.predictors.SklearnTransform"]], "supportvectorclassifier (class in benchml.predictors)": [[41, "benchml.predictors.SupportVectorClassifier"]], "supportvectorregressor (class in benchml.predictors)": [[41, "benchml.predictors.SupportVectorRegressor"]], "allow_params (benchml.predictors.elasticnet attribute)": [[41, "benchml.predictors.ElasticNet.allow_params"]], "allow_params (benchml.predictors.elasticnetclassifier attribute)": [[41, "benchml.predictors.ElasticNetClassifier.allow_params"]], "allow_params (benchml.predictors.gaussianprocess attribute)": [[41, "benchml.predictors.GaussianProcess.allow_params"]], "allow_params (benchml.predictors.gaussianprocessregressor attribute)": [[41, "benchml.predictors.GaussianProcessRegressor.allow_params"]], "allow_params (benchml.predictors.gradientboosting attribute)": [[41, "benchml.predictors.GradientBoosting.allow_params"]], "allow_params (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.allow_params"]], "allow_params (benchml.predictors.kernelridge attribute)": [[41, "benchml.predictors.KernelRidge.allow_params"]], "allow_params (benchml.predictors.linearregression attribute)": [[41, "benchml.predictors.LinearRegression.allow_params"]], "allow_params (benchml.predictors.logisticregression attribute)": [[41, "benchml.predictors.LogisticRegression.allow_params"]], "allow_params (benchml.predictors.ompclassifier attribute)": [[41, "benchml.predictors.OMPClassifier.allow_params"]], "allow_params (benchml.predictors.orthogonalmatchingpursuit attribute)": [[41, "benchml.predictors.OrthogonalMatchingPursuit.allow_params"]], "allow_params (benchml.predictors.randomforestclassifier attribute)": [[41, "benchml.predictors.RandomForestClassifier.allow_params"]], "allow_params (benchml.predictors.randomforestregressor attribute)": [[41, "benchml.predictors.RandomForestRegressor.allow_params"]], "allow_params (benchml.predictors.residualgaussianprocess attribute)": [[41, "benchml.predictors.ResidualGaussianProcess.allow_params"]], "allow_params (benchml.predictors.ridge attribute)": [[41, "benchml.predictors.Ridge.allow_params"]], "allow_params (benchml.predictors.ridgeclassifier attribute)": [[41, "benchml.predictors.RidgeClassifier.allow_params"]], "allow_params (benchml.predictors.supportvectorclassifier attribute)": [[41, "benchml.predictors.SupportVectorClassifier.allow_params"]], "allow_params (benchml.predictors.supportvectorregressor attribute)": [[41, "benchml.predictors.SupportVectorRegressor.allow_params"]], "allow_stream (benchml.predictors.elasticnet attribute)": [[41, "benchml.predictors.ElasticNet.allow_stream"]], "allow_stream (benchml.predictors.elasticnetclassifier attribute)": [[41, "benchml.predictors.ElasticNetClassifier.allow_stream"]], "allow_stream (benchml.predictors.gaussianprocess attribute)": [[41, "benchml.predictors.GaussianProcess.allow_stream"]], "allow_stream (benchml.predictors.gaussianprocessregressor attribute)": [[41, "benchml.predictors.GaussianProcessRegressor.allow_stream"]], "allow_stream (benchml.predictors.gradientboosting attribute)": [[41, "benchml.predictors.GradientBoosting.allow_stream"]], "allow_stream (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.allow_stream"]], "allow_stream (benchml.predictors.kernelridge attribute)": [[41, "benchml.predictors.KernelRidge.allow_stream"]], "allow_stream (benchml.predictors.linearregression attribute)": [[41, "benchml.predictors.LinearRegression.allow_stream"]], "allow_stream (benchml.predictors.logisticregression attribute)": [[41, "benchml.predictors.LogisticRegression.allow_stream"]], "allow_stream (benchml.predictors.ompclassifier attribute)": [[41, "benchml.predictors.OMPClassifier.allow_stream"]], "allow_stream (benchml.predictors.orthogonalmatchingpursuit attribute)": [[41, "benchml.predictors.OrthogonalMatchingPursuit.allow_stream"]], "allow_stream (benchml.predictors.randomforestclassifier attribute)": [[41, "benchml.predictors.RandomForestClassifier.allow_stream"]], "allow_stream (benchml.predictors.randomforestregressor attribute)": [[41, "benchml.predictors.RandomForestRegressor.allow_stream"]], "allow_stream (benchml.predictors.residualgaussianprocess attribute)": [[41, "benchml.predictors.ResidualGaussianProcess.allow_stream"]], "allow_stream (benchml.predictors.ridge attribute)": [[41, "benchml.predictors.Ridge.allow_stream"]], "allow_stream (benchml.predictors.ridgeclassifier attribute)": [[41, "benchml.predictors.RidgeClassifier.allow_stream"]], "allow_stream (benchml.predictors.supportvectorclassifier attribute)": [[41, "benchml.predictors.SupportVectorClassifier.allow_stream"]], "allow_stream (benchml.predictors.supportvectorregressor attribute)": [[41, "benchml.predictors.SupportVectorRegressor.allow_stream"]], "benchml.predictors": [[41, "module-benchml.predictors"]], "check_available() (benchml.predictors.sklearntransform method)": [[41, "benchml.predictors.SklearnTransform.check_available"]], "default_args (benchml.predictors.elasticnet attribute)": [[41, "benchml.predictors.ElasticNet.default_args"]], "default_args (benchml.predictors.elasticnetclassifier attribute)": [[41, "benchml.predictors.ElasticNetClassifier.default_args"]], "default_args (benchml.predictors.gaussianprocess attribute)": [[41, "benchml.predictors.GaussianProcess.default_args"]], "default_args (benchml.predictors.gaussianprocessregressor attribute)": [[41, "benchml.predictors.GaussianProcessRegressor.default_args"]], "default_args (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.default_args"]], "default_args (benchml.predictors.kernelridge attribute)": [[41, "benchml.predictors.KernelRidge.default_args"]], "default_args (benchml.predictors.logisticregression attribute)": [[41, "benchml.predictors.LogisticRegression.default_args"]], "default_args (benchml.predictors.ompclassifier attribute)": [[41, "benchml.predictors.OMPClassifier.default_args"]], "default_args (benchml.predictors.orthogonalmatchingpursuit attribute)": [[41, "benchml.predictors.OrthogonalMatchingPursuit.default_args"]], "default_args (benchml.predictors.randomforestclassifier attribute)": [[41, "benchml.predictors.RandomForestClassifier.default_args"]], "default_args (benchml.predictors.randomforestregressor attribute)": [[41, "benchml.predictors.RandomForestRegressor.default_args"]], "default_args (benchml.predictors.residualgaussianprocess attribute)": [[41, "benchml.predictors.ResidualGaussianProcess.default_args"]], "default_args (benchml.predictors.ridge attribute)": [[41, "benchml.predictors.Ridge.default_args"]], "default_args (benchml.predictors.ridgeclassifier attribute)": [[41, "benchml.predictors.RidgeClassifier.default_args"]], "default_args (benchml.predictors.supportvectorclassifier attribute)": [[41, "benchml.predictors.SupportVectorClassifier.default_args"]], "default_args (benchml.predictors.supportvectorregressor attribute)": [[41, "benchml.predictors.SupportVectorRegressor.default_args"]], "evaluate() (benchml.predictors.kernelmatern method)": [[41, "benchml.predictors.KernelMatern.evaluate"]], "fitresiduals() (benchml.predictors.residualgaussianprocess method)": [[41, "benchml.predictors.ResidualGaussianProcess.fitResiduals"]], "precompute (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.precompute"]], "predicterror() (benchml.predictors.gaussianprocess method)": [[41, "benchml.predictors.GaussianProcess.predictError"]], "rankerror() (benchml.predictors.gaussianprocess method)": [[41, "benchml.predictors.GaussianProcess.rankError"]], "req_args (benchml.predictors.gaussianprocess attribute)": [[41, "benchml.predictors.GaussianProcess.req_args"]], "req_args (benchml.predictors.gaussianprocessregressor attribute)": [[41, "benchml.predictors.GaussianProcessRegressor.req_args"]], "req_args (benchml.predictors.kernelridge attribute)": [[41, "benchml.predictors.KernelRidge.req_args"]], "req_args (benchml.predictors.residualgaussianprocess attribute)": [[41, "benchml.predictors.ResidualGaussianProcess.req_args"]], "req_inputs (benchml.predictors.elasticnet attribute)": [[41, "benchml.predictors.ElasticNet.req_inputs"]], "req_inputs (benchml.predictors.elasticnetclassifier attribute)": [[41, "benchml.predictors.ElasticNetClassifier.req_inputs"]], "req_inputs (benchml.predictors.gaussianprocess attribute)": [[41, "benchml.predictors.GaussianProcess.req_inputs"]], "req_inputs (benchml.predictors.gaussianprocessregressor attribute)": [[41, "benchml.predictors.GaussianProcessRegressor.req_inputs"]], "req_inputs (benchml.predictors.gradientboosting attribute)": [[41, "benchml.predictors.GradientBoosting.req_inputs"]], "req_inputs (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.req_inputs"]], "req_inputs (benchml.predictors.kernelridge attribute)": [[41, "benchml.predictors.KernelRidge.req_inputs"]], "req_inputs (benchml.predictors.linearregression attribute)": [[41, "benchml.predictors.LinearRegression.req_inputs"]], "req_inputs (benchml.predictors.logisticregression attribute)": [[41, "benchml.predictors.LogisticRegression.req_inputs"]], "req_inputs (benchml.predictors.ompclassifier attribute)": [[41, "benchml.predictors.OMPClassifier.req_inputs"]], "req_inputs (benchml.predictors.orthogonalmatchingpursuit attribute)": [[41, "benchml.predictors.OrthogonalMatchingPursuit.req_inputs"]], "req_inputs (benchml.predictors.randomforestclassifier attribute)": [[41, "benchml.predictors.RandomForestClassifier.req_inputs"]], "req_inputs (benchml.predictors.randomforestregressor attribute)": [[41, "benchml.predictors.RandomForestRegressor.req_inputs"]], "req_inputs (benchml.predictors.residualgaussianprocess attribute)": [[41, "benchml.predictors.ResidualGaussianProcess.req_inputs"]], "req_inputs (benchml.predictors.ridge attribute)": [[41, "benchml.predictors.Ridge.req_inputs"]], "req_inputs (benchml.predictors.ridgeclassifier attribute)": [[41, "benchml.predictors.RidgeClassifier.req_inputs"]], "req_inputs (benchml.predictors.supportvectorclassifier attribute)": [[41, "benchml.predictors.SupportVectorClassifier.req_inputs"]], "req_inputs (benchml.predictors.supportvectorregressor attribute)": [[41, "benchml.predictors.SupportVectorRegressor.req_inputs"]], "stream_kernel (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.stream_kernel"]], "stream_samples (benchml.predictors.kernelmatern attribute)": [[41, "benchml.predictors.KernelMatern.stream_samples"]], "zscoreerror() (benchml.predictors.gaussianprocess method)": [[41, "benchml.predictors.GaussianProcess.zscoreError"]], "gaussianprocess (class in benchml.predictors.gaussian_process)": [[42, "benchml.predictors.gaussian_process.GaussianProcess"]], "residualgaussianprocess (class in benchml.predictors.gaussian_process)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess"]], "allow_params (benchml.predictors.gaussian_process.gaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.allow_params"]], "allow_params (benchml.predictors.gaussian_process.residualgaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess.allow_params"]], "allow_stream (benchml.predictors.gaussian_process.gaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.allow_stream"]], "allow_stream (benchml.predictors.gaussian_process.residualgaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess.allow_stream"]], "benchml.predictors.gaussian_process": [[42, "module-benchml.predictors.gaussian_process"]], "default_args (benchml.predictors.gaussian_process.gaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.default_args"]], "default_args (benchml.predictors.gaussian_process.residualgaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess.default_args"]], "fitresiduals() (benchml.predictors.gaussian_process.residualgaussianprocess method)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess.fitResiduals"]], "predicterror() (benchml.predictors.gaussian_process.gaussianprocess method)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.predictError"]], "rankerror() (benchml.predictors.gaussian_process.gaussianprocess method)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.rankError"]], "req_args (benchml.predictors.gaussian_process.gaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.req_args"]], "req_args (benchml.predictors.gaussian_process.residualgaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess.req_args"]], "req_inputs (benchml.predictors.gaussian_process.gaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.req_inputs"]], "req_inputs (benchml.predictors.gaussian_process.residualgaussianprocess attribute)": [[42, "benchml.predictors.gaussian_process.ResidualGaussianProcess.req_inputs"]], "zscoreerror() (benchml.predictors.gaussian_process.gaussianprocess method)": [[42, "benchml.predictors.gaussian_process.GaussianProcess.zscoreError"]], "adaboost (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.AdaBoost"]], "elasticnet (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.ElasticNet"]], "elasticnetclassifier (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.ElasticNetClassifier"]], "gaussianprocessregressor (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.GaussianProcessRegressor"]], "gradientboosting (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.GradientBoosting"]], "kneighborsclassifier (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.KNeighborsClassifier"]], "kneighborsregressor (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.KNeighborsRegressor"]], "kernelmatern (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.KernelMatern"]], "kernelridge (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.KernelRidge"]], "lasso (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.Lasso"]], "linearregression (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.LinearRegression"]], "logisticregression (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.LogisticRegression"]], "ompclassifier (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.OMPClassifier"]], "orthogonalmatchingpursuit (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.OrthogonalMatchingPursuit"]], "randomforestclassifier (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.RandomForestClassifier"]], "randomforestregressor (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.RandomForestRegressor"]], "ridge (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.Ridge"]], "ridgeclassifier (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.RidgeClassifier"]], "sklearntransform (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.SklearnTransform"]], "supportvectorclassifier (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.SupportVectorClassifier"]], "supportvectorregressor (class in benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.SupportVectorRegressor"]], "allow_params (benchml.predictors.pred_sklearn.elasticnet attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNet.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.elasticnetclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNetClassifier.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.gaussianprocessregressor attribute)": [[43, "benchml.predictors.pred_sklearn.GaussianProcessRegressor.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.gradientboosting attribute)": [[43, "benchml.predictors.pred_sklearn.GradientBoosting.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.kernelridge attribute)": [[43, "benchml.predictors.pred_sklearn.KernelRidge.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.linearregression attribute)": [[43, "benchml.predictors.pred_sklearn.LinearRegression.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.logisticregression attribute)": [[43, "benchml.predictors.pred_sklearn.LogisticRegression.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.ompclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.OMPClassifier.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.orthogonalmatchingpursuit attribute)": [[43, "benchml.predictors.pred_sklearn.OrthogonalMatchingPursuit.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.randomforestclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestClassifier.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.randomforestregressor attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestRegressor.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.ridge attribute)": [[43, "benchml.predictors.pred_sklearn.Ridge.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.ridgeclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RidgeClassifier.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.supportvectorclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorClassifier.allow_params"]], "allow_params (benchml.predictors.pred_sklearn.supportvectorregressor attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorRegressor.allow_params"]], "allow_stream (benchml.predictors.pred_sklearn.elasticnet attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNet.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.elasticnetclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNetClassifier.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.gaussianprocessregressor attribute)": [[43, "benchml.predictors.pred_sklearn.GaussianProcessRegressor.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.gradientboosting attribute)": [[43, "benchml.predictors.pred_sklearn.GradientBoosting.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.kernelridge attribute)": [[43, "benchml.predictors.pred_sklearn.KernelRidge.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.linearregression attribute)": [[43, "benchml.predictors.pred_sklearn.LinearRegression.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.logisticregression attribute)": [[43, "benchml.predictors.pred_sklearn.LogisticRegression.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.ompclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.OMPClassifier.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.orthogonalmatchingpursuit attribute)": [[43, "benchml.predictors.pred_sklearn.OrthogonalMatchingPursuit.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.randomforestclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestClassifier.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.randomforestregressor attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestRegressor.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.ridge attribute)": [[43, "benchml.predictors.pred_sklearn.Ridge.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.ridgeclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RidgeClassifier.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.supportvectorclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorClassifier.allow_stream"]], "allow_stream (benchml.predictors.pred_sklearn.supportvectorregressor attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorRegressor.allow_stream"]], "benchml.predictors.pred_sklearn": [[43, "module-benchml.predictors.pred_sklearn"]], "check_available() (benchml.predictors.pred_sklearn.sklearntransform method)": [[43, "benchml.predictors.pred_sklearn.SklearnTransform.check_available"]], "check_sklearn_available() (in module benchml.predictors.pred_sklearn)": [[43, "benchml.predictors.pred_sklearn.check_sklearn_available"]], "default_args (benchml.predictors.pred_sklearn.elasticnet attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNet.default_args"]], "default_args (benchml.predictors.pred_sklearn.elasticnetclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNetClassifier.default_args"]], "default_args (benchml.predictors.pred_sklearn.gaussianprocessregressor attribute)": [[43, "benchml.predictors.pred_sklearn.GaussianProcessRegressor.default_args"]], "default_args (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.default_args"]], "default_args (benchml.predictors.pred_sklearn.kernelridge attribute)": [[43, "benchml.predictors.pred_sklearn.KernelRidge.default_args"]], "default_args (benchml.predictors.pred_sklearn.logisticregression attribute)": [[43, "benchml.predictors.pred_sklearn.LogisticRegression.default_args"]], "default_args (benchml.predictors.pred_sklearn.ompclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.OMPClassifier.default_args"]], "default_args (benchml.predictors.pred_sklearn.orthogonalmatchingpursuit attribute)": [[43, "benchml.predictors.pred_sklearn.OrthogonalMatchingPursuit.default_args"]], "default_args (benchml.predictors.pred_sklearn.randomforestclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestClassifier.default_args"]], "default_args (benchml.predictors.pred_sklearn.randomforestregressor attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestRegressor.default_args"]], "default_args (benchml.predictors.pred_sklearn.ridge attribute)": [[43, "benchml.predictors.pred_sklearn.Ridge.default_args"]], "default_args (benchml.predictors.pred_sklearn.ridgeclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RidgeClassifier.default_args"]], "default_args (benchml.predictors.pred_sklearn.supportvectorclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorClassifier.default_args"]], "default_args (benchml.predictors.pred_sklearn.supportvectorregressor attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorRegressor.default_args"]], "evaluate() (benchml.predictors.pred_sklearn.kernelmatern method)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.evaluate"]], "precompute (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.precompute"]], "req_args (benchml.predictors.pred_sklearn.gaussianprocessregressor attribute)": [[43, "benchml.predictors.pred_sklearn.GaussianProcessRegressor.req_args"]], "req_args (benchml.predictors.pred_sklearn.kernelridge attribute)": [[43, "benchml.predictors.pred_sklearn.KernelRidge.req_args"]], "req_inputs (benchml.predictors.pred_sklearn.elasticnet attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNet.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.elasticnetclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.ElasticNetClassifier.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.gaussianprocessregressor attribute)": [[43, "benchml.predictors.pred_sklearn.GaussianProcessRegressor.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.gradientboosting attribute)": [[43, "benchml.predictors.pred_sklearn.GradientBoosting.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.kernelridge attribute)": [[43, "benchml.predictors.pred_sklearn.KernelRidge.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.linearregression attribute)": [[43, "benchml.predictors.pred_sklearn.LinearRegression.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.logisticregression attribute)": [[43, "benchml.predictors.pred_sklearn.LogisticRegression.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.ompclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.OMPClassifier.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.orthogonalmatchingpursuit attribute)": [[43, "benchml.predictors.pred_sklearn.OrthogonalMatchingPursuit.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.randomforestclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestClassifier.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.randomforestregressor attribute)": [[43, "benchml.predictors.pred_sklearn.RandomForestRegressor.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.ridge attribute)": [[43, "benchml.predictors.pred_sklearn.Ridge.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.ridgeclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.RidgeClassifier.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.supportvectorclassifier attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorClassifier.req_inputs"]], "req_inputs (benchml.predictors.pred_sklearn.supportvectorregressor attribute)": [[43, "benchml.predictors.pred_sklearn.SupportVectorRegressor.req_inputs"]], "stream_kernel (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.stream_kernel"]], "stream_samples (benchml.predictors.pred_sklearn.kernelmatern attribute)": [[43, "benchml.predictors.pred_sklearn.KernelMatern.stream_samples"]], "atomicelement (class in benchml.ptable)": [[44, "benchml.ptable.AtomicElement"]], "periodictable (class in benchml.ptable)": [[44, "benchml.ptable.PeriodicTable"]], "addelement() (benchml.ptable.periodictable method)": [[44, "benchml.ptable.PeriodicTable.addElement"]], "benchml.ptable": [[44, "module-benchml.ptable"]], "element_covrad (benchml.ptable.periodictable attribute)": [[44, "benchml.ptable.PeriodicTable.element_covrad"]], "element_elneg (benchml.ptable.periodictable attribute)": [[44, "benchml.ptable.PeriodicTable.element_elneg"]], "element_mass (benchml.ptable.periodictable attribute)": [[44, "benchml.ptable.PeriodicTable.element_mass"]], "element_names (benchml.ptable.periodictable attribute)": [[44, "benchml.ptable.PeriodicTable.element_names"]], "element_valence (benchml.ptable.periodictable attribute)": [[44, "benchml.ptable.PeriodicTable.element_valence"]], "getpropertydict() (benchml.ptable.periodictable method)": [[44, "benchml.ptable.PeriodicTable.getPropertyDict"]], "setup() (benchml.ptable.periodictable method)": [[44, "benchml.ptable.PeriodicTable.setup"]], "extendedtxt (class in benchml.readwrite)": [[45, "benchml.readwrite.ExtendedTxt"]], "extendedxyz (class in benchml.readwrite)": [[45, "benchml.readwrite.ExtendedXyz"]], "extendedxyzatom (class in benchml.readwrite)": [[45, "benchml.readwrite.ExtendedXyzAtom"]], "benchml.readwrite": [[45, "module-benchml.readwrite"]], "clone() (benchml.readwrite.extendedtxt method)": [[45, "benchml.readwrite.ExtendedTxt.clone"]], "configure() (in module benchml.readwrite)": [[45, "benchml.readwrite.configure"]], "create() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.create"]], "create_atom() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.create_atom"]], "disable_ase() (in module benchml.readwrite)": [[45, "benchml.readwrite.disable_ase"]], "getheavy() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.getHeavy"]], "get_atomic_numbers() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.get_atomic_numbers"]], "get_cell() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.get_cell"]], "get_chemical_symbols() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.get_chemical_symbols"]], "get_positions() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.get_positions"]], "load() (benchml.readwrite.extendedtxt method)": [[45, "benchml.readwrite.ExtendedTxt.load"]], "load() (in module benchml.readwrite)": [[45, "benchml.readwrite.load"]], "padtocutoff() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.padToCutoff"]], "patch_ase_config() (in module benchml.readwrite)": [[45, "benchml.readwrite.patch_ase_config"]], "read() (in module benchml.readwrite)": [[45, "benchml.readwrite.read"]], "read_ase() (in module benchml.readwrite)": [[45, "benchml.readwrite.read_ase"]], "read_extt() (in module benchml.readwrite)": [[45, "benchml.readwrite.read_extt"]], "read_extxyz_meta_only() (in module benchml.readwrite)": [[45, "benchml.readwrite.read_extxyz_meta_only"]], "read_xyz() (in module benchml.readwrite)": [[45, "benchml.readwrite.read_xyz"]], "save() (benchml.readwrite.extendedtxt method)": [[45, "benchml.readwrite.ExtendedTxt.save"]], "save() (in module benchml.readwrite)": [[45, "benchml.readwrite.save"]], "set_pbc() (benchml.readwrite.extendedxyz method)": [[45, "benchml.readwrite.ExtendedXyz.set_pbc"]], "tokenize_extxyz_meta() (in module benchml.readwrite)": [[45, "benchml.readwrite.tokenize_extxyz_meta"]], "write() (in module benchml.readwrite)": [[45, "benchml.readwrite.write"]], "write_extt() (in module benchml.readwrite)": [[45, "benchml.readwrite.write_extt"]], "write_xyz() (in module benchml.readwrite)": [[45, "benchml.readwrite.write_xyz"]], "split() (in module benchml.splits)": [[46, "benchml.splits.Split"]], "splitbase (class in benchml.splits)": [[46, "benchml.splits.SplitBase"]], "splitchronological (class in benchml.splits)": [[46, "benchml.splits.SplitChronological"]], "splitexplicit (class in benchml.splits)": [[46, "benchml.splits.SplitExplicit"]], "splitgrouped (class in benchml.splits)": [[46, "benchml.splits.SplitGrouped"]], "splitjson (class in benchml.splits)": [[46, "benchml.splits.SplitJson"]], "splitkfold (class in benchml.splits)": [[46, "benchml.splits.SplitKfold"]], "splitloo (class in benchml.splits)": [[46, "benchml.splits.SplitLOO"]], "splitlambda (class in benchml.splits)": [[46, "benchml.splits.SplitLambda"]], "splitmc (class in benchml.splits)": [[46, "benchml.splits.SplitMC"]], "splitsequentialmc (class in benchml.splits)": [[46, "benchml.splits.SplitSequentialMC"]], "benchml.splits": [[46, "module-benchml.splits"]], "isdone() (benchml.splits.splitbase method)": [[46, "benchml.splits.SplitBase.isDone"]], "next() (benchml.splits.splitbase method)": [[46, "benchml.splits.SplitBase.next"]], "next() (benchml.splits.splitchronological method)": [[46, "benchml.splits.SplitChronological.next"]], "next() (benchml.splits.splitexplicit method)": [[46, "benchml.splits.SplitExplicit.next"]], "next() (benchml.splits.splitgrouped method)": [[46, "benchml.splits.SplitGrouped.next"]], "next() (benchml.splits.splitjson method)": [[46, "benchml.splits.SplitJson.next"]], "next() (benchml.splits.splitkfold method)": [[46, "benchml.splits.SplitKfold.next"]], "next() (benchml.splits.splitloo method)": [[46, "benchml.splits.SplitLOO.next"]], "next() (benchml.splits.splitlambda method)": [[46, "benchml.splits.SplitLambda.next"]], "next() (benchml.splits.splitmc method)": [[46, "benchml.splits.SplitMC.next"]], "next() (benchml.splits.splitsequentialmc method)": [[46, "benchml.splits.SplitSequentialMC.next"]], "synchronize() (in module benchml.splits)": [[46, "benchml.splits.synchronize"]], "tag (benchml.splits.splitbase attribute)": [[46, "benchml.splits.SplitBase.tag"]], "tag (benchml.splits.splitchronological attribute)": [[46, "benchml.splits.SplitChronological.tag"]], "tag (benchml.splits.splitexplicit attribute)": [[46, "benchml.splits.SplitExplicit.tag"]], "tag (benchml.splits.splitgrouped attribute)": [[46, "benchml.splits.SplitGrouped.tag"]], "tag (benchml.splits.splitjson attribute)": [[46, "benchml.splits.SplitJson.tag"]], "tag (benchml.splits.splitkfold attribute)": [[46, "benchml.splits.SplitKfold.tag"]], "tag (benchml.splits.splitloo attribute)": [[46, "benchml.splits.SplitLOO.tag"]], "tag (benchml.splits.splitlambda attribute)": [[46, "benchml.splits.SplitLambda.tag"]], "tag (benchml.splits.splitmc attribute)": [[46, "benchml.splits.SplitMC.tag"]], "tag (benchml.splits.splitsequentialmc attribute)": [[46, "benchml.splits.SplitSequentialMC.tag"]], "testmock (class in benchml.test)": [[47, "benchml.test.TestMock"]], "assert_array_equal() (in module benchml.test)": [[47, "benchml.test.assert_array_equal"]], "benchml.test": [[47, "module-benchml.test"]], "data_dir (benchml.test.testmock attribute)": [[47, "benchml.test.TestMock.data_dir"]], "getargs() (benchml.test.testmock method)": [[47, "benchml.test.TestMock.getArgs"]], "model_regex (benchml.test.testmock attribute)": [[47, "benchml.test.TestMock.model_regex"]], "path (benchml.test.testmock attribute)": [[47, "benchml.test.TestMock.path"]], "run() (benchml.test.testmock method)": [[47, "benchml.test.TestMock.run"]], "seed (benchml.test.testmock attribute)": [[47, "benchml.test.TestMock.seed"]], "tol (benchml.test.testmock attribute)": [[47, "benchml.test.TestMock.tol"]], "validate() (benchml.test.testmock method)": [[47, "benchml.test.TestMock.validate"]], "benchml.transforms": [[48, "module-benchml.transforms"]], "get_all() (in module benchml.transforms)": [[48, "benchml.transforms.get_all"]], "get_bases_recursive() (in module benchml.transforms)": [[48, "benchml.transforms.get_bases_recursive"]], "list_all() (in module benchml.transforms)": [[48, "benchml.transforms.list_all"]], "transform_info() (in module benchml.transforms)": [[48, "benchml.transforms.transform_info"]], "lineexpansion (class in benchml.utils)": [[49, "benchml.utils.LineExpansion"]], "onehot (class in benchml.utils)": [[49, "benchml.utils.OneHot"]], "stagedtimer (class in benchml.utils)": [[49, "benchml.utils.StagedTimer"]], "benchml.utils": [[49, "module-benchml.utils"]], "dataframe_to_extxyz() (in module benchml.utils)": [[49, "benchml.utils.dataframe_to_extxyz"]], "dim() (benchml.utils.onehot method)": [[49, "benchml.utils.OneHot.dim"]], "expand() (benchml.utils.lineexpansion method)": [[49, "benchml.utils.LineExpansion.expand"]], "get_smiles() (in module benchml.utils)": [[49, "benchml.utils.get_smiles"]], "get_smiles_key() (in module benchml.utils)": [[49, "benchml.utils.get_smiles_key"]], "git_hash() (in module benchml.utils)": [[49, "benchml.utils.git_hash"]], "map() (benchml.utils.onehot method)": [[49, "benchml.utils.OneHot.map"]], "report() (benchml.utils.stagedtimer method)": [[49, "benchml.utils.StagedTimer.report"]], "setup() (benchml.utils.lineexpansion method)": [[49, "benchml.utils.LineExpansion.setup"]], "smiles_to_extxyz() (in module benchml.utils)": [[49, "benchml.utils.smiles_to_extxyz"]], "smiles_to_pseudo_extxyz() (in module benchml.utils)": [[49, "benchml.utils.smiles_to_pseudo_extxyz"]], "time() (benchml.utils.stagedtimer method)": [[49, "benchml.utils.StagedTimer.time"]], "wrap() (benchml.utils.lineexpansion method)": [[49, "benchml.utils.LineExpansion.wrap"]]}})